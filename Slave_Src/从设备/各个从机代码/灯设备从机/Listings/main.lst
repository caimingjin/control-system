C51 COMPILER V9.52.0.0   MAIN                                                              08/19/2018 17:18:13 PAGE 1   


C51 COMPILER V9.52.0.0, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\Objects\main.obj
COMPILER INVOKED BY: D:\KEIL C51\C51\BIN\C51.EXE main.c BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings\main.lst) TABS(2) OBJ
                    -ECT(.\Objects\main.obj)

line level    source

   1          #include "stc15.h"
   2          #include "usart.h"
   3          #include "OLED.h"
   4          #include "light.h"
   5          #define BLE_RST_WAIT_TIME 5  //3*20 60ms 
   6          #define Slave_adrr 0x42 //从设备识别地址A 0x41  B 0x42  C 0x43 D 0x44
   7          unsigned char  BLEReceive[2];
   8          extern unsigned char BLEReceive_buff[2];
   9          extern bit full;
  10          unsigned char time_flag=0;
  11          extern unsigned char Light_sta;
  12          bit read_buff=0;
  13          bit BLE_RST_Flag_bit=0;
  14          unsigned char BLE_RST_Flag=1;//蓝牙复位，避免使用延时，当为零时复位开始，
  15          void Delay25ms()    //@12.000MHz
  16          {
  17   1        unsigned char i, j, k;
  18   1      
  19   1        _nop_();
  20   1        _nop_();
  21   1        i = 2;
  22   1        j = 36;
  23   1        k = 206;
  24   1        do
  25   1        {
  26   2          do
  27   2          {
  28   3            while (--k);
  29   3          } while (--j);
  30   2        } while (--i);
  31   1      }
  32          
  33          
  34          void Timer1Init_main(void)    //20毫秒@12.000MHz
  35          {
  36   1        AUXR &= 0xBF;   //定时器时钟12T模式
  37   1        TMOD &= 0x0F;   //设置定时器模式
  38   1        TL1 = 0xE0;   //设置定时初值
  39   1        TH1 = 0xB1;   //设置定时初值
  40   1        TF1 = 0;    //清除TF1标志
  41   1        TR1 = 1;    //定时器1开始计时
  42   1        ET1=1;
  43   1        EA=1;
  44   1      }
  45          void Delay1ms()   //@12.000MHz
  46          {
  47   1        unsigned char i, j;
  48   1      
  49   1        i = 12;
  50   1        j = 169;
  51   1        do
  52   1        {
  53   2          while (--j);
  54   2        } while (--i);
C51 COMPILER V9.52.0.0   MAIN                                                              08/19/2018 17:18:13 PAGE 2   

  55   1      }
  56          void system_init(void)
  57          {
  58   1        BLE=0;//复位按键
  59   1        Delay1ms();
  60   1        BLE=1;//复位按键
  61   1        P15=1;
  62   1        P14=0;
  63   1        OLED_Init();
  64   1        Usart_init();
  65   1        Timer1Init_main();
  66   1        WriteChinese16x16(0,0,"模拟灯");
  67   1        WriteChinese16x16(1,0,"亮灯个数");
  68   1        WriteStr_8x16(1,65,":");
  69   1      }
  70          
  71          void Check_uart_buff(void)
  72          {
  73   1        unsigned char i=0;
  74   1        if(BLEReceive_buff[0]==Slave_adrr)
  75   1        {
  76   2      //    if(BLEReceive_buff[0]==Slave_adrr && BLEReceive_buff[2]==Slave_adrr )
  77   2      //        if(BLEReceive_buff[1]== BLEReceive_buff[3] )
  78   2      //        {
  79   2                BLEReceive[0]=BLEReceive_buff[0];
  80   2                BLEReceive[1]=BLEReceive_buff[1];
  81   2      //        }
  82   2            for(i=0;i<2;i++)
  83   2            {
  84   3              BLEReceive_buff[i]=0x00;
  85   3            }
  86   2        }
  87   1        if(BLEReceive_buff[1]==Slave_adrr)
  88   1        {
  89   2      //      if(BLEReceive_buff[1]==Slave_adrr && BLEReceive_buff[3]==Slave_adrr )
  90   2      //        if(BLEReceive_buff[2]== BLEReceive_buff[4] )
  91   2      //        {
  92   2                BLEReceive[0]=BLEReceive_buff[1];
  93   2                BLEReceive[1]=BLEReceive_buff[0];
  94   2      //        }
  95   2            for(i=0;i<2;i++)
  96   2            {
  97   3              BLEReceive_buff[i]=0x00;
  98   3            }
  99   2          
 100   2        }
 101   1      
 102   1      }
 103          
 104          void main()
 105          {
 106   1        unsigned char sum=0;
 107   1        system_init();
 108   1        while(1)
 109   1        {
 110   2          if(BLEReceive[0]==Slave_adrr   )//判断接收到数据前八位是否为从机地址
 111   2          {
 112   3            BLEReceive[0]=0x00;//清除
 113   3            switch(BLEReceive[1])//判断后八位对应功能
 114   3            {
 115   4              case 'a':
 116   4                WriteStr_8x16(0,80,"ON");
C51 COMPILER V9.52.0.0   MAIN                                                              08/19/2018 17:18:13 PAGE 3   

 117   4                Light_ON();
 118   4              break;
 119   4              
 120   4              case 'b':
 121   4                WriteStr_8x16(0,80,"OF");
 122   4                Light_Off();
 123   4              break;
 124   4              
 125   4              case 'c':
 126   4                Light_Less();
 127   4              break;
 128   4              
 129   4              case 'd':
 130   4                Light_More();
 131   4                break;
 132   4              
 133   4              case 'e':
 134   4                  Light_Change(Light_MAX);
 135   4              break;
 136   4                
 137   4              case 'f':
 138   4                Light_Change(Light_MID);
 139   4              break;  
 140   4                      
 141   4              case 'g':
 142   4                Light_Change(Light_MIN);
 143   4              break;  
 144   4                  
 145   4              case 'h':
 146   4              break;  
 147   4              
 148   4              case 'i':
 149   4              break;  
 150   4              
 151   4              case 'j':
 152   4              break;  
 153   4            
 154   4            }
 155   3            BLEReceive[1]=0x00;
 156   3      
 157   3          }//
 158   2            
 159   2          PrintNum_8x16(3,0,sum);
 160   2            if(time_flag==1)
 161   2            {
 162   3              time_flag=0;
 163   3              sum++;
 164   3              //if(Light_sta)//如果开机
 165   3              Send_info();
 166   3              if(sum>9)sum=0;
 167   3            }
 168   2            if(read_buff)
 169   2            {
 170   3              read_buff=0;
 171   3              Check_uart_buff();
 172   3              
 173   3            }
 174   2            
 175   2            
 176   2            if(BLE_RST_Flag>=BLE_RST_WAIT_TIME &&BLE_RST_Flag_bit)
 177   2            {   
 178   3              BLE_reset();
C51 COMPILER V9.52.0.0   MAIN                                                              08/19/2018 17:18:13 PAGE 4   

 179   3              BLE_RST_Flag=0;
 180   3              BLE_RST_Flag_bit=0;
 181   3            }
 182   2            
 183   2      
 184   2        }
 185   1      }
 186          //20ms 中断
 187          void tm1_isr() interrupt 3 using 1
 188          {
 189   1          static unsigned char mun;
 190   1        mun++;
 191   1        if(BLE_RST_Flag_bit)
 192   1        {
 193   2          if(BLE_RST_Flag<BLE_RST_WAIT_TIME)
 194   2          BLE_RST_Flag++; 
 195   2        }
 196   1      
 197   1        if(mun%4==0)  //
 198   1        {
 199   2          read_buff=1;  //60ms
 200   2      
 201   2        }
 202   1        if(mun==100)
 203   1        {
 204   2          mun=0;
 205   2          time_flag=1;
 206   2        }
 207   1      }
 208          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    371    ----
   CONSTANT SIZE    =     23    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      5       1
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      2    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
