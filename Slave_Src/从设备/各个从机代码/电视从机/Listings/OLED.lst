C51 COMPILER V9.52.0.0   OLED                                                              08/08/2018 23:40:21 PAGE 1   


C51 COMPILER V9.52.0.0, COMPILATION OF MODULE OLED
OBJECT MODULE PLACED IN .\Objects\OLED.obj
COMPILER INVOKED BY: D:\KEIL C51\C51\BIN\C51.EXE OLED.C BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings\OLED.lst) TABS(2) OBJ
                    -ECT(.\Objects\OLED.obj)

line level    source

   1          /***********************************
   2            ÎÄ¼þÃû£º OLED.C
   3            °æ±¾ºÅ£º V1.0
   4            ×÷  Õß£º FG
   5            Ê±  ¼ä£º 2015-2-7 16:00:59
   6            ±¸  ×¢£º ²Î¿¼ÐÅÒâµç×Ó¿Æ¼¼oled.cÄÚÈÝ
   7          *************************************/
   8          
   9          #include "OLED.H"
  10          #include "stc15.h"
  11          
  12          sbit SCL_OLED       = P1^3;
  13          sbit SDA_OLED       = P1^2;
  14          sbit RST      = P1^1;
  15          sbit DC         = P1^0;
  16          
  17          //²Ù×÷ºº×ÖÊ±£¬ÓÃ»§×ÔÐÐÌæ»»ÏÂÃæºº×Ö¼°±àÂë
  18          const unsigned char code font16x16[] = {"µ±Ç°ÆµµÀÑ¡ÔñÄ£ÄâµçÊÓ±ùÏä¿Õµ÷Ò£¿Ø¡æ"}; //ÕâÀïÖ»¶Ôºº×Ö½øÐÐ±àÂë£¬Çë²
             -»Òª°üº¬×Ö·ûµÄ±àÂë
  19          const unsigned char code font16x16_code[]={
  20          0x00,0x40,0x42,0x44,0x58,0x40,0x40,0x7F,0x40,0x40,0x50,0x48,0xC6,0x00,0x00,0x00,
  21          0x00,0x40,0x44,0x44,0x44,0x44,0x44,0x44,0x44,0x44,0x44,0x44,0xFF,0x00,0x00,0x00,//µ±//0
  22            
  23          0x08,0x08,0xE8,0x29,0x2E,0x28,0xE8,0x08,0x08,0xC8,0x0C,0x0B,0xE8,0x08,0x08,0x00,
  24          0x00,0x00,0xFF,0x09,0x49,0x89,0x7F,0x00,0x00,0x0F,0x40,0x80,0x7F,0x00,0x00,0x00,//Ç°//1
  25            
  26          0x40,0x7C,0x40,0x7F,0x48,0x48,0x40,0xF2,0x12,0x1A,0xD6,0x12,0x12,0xF2,0x02,0x00,
  27          0x90,0x8E,0x40,0x4F,0x20,0x1E,0x80,0x4F,0x20,0x18,0x07,0x10,0x20,0x4F,0x80,0x00,//Æµ//0
  28            
  29          0x40,0x40,0x42,0xCC,0x00,0x08,0xE9,0xAA,0xB8,0xA8,0xA8,0xAA,0xE9,0x08,0x00,0x00,
  30          0x00,0x40,0x20,0x1F,0x20,0x40,0x5F,0x4A,0x4A,0x4A,0x4A,0x4A,0x5F,0x40,0x40,0x00,//µÀ//1
  31            
  32          0x40,0x40,0x42,0xCC,0x00,0x50,0x4E,0xC8,0x48,0x7F,0xC8,0x48,0x48,0x40,0x00,0x00,
  33          0x00,0x40,0x20,0x1F,0x20,0x50,0x4C,0x43,0x40,0x40,0x4F,0x50,0x50,0x5C,0x40,0x00,//Ñ¡//2
  34            
  35          0x10,0x10,0xFF,0x10,0x00,0x82,0x86,0x4A,0x52,0xA2,0x52,0x4A,0x86,0x80,0x80,0x00,
  36          0x42,0x82,0x7F,0x01,0x00,0x10,0x12,0x12,0x12,0xFF,0x12,0x12,0x12,0x10,0x00,0x00,//Ôñ//3
  37            
  38          0x10,0x10,0xD0,0xFF,0x90,0x14,0xE4,0xAF,0xA4,0xA4,0xA4,0xAF,0xE4,0x04,0x00,0x00,
  39          0x04,0x03,0x00,0xFF,0x00,0x89,0x4B,0x2A,0x1A,0x0E,0x1A,0x2A,0x4B,0x88,0x80,0x00,   //Ä£ ¡ú0
  40          0x10,0x10,0x10,0xFF,0x90,0x00,0xF8,0x00,0x02,0x04,0x18,0x00,0xFF,0x00,0x00,0x00,
  41          0x02,0x42,0x81,0x7F,0x00,0x00,0x3F,0x10,0x88,0x40,0x30,0x0C,0x0B,0x30,0xC0,0x00,  //Äâ ¡ú1
  42          /*--  ÎÄ×Ö:  µç  --*/
  43          /*--  ËÎÌå12;  ´Ë×ÖÌåÏÂ¶ÔÓ¦µÄµãÕóÎª£º¿íx¸ß=16x16   --*/
  44          0x00,0x00,0xF8,0x88,0x88,0x88,0x88,0xFF,0x88,0x88,0x88,0x88,0xF8,0x00,0x00,0x00,
  45          0x00,0x00,0x1F,0x08,0x08,0x08,0x08,0x7F,0x88,0x88,0x88,0x88,0x9F,0x80,0xF0,0x00,  //µç  ¡ú0
  46            
  47          /*--  ÎÄ×Ö:  ÊÓ  --*/
  48          /*--  ËÎÌå12;  ´Ë×ÖÌåÏÂ¶ÔÓ¦µÄµãÕóÎª£º¿íx¸ß=16x16   --*/
  49          0x08,0x08,0x89,0xEE,0x98,0x00,0x00,0xFE,0x02,0x02,0xF2,0x02,0x02,0xFE,0x00,0x00,
  50          0x02,0x01,0x00,0xFF,0x00,0x83,0x40,0x23,0x18,0x06,0x01,0x7E,0x80,0x83,0xE0,0x00,  //ÊÓ  ¡ú1
  51          
  52          
  53          
C51 COMPILER V9.52.0.0   OLED                                                              08/08/2018 23:40:21 PAGE 2   

  54          0x00,0x02,0x0C,0xC0,0x00,0x20,0x20,0xE0,0x00,0xFF,0x70,0xA0,0x10,0x08,0x00,0x00,
  55          0x02,0x02,0x7F,0x00,0x10,0x08,0x06,0x41,0x80,0x7F,0x00,0x01,0x06,0x08,0x10,0x00,  //±ù  ¡ú2
  56          
  57          0x20,0x90,0x8C,0x87,0xEC,0x94,0x84,0x14,0xC8,0x47,0x44,0x4C,0x54,0xC4,0x04,0x00,
  58          0x40,0x20,0x18,0x06,0xFF,0x04,0x18,0x00,0xFF,0x92,0x92,0x92,0x92,0xFF,0x00,0x00,  //Ïä  ¡ú3
  59          
  60          
  61          
  62          0x10,0x0C,0x44,0x24,0x14,0x04,0x05,0x06,0x04,0x04,0x14,0x24,0x44,0x14,0x0C,0x00,
  63          0x00,0x40,0x40,0x41,0x41,0x41,0x41,0x7F,0x41,0x41,0x41,0x41,0x40,0x40,0x00,0x00,  //¿Õ  ¡ú0
  64          
  65          0x40,0x42,0xCC,0x00,0x00,0xFE,0x82,0x92,0x92,0xFE,0x92,0x92,0x82,0xFE,0x00,0x00,
  66          0x00,0x00,0x3F,0x10,0x88,0x7F,0x00,0x1E,0x12,0x12,0x12,0x5E,0x80,0x7F,0x00,0x00,  //µ÷  ¡ú1
  67          
  68          
  69          
  70          0x40,0x40,0x42,0xCC,0x00,0x00,0x4A,0x32,0x22,0x2A,0xF1,0x21,0x31,0x2D,0x00,0x00,
  71          0x00,0x80,0x40,0x3F,0x40,0x80,0x81,0xBD,0xA1,0xA1,0xBF,0xA1,0xA1,0xBD,0x81,0x00,  //Ò£  ¡ú0
  72          
  73          0x10,0x10,0x10,0xFF,0x90,0x20,0x98,0x48,0x28,0x09,0x0E,0x28,0x48,0xA8,0x18,0x00,
  74          0x02,0x42,0x81,0x7F,0x00,0x40,0x40,0x42,0x42,0x42,0x7E,0x42,0x42,0x42,0x40,0x00,  //¿Ø  ¡ú1
  75          
  76          
  77          /*--  ÎÄ×Ö:  ¡æ  --*/
  78          /*--  ËÎÌå12;  ´Ë×ÖÌåÏÂ¶ÔÓ¦µÄµãÕóÎª£º¿íx¸ß=16x16   --*/
  79          0x06,0x09,0x09,0xE6,0xF8,0x0C,0x04,0x02,0x02,0x02,0x02,0x02,0x04,0x1E,0x00,0x00,
  80          0x00,0x00,0x00,0x07,0x1F,0x30,0x20,0x40,0x40,0x40,0x40,0x40,0x20,0x10,0x00,0x00,
  81          
  82          };
  83          //======================================================
  84          void Delay_us()
  85          {
  86   1        ;
  87   1      }
  88          
  89          //======================================================
  90          // 128X64OLEDÒº¾§µ×²ãÇý¶¯[6X8]×ÖÌå¿â
  91          // Éè¼ÆÕß: ÐÅÒâ¿Æ¼¼
  92          // Ãè  Êö: [8X16]Î÷ÎÄ×Ö·ûµÄ×ÖÄ£Êý¾Ý (×ÝÏòÈ¡Ä£,×Ö½Úµ¹Ðò)
  93          // !"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\]^_`abcdefghijklmnopqrstuvwxyz{|}~
  94          //±¸×¢£ºÕâÀïÖ±½Ó²ÉÓÃÐÅÒâ¿Æ¼¼Ìá¹©µÄ8*16±àÂë£¬ÓÃ»§Ò²¿É²ÉÓÃ±àÂë¹¤¾ß×ÔÐÐ±àÂë
  95          //======================================================
  96          
  97          const unsigned char code F6x8[][6] ={0};
  98          //{
  99          //    { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },   //sp0
 100          //    { 0x00, 0x00, 0x00, 0x2f, 0x00, 0x00 },   // !1
 101          //    { 0x00, 0x00, 0x07, 0x00, 0x07, 0x00 },   // "2
 102          //    { 0x00, 0x14, 0x7f, 0x14, 0x7f, 0x14 },   // #3
 103          //    { 0x00, 0x24, 0x2a, 0x7f, 0x2a, 0x12 },   // $4
 104          //    { 0x00, 0x62, 0x64, 0x08, 0x13, 0x23 },   // %5
 105          //    { 0x00, 0x36, 0x49, 0x55, 0x22, 0x50 },   // &6
 106          //    { 0x00, 0x00, 0x05, 0x03, 0x00, 0x00 },   // '7
 107          //    { 0x00, 0x00, 0x1c, 0x22, 0x41, 0x00 },   // (8
 108          //    { 0x00, 0x00, 0x41, 0x22, 0x1c, 0x00 },   // )9
 109          //    { 0x00, 0x14, 0x08, 0x3E, 0x08, 0x14 },   // *10
 110          //    { 0x00, 0x08, 0x08, 0x3E, 0x08, 0x08 },   // +11
 111          //    { 0x00, 0x00, 0x00, 0xA0, 0x60, 0x00 },   // ,12
 112          //    { 0x00, 0x08, 0x08, 0x08, 0x08, 0x08 },   // -13
 113          //    { 0x00, 0x00, 0x60, 0x60, 0x00, 0x00 },   // .14
 114          //    { 0x00, 0x20, 0x10, 0x08, 0x04, 0x02 },   // /15
 115          //    { 0x00, 0x3E, 0x51, 0x49, 0x45, 0x3E },   // 016
C51 COMPILER V9.52.0.0   OLED                                                              08/08/2018 23:40:21 PAGE 3   

 116          //    { 0x00, 0x00, 0x42, 0x7F, 0x40, 0x00 },   // 117
 117          //    { 0x00, 0x42, 0x61, 0x51, 0x49, 0x46 },   // 218
 118          //    { 0x00, 0x21, 0x41, 0x45, 0x4B, 0x31 },   // 319
 119          //    { 0x00, 0x18, 0x14, 0x12, 0x7F, 0x10 },   // 420
 120          //    { 0x00, 0x27, 0x45, 0x45, 0x45, 0x39 },   // 521
 121          //    { 0x00, 0x3C, 0x4A, 0x49, 0x49, 0x30 },   // 622
 122          //    { 0x00, 0x01, 0x71, 0x09, 0x05, 0x03 },   // 723
 123          //    { 0x00, 0x36, 0x49, 0x49, 0x49, 0x36 },   // 824
 124          //    { 0x00, 0x06, 0x49, 0x49, 0x29, 0x1E },   // 925
 125          //    { 0x00, 0x00, 0x36, 0x36, 0x00, 0x00 },   // :26
 126          //    { 0x00, 0x00, 0x56, 0x36, 0x00, 0x00 },   // ;27
 127          //    { 0x00, 0x08, 0x14, 0x22, 0x41, 0x00 },   // <28
 128          //    { 0x00, 0x14, 0x14, 0x14, 0x14, 0x14 },   // =29
 129          //    { 0x00, 0x00, 0x41, 0x22, 0x14, 0x08 },   // >30
 130          //    { 0x00, 0x02, 0x01, 0x51, 0x09, 0x06 },   // ?31
 131          //    { 0x00, 0x32, 0x49, 0x59, 0x51, 0x3E },   // @32
 132          //    { 0x00, 0x7C, 0x12, 0x11, 0x12, 0x7C },   // A33
 133          //    { 0x00, 0x7F, 0x49, 0x49, 0x49, 0x36 },   // B34
 134          //    { 0x00, 0x3E, 0x41, 0x41, 0x41, 0x22 },   // C35
 135          //    { 0x00, 0x7F, 0x41, 0x41, 0x22, 0x1C },   // D36
 136          //    { 0x00, 0x7F, 0x49, 0x49, 0x49, 0x41 },   // E37
 137          //    { 0x00, 0x7F, 0x09, 0x09, 0x09, 0x01 },   // F38
 138          //    { 0x00, 0x3E, 0x41, 0x49, 0x49, 0x7A },   // G39
 139          //    { 0x00, 0x7F, 0x08, 0x08, 0x08, 0x7F },   // H40
 140          //    { 0x00, 0x00, 0x41, 0x7F, 0x41, 0x00 },   // I41
 141          //    { 0x00, 0x20, 0x40, 0x41, 0x3F, 0x01 },   // J42
 142          //    { 0x00, 0x7F, 0x08, 0x14, 0x22, 0x41 },   // K43
 143          //    { 0x00, 0x7F, 0x40, 0x40, 0x40, 0x40 },   // L44
 144          //    { 0x00, 0x7F, 0x02, 0x0C, 0x02, 0x7F },   // M45
 145          //    { 0x00, 0x7F, 0x04, 0x08, 0x10, 0x7F },   // N46
 146          //    { 0x00, 0x3E, 0x41, 0x41, 0x41, 0x3E },   // O47
 147          //    { 0x00, 0x7F, 0x09, 0x09, 0x09, 0x06 },   // P48
 148          //    { 0x00, 0x3E, 0x41, 0x51, 0x21, 0x5E },   // Q49
 149          //    { 0x00, 0x7F, 0x09, 0x19, 0x29, 0x46 },   // R50
 150          //    { 0x00, 0x46, 0x49, 0x49, 0x49, 0x31 },   // S51
 151          //    { 0x00, 0x01, 0x01, 0x7F, 0x01, 0x01 },   // T52
 152          //    { 0x00, 0x3F, 0x40, 0x40, 0x40, 0x3F },   // U53
 153          //    { 0x00, 0x1F, 0x20, 0x40, 0x20, 0x1F },   // V54
 154          //    { 0x00, 0x3F, 0x40, 0x38, 0x40, 0x3F },   // W55
 155          //    { 0x00, 0x63, 0x14, 0x08, 0x14, 0x63 },   // X56
 156          //    { 0x00, 0x07, 0x08, 0x70, 0x08, 0x07 },   // Y57
 157          //    { 0x00, 0x61, 0x51, 0x49, 0x45, 0x43 },   // Z58
 158          //    { 0x00, 0x00, 0x7F, 0x41, 0x41, 0x00 },   // [59
 159          //    { 0x00, 0x02, 0x04, 0x08, 0x10, 0x20 },   // \60
 160          //    { 0x00, 0x00, 0x41, 0x41, 0x7F, 0x00 },   // ]61
 161          //    { 0x00, 0x04, 0x02, 0x01, 0x02, 0x04 },   // ^62
 162          //    { 0x00, 0x40, 0x40, 0x40, 0x40, 0x40 },   // _63
 163          //    { 0x00, 0x00, 0x01, 0x02, 0x04, 0x00 },   // '64
 164          //    { 0x00, 0x20, 0x54, 0x54, 0x54, 0x78 },   // a65
 165          //    { 0x00, 0x7F, 0x48, 0x44, 0x44, 0x38 },   // b66
 166          //    { 0x00, 0x38, 0x44, 0x44, 0x44, 0x20 },   // c67
 167          //    { 0x00, 0x38, 0x44, 0x44, 0x48, 0x7F },   // d68
 168          //    { 0x00, 0x38, 0x54, 0x54, 0x54, 0x18 },   // e69
 169          //    { 0x00, 0x08, 0x7E, 0x09, 0x01, 0x02 },   // f70
 170          //    { 0x00, 0x18, 0xA4, 0xA4, 0xA4, 0x7C },   // g71
 171          //    { 0x00, 0x7F, 0x08, 0x04, 0x04, 0x78 },   // h72
 172          //    { 0x00, 0x00, 0x44, 0x7D, 0x40, 0x00 },   // i73
 173          //    { 0x00, 0x40, 0x80, 0x84, 0x7D, 0x00 },   // j74
 174          //    { 0x00, 0x7F, 0x10, 0x28, 0x44, 0x00 },   // k75
 175          //    { 0x00, 0x00, 0x41, 0x7F, 0x40, 0x00 },   // l76
 176          //    { 0x00, 0x7C, 0x04, 0x18, 0x04, 0x78 },   // m77
 177          //    { 0x00, 0x7C, 0x08, 0x04, 0x04, 0x78 },   // n78
C51 COMPILER V9.52.0.0   OLED                                                              08/08/2018 23:40:21 PAGE 4   

 178          //    { 0x00, 0x38, 0x44, 0x44, 0x44, 0x38 },   // o79
 179          //    { 0x00, 0xFC, 0x24, 0x24, 0x24, 0x18 },   // p80
 180          //    { 0x00, 0x18, 0x24, 0x24, 0x18, 0xFC },   // q81
 181          //    { 0x00, 0x7C, 0x08, 0x04, 0x04, 0x08 },   // r82
 182          //    { 0x00, 0x48, 0x54, 0x54, 0x54, 0x20 },   // s83
 183          //    { 0x00, 0x04, 0x3F, 0x44, 0x40, 0x20 },   // t84
 184          //    { 0x00, 0x3C, 0x40, 0x40, 0x20, 0x7C },   // u85
 185          //    { 0x00, 0x1C, 0x20, 0x40, 0x20, 0x1C },   // v86
 186          //    { 0x00, 0x3C, 0x40, 0x30, 0x40, 0x3C },   // w87
 187          //    { 0x00, 0x44, 0x28, 0x10, 0x28, 0x44 },   // x88
 188          //    { 0x00, 0x1C, 0xA0, 0xA0, 0xA0, 0x7C },   // y89
 189          //    { 0x00, 0x44, 0x64, 0x54, 0x4C, 0x44 },   // z90
 190          //    { 0x14, 0x14, 0x14, 0x14, 0x14, 0x14 }    // horiz lines91
 191          //};
 192          
 193          //======================================================
 194          // 128X64OLEDÒº¾§µ×²ãÇý¶¯[8X16]×ÖÌå¿â
 195          // Éè¼ÆÕß: ÐÅÒâ¿Æ¼¼
 196          // Ãè  Êö: [8X16]Î÷ÎÄ×Ö·ûµÄ×ÖÄ£Êý¾Ý (×ÝÏòÈ¡Ä£,×Ö½Úµ¹Ðò)
 197          // !"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\]^_`abcdefghijklmnopqrstuvwxyz{|}~
 198          //±¸×¢£ºÕâÀïÖ±½Ó²ÉÓÃÐÅÒâ¿Æ¼¼Ìá¹©µÄ8*16±àÂë£¬ÓÃ»§Ò²¿É²ÉÓÃ±àÂë¹¤¾ß×ÔÐÐ±àÂë
 199          //======================================================
 200          
 201          const unsigned char code F8X16[][16]=
 202          {
 203              {0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00},// 0
 204              {0x00,0x00,0x00,0xF8,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x33,0x30,0x00,0x00,0x00},//!1
 205              {0x00,0x10,0x0C,0x06,0x10,0x0C,0x06,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00},//"2
 206              {0x40,0xC0,0x78,0x40,0xC0,0x78,0x40,0x00,0x04,0x3F,0x04,0x04,0x3F,0x04,0x04,0x00},//#3
 207              {0x00,0x70,0x88,0xFC,0x08,0x30,0x00,0x00,0x00,0x18,0x20,0xFF,0x21,0x1E,0x00,0x00},//$4
 208              {0xF0,0x08,0xF0,0x00,0xE0,0x18,0x00,0x00,0x00,0x21,0x1C,0x03,0x1E,0x21,0x1E,0x00},//%5
 209              {0x00,0xF0,0x08,0x88,0x70,0x00,0x00,0x00,0x1E,0x21,0x23,0x24,0x19,0x27,0x21,0x10},//&6
 210              {0x10,0x16,0x0E,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00},//'7
 211              {0x00,0x00,0x00,0xE0,0x18,0x04,0x02,0x00,0x00,0x00,0x00,0x07,0x18,0x20,0x40,0x00},//(8
 212              {0x00,0x02,0x04,0x18,0xE0,0x00,0x00,0x00,0x00,0x40,0x20,0x18,0x07,0x00,0x00,0x00},//)9
 213              {0x40,0x40,0x80,0xF0,0x80,0x40,0x40,0x00,0x02,0x02,0x01,0x0F,0x01,0x02,0x02,0x00},//*10
 214              {0x00,0x00,0x00,0xF0,0x00,0x00,0x00,0x00,0x01,0x01,0x01,0x1F,0x01,0x01,0x01,0x00},//+11
 215              {0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x80,0xB0,0x70,0x00,0x00,0x00,0x00,0x00},//,12
 216              {0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x01,0x01,0x01,0x01,0x01,0x01,0x01},//-13
 217              {0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x30,0x30,0x00,0x00,0x00,0x00,0x00},//.14
 218              {0x00,0x00,0x00,0x00,0x80,0x60,0x18,0x04,0x00,0x60,0x18,0x06,0x01,0x00,0x00,0x00},///15
 219              {0x00,0xE0,0x10,0x08,0x08,0x10,0xE0,0x00,0x00,0x0F,0x10,0x20,0x20,0x10,0x0F,0x00},//016
 220              {0x00,0x10,0x10,0xF8,0x00,0x00,0x00,0x00,0x00,0x20,0x20,0x3F,0x20,0x20,0x00,0x00},//117
 221              {0x00,0x70,0x08,0x08,0x08,0x88,0x70,0x00,0x00,0x30,0x28,0x24,0x22,0x21,0x30,0x00},//218
 222              {0x00,0x30,0x08,0x88,0x88,0x48,0x30,0x00,0x00,0x18,0x20,0x20,0x20,0x11,0x0E,0x00},//319
 223              {0x00,0x00,0xC0,0x20,0x10,0xF8,0x00,0x00,0x00,0x07,0x04,0x24,0x24,0x3F,0x24,0x00},//420
 224              {0x00,0xF8,0x08,0x88,0x88,0x08,0x08,0x00,0x00,0x19,0x21,0x20,0x20,0x11,0x0E,0x00},//521
 225              {0x00,0xE0,0x10,0x88,0x88,0x18,0x00,0x00,0x00,0x0F,0x11,0x20,0x20,0x11,0x0E,0x00},//622
 226              {0x00,0x38,0x08,0x08,0xC8,0x38,0x08,0x00,0x00,0x00,0x00,0x3F,0x00,0x00,0x00,0x00},//723
 227              {0x00,0x70,0x88,0x08,0x08,0x88,0x70,0x00,0x00,0x1C,0x22,0x21,0x21,0x22,0x1C,0x00},//824
 228              {0x00,0xE0,0x10,0x08,0x08,0x10,0xE0,0x00,0x00,0x00,0x31,0x22,0x22,0x11,0x0F,0x00},//925
 229              {0x00,0x00,0x00,0xC0,0xC0,0x00,0x00,0x00,0x00,0x00,0x00,0x30,0x30,0x00,0x00,0x00},//:26
 230              {0x00,0x00,0x00,0x80,0x00,0x00,0x00,0x00,0x00,0x00,0x80,0x60,0x00,0x00,0x00,0x00},//;27
 231              {0x00,0x00,0x80,0x40,0x20,0x10,0x08,0x00,0x00,0x01,0x02,0x04,0x08,0x10,0x20,0x00},//<28
 232              {0x40,0x40,0x40,0x40,0x40,0x40,0x40,0x00,0x04,0x04,0x04,0x04,0x04,0x04,0x04,0x00},//=29
 233              {0x00,0x08,0x10,0x20,0x40,0x80,0x00,0x00,0x00,0x20,0x10,0x08,0x04,0x02,0x01,0x00},//>30
 234              {0x00,0x70,0x48,0x08,0x08,0x08,0xF0,0x00,0x00,0x00,0x00,0x30,0x36,0x01,0x00,0x00},//?31
 235              {0xC0,0x30,0xC8,0x28,0xE8,0x10,0xE0,0x00,0x07,0x18,0x27,0x24,0x23,0x14,0x0B,0x00},//@32
 236              {0x00,0x00,0xC0,0x38,0xE0,0x00,0x00,0x00,0x20,0x3C,0x23,0x02,0x02,0x27,0x38,0x20},//A33
 237              {0x08,0xF8,0x88,0x88,0x88,0x70,0x00,0x00,0x20,0x3F,0x20,0x20,0x20,0x11,0x0E,0x00},//B34
 238              {0xC0,0x30,0x08,0x08,0x08,0x08,0x38,0x00,0x07,0x18,0x20,0x20,0x20,0x10,0x08,0x00},//C35
 239              {0x08,0xF8,0x08,0x08,0x08,0x10,0xE0,0x00,0x20,0x3F,0x20,0x20,0x20,0x10,0x0F,0x00},//D36
C51 COMPILER V9.52.0.0   OLED                                                              08/08/2018 23:40:21 PAGE 5   

 240              {0x08,0xF8,0x88,0x88,0xE8,0x08,0x10,0x00,0x20,0x3F,0x20,0x20,0x23,0x20,0x18,0x00},//E37
 241              {0x08,0xF8,0x88,0x88,0xE8,0x08,0x10,0x00,0x20,0x3F,0x20,0x00,0x03,0x00,0x00,0x00},//F38
 242              {0xC0,0x30,0x08,0x08,0x08,0x38,0x00,0x00,0x07,0x18,0x20,0x20,0x22,0x1E,0x02,0x00},//G39
 243              {0x08,0xF8,0x08,0x00,0x00,0x08,0xF8,0x08,0x20,0x3F,0x21,0x01,0x01,0x21,0x3F,0x20},//H40
 244              {0x00,0x08,0x08,0xF8,0x08,0x08,0x00,0x00,0x00,0x20,0x20,0x3F,0x20,0x20,0x00,0x00},//I41
 245              {0x00,0x00,0x08,0x08,0xF8,0x08,0x08,0x00,0xC0,0x80,0x80,0x80,0x7F,0x00,0x00,0x00},//J42
 246              {0x08,0xF8,0x88,0xC0,0x28,0x18,0x08,0x00,0x20,0x3F,0x20,0x01,0x26,0x38,0x20,0x00},//K43
 247              {0x08,0xF8,0x08,0x00,0x00,0x00,0x00,0x00,0x20,0x3F,0x20,0x20,0x20,0x20,0x30,0x00},//L44
 248              {0x08,0xF8,0xF8,0x00,0xF8,0xF8,0x08,0x00,0x20,0x3F,0x00,0x3F,0x00,0x3F,0x20,0x00},//M45
 249              {0x08,0xF8,0x30,0xC0,0x00,0x08,0xF8,0x08,0x20,0x3F,0x20,0x00,0x07,0x18,0x3F,0x00},//N46
 250              {0xE0,0x10,0x08,0x08,0x08,0x10,0xE0,0x00,0x0F,0x10,0x20,0x20,0x20,0x10,0x0F,0x00},//O47
 251              {0x08,0xF8,0x08,0x08,0x08,0x08,0xF0,0x00,0x20,0x3F,0x21,0x01,0x01,0x01,0x00,0x00},//P48
 252              {0xE0,0x10,0x08,0x08,0x08,0x10,0xE0,0x00,0x0F,0x18,0x24,0x24,0x38,0x50,0x4F,0x00},//Q49
 253              {0x08,0xF8,0x88,0x88,0x88,0x88,0x70,0x00,0x20,0x3F,0x20,0x00,0x03,0x0C,0x30,0x20},//R50
 254              {0x00,0x70,0x88,0x08,0x08,0x08,0x38,0x00,0x00,0x38,0x20,0x21,0x21,0x22,0x1C,0x00},//S51
 255              {0x18,0x08,0x08,0xF8,0x08,0x08,0x18,0x00,0x00,0x00,0x20,0x3F,0x20,0x00,0x00,0x00},//T52
 256              {0x08,0xF8,0x08,0x00,0x00,0x08,0xF8,0x08,0x00,0x1F,0x20,0x20,0x20,0x20,0x1F,0x00},//U53
 257              {0x08,0x78,0x88,0x00,0x00,0xC8,0x38,0x08,0x00,0x00,0x07,0x38,0x0E,0x01,0x00,0x00},//V54
 258              {0xF8,0x08,0x00,0xF8,0x00,0x08,0xF8,0x00,0x03,0x3C,0x07,0x00,0x07,0x3C,0x03,0x00},//W55
 259              {0x08,0x18,0x68,0x80,0x80,0x68,0x18,0x08,0x20,0x30,0x2C,0x03,0x03,0x2C,0x30,0x20},//X56
 260              {0x08,0x38,0xC8,0x00,0xC8,0x38,0x08,0x00,0x00,0x00,0x20,0x3F,0x20,0x00,0x00,0x00},//Y57
 261              {0x10,0x08,0x08,0x08,0xC8,0x38,0x08,0x00,0x20,0x38,0x26,0x21,0x20,0x20,0x18,0x00},//Z58
 262              {0x00,0x00,0x00,0xFE,0x02,0x02,0x02,0x00,0x00,0x00,0x00,0x7F,0x40,0x40,0x40,0x00},//[59
 263              {0x00,0x0C,0x30,0xC0,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x01,0x06,0x38,0xC0,0x00},//\60
 264              {0x00,0x02,0x02,0x02,0xFE,0x00,0x00,0x00,0x00,0x40,0x40,0x40,0x7F,0x00,0x00,0x00},//]61
 265              {0x00,0x00,0x04,0x02,0x02,0x02,0x04,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00},//^62
 266              {0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80},//_63
 267              {0x00,0x02,0x02,0x04,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00},//`64
 268              {0x00,0x00,0x80,0x80,0x80,0x80,0x00,0x00,0x00,0x19,0x24,0x22,0x22,0x22,0x3F,0x20},//a65
 269              {0x08,0xF8,0x00,0x80,0x80,0x00,0x00,0x00,0x00,0x3F,0x11,0x20,0x20,0x11,0x0E,0x00},//b66
 270              {0x00,0x00,0x00,0x80,0x80,0x80,0x00,0x00,0x00,0x0E,0x11,0x20,0x20,0x20,0x11,0x00},//c67
 271              {0x00,0x00,0x00,0x80,0x80,0x88,0xF8,0x00,0x00,0x0E,0x11,0x20,0x20,0x10,0x3F,0x20},//d68
 272              {0x00,0x00,0x80,0x80,0x80,0x80,0x00,0x00,0x00,0x1F,0x22,0x22,0x22,0x22,0x13,0x00},//e69
 273              {0x00,0x80,0x80,0xF0,0x88,0x88,0x88,0x18,0x00,0x20,0x20,0x3F,0x20,0x20,0x00,0x00},//f70
 274              {0x00,0x00,0x80,0x80,0x80,0x80,0x80,0x00,0x00,0x6B,0x94,0x94,0x94,0x93,0x60,0x00},//g71
 275              {0x08,0xF8,0x00,0x80,0x80,0x80,0x00,0x00,0x20,0x3F,0x21,0x00,0x00,0x20,0x3F,0x20},//h72
 276              {0x00,0x80,0x98,0x98,0x00,0x00,0x00,0x00,0x00,0x20,0x20,0x3F,0x20,0x20,0x00,0x00},//i73
 277              {0x00,0x00,0x00,0x80,0x98,0x98,0x00,0x00,0x00,0xC0,0x80,0x80,0x80,0x7F,0x00,0x00},//j74
 278              {0x08,0xF8,0x00,0x00,0x80,0x80,0x80,0x00,0x20,0x3F,0x24,0x02,0x2D,0x30,0x20,0x00},//k75
 279              {0x00,0x08,0x08,0xF8,0x00,0x00,0x00,0x00,0x00,0x20,0x20,0x3F,0x20,0x20,0x00,0x00},//l76
 280              {0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x00,0x20,0x3F,0x20,0x00,0x3F,0x20,0x00,0x3F},//m77
 281              {0x80,0x80,0x00,0x80,0x80,0x80,0x00,0x00,0x20,0x3F,0x21,0x00,0x00,0x20,0x3F,0x20},//n78
 282              {0x00,0x00,0x80,0x80,0x80,0x80,0x00,0x00,0x00,0x1F,0x20,0x20,0x20,0x20,0x1F,0x00},//o79
 283              {0x80,0x80,0x00,0x80,0x80,0x00,0x00,0x00,0x80,0xFF,0xA1,0x20,0x20,0x11,0x0E,0x00},//p80
 284              {0x00,0x00,0x00,0x80,0x80,0x80,0x80,0x00,0x00,0x0E,0x11,0x20,0x20,0xA0,0xFF,0x80},//q81
 285              {0x80,0x80,0x80,0x00,0x80,0x80,0x80,0x00,0x20,0x20,0x3F,0x21,0x20,0x00,0x01,0x00},//r82
 286              {0x00,0x00,0x80,0x80,0x80,0x80,0x80,0x00,0x00,0x33,0x24,0x24,0x24,0x24,0x19,0x00},//s83
 287              {0x00,0x80,0x80,0xE0,0x80,0x80,0x00,0x00,0x00,0x00,0x00,0x1F,0x20,0x20,0x00,0x00},//t84
 288              {0x80,0x80,0x00,0x00,0x00,0x80,0x80,0x00,0x00,0x1F,0x20,0x20,0x20,0x10,0x3F,0x20},//u85
 289              {0x80,0x80,0x80,0x00,0x00,0x80,0x80,0x80,0x00,0x01,0x0E,0x30,0x08,0x06,0x01,0x00},//v86
 290              {0x80,0x80,0x00,0x80,0x00,0x80,0x80,0x80,0x0F,0x30,0x0C,0x03,0x0C,0x30,0x0F,0x00},//w87
 291              {0x00,0x80,0x80,0x00,0x80,0x80,0x80,0x00,0x00,0x20,0x31,0x2E,0x0E,0x31,0x20,0x00},//x88
 292              {0x80,0x80,0x80,0x00,0x00,0x80,0x80,0x80,0x80,0x81,0x8E,0x70,0x18,0x06,0x01,0x00},//y89
 293              {0x00,0x80,0x80,0x80,0x80,0x80,0x80,0x00,0x00,0x21,0x30,0x2C,0x22,0x21,0x30,0x00},//z90
 294              {0x00,0x00,0x00,0x00,0x80,0x7C,0x02,0x02,0x00,0x00,0x00,0x00,0x00,0x3F,0x40,0x40},//{91
 295              {0x00,0x00,0x00,0x00,0xFF,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xFF,0x00,0x00,0x00},//|92
 296              {0x00,0x02,0x02,0x7C,0x80,0x00,0x00,0x00,0x00,0x40,0x40,0x3F,0x00,0x00,0x00,0x00},//}93
 297              {0x00,0x06,0x01,0x01,0x02,0x02,0x04,0x04,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00},//~94
 298          };
 299          
 300          /*----------------------------------------------------------------------------*
 301           * ÄÚ²¿º¯ÊýÔ­ÐÍ                                                               *
C51 COMPILER V9.52.0.0   OLED                                                              08/08/2018 23:40:21 PAGE 6   

 302           *----------------------------------------------------------------------------*/
 303          void WriteDat(unsigned char Dat);
 304          void WriteCmd(unsigned char Cmd);
 305          void SetPos(unsigned char Page, unsigned char Column);
 306          void FillScreen(unsigned char Dat);
 307          void SetAddressMode(unsigned char  AddMode);                   //È¡ÖµÎª0~2
 308          void SetStartPage(unsigned char StartPage);                      //ÓÃÓÚÒ³µØÖ·Ä£Ê½
 309          void SetStartColumn(unsigned char StartColumn);                //ÓÃÓÚÒ³µØÖ·Ä£Ê½
 310          void SetPageAddress(unsigned char Start, unsigned char End);   //×¢£º¸Ãº¯Êý½öÓÃÓÚË®Æ½µØÖ·»ò´¹Ö±µØÖ·Ä£Ê½
 311          void SetColumnAddress(unsigned char Start, unsigned char End);   //×¢£º¸Ãº¯Êý½öÓÃÓÚË®Æ½µØÖ·»ò´¹Ö±µØÖ·Ä£Ê½
 312          void SetStartLine(unsigned char StartLine);                      //È¡Öµ£º0~63
 313          void SetContrast(unsigned char ContrastValue);                   //È¡Öµ·¶Î§Îª0~255¹²256¼¶¶Ô±È¶È
 314          void SetChargePump(unsigned char  on);                           //0£º¹Ø±ÕµçºÉ±Ã£»1£º¿ªÆôµçºÉ±Ã
 315          void SetCommonRemap(unsigned char Dat);                          //ÉèÖÃCOMÊä³öµÄÉ¨Ãè·½Ïò
 316          void SetSegmentRemap(unsigned char Dat);                       //ÉèÖÃsegmentµÄÖØÓ³Éä
 317          void SetEntireDisplay(unsigned char OnMode);                   // 0: Õý³£ÏÔÊ¾
 318          void SetInverseDisplay(unsigned char InverseValue);          // ·´°×ÏÔÊ¾¿ª/¹Ø
 319          void SetMultiplexRatio(unsigned char Ratio);                   //È¡Öµ£º0~63
 320          void SetDisplayOnOff(unsigned char on);                          // ÉèÖÃÏÔÊ¾¿ª/¹Ø
 321          void SetDisplayOffset(unsigned char OffsetValue);
 322          void SetDisplayClock(unsigned char Value);
 323          void SetPrechargePeriod(unsigned char Value);                    // ÉèÖÃÔ¤³äµçÖÜÆÚ£¬È±Ê¡Îª0x22
 324          void SetCommonConfig(unsigned char Dat);                       // È±Ê¡ => 0x12 (0x10)
 325          void SetVCOMH(unsigned char Dat);                                //Dat¸ñÊ½£º 0xxx_0000
 326          void SetNop(void);
 327          void OLED_Init(void);
 328          void WriteChar_6x8(unsigned char Page,unsigned char Column, unsigned char Dat);
 329          void WriteStr_8x16(unsigned char Page, unsigned char Column, unsigned char Str[]);
 330          void WriteChinese16x16(unsigned char Page,unsigned char Column,unsigned char Str[]);
 331          void WriteMixStrXx16(unsigned char Page, unsigned char Column, unsigned char Str[]);
 332          void PrintChar(unsigned char Page, unsigned char Column, char Dat);
 333          void PrintShort(unsigned char Page, unsigned char Column, int Dat);
 334          void PrintImage(unsigned char ImageTable[], unsigned char RowNum, unsigned char ColumnNum);
 335          
 336          
 337          /*----------------------------------------------------------------------------*
 338           * Íâ²¿º¯ÊýÔ­ÐÍ                                                               *
 339           *----------------------------------------------------------------------------*/
 340          
 341          /*****************************************************************************
 342           º¯ Êý Ãû  : WriteDat
 343           ¹¦ÄÜÃèÊö  : ÏòOLEDÐ´Êý¾Ý
 344           ÊäÈë²ÎÊý  : unsigned char   Dat
 345           Êä³ö²ÎÊý  : NONE
 346           ·µ »Ø Öµ  : NONE
 347          *****************************************************************************/
 348          void WriteDat(unsigned char Dat)
 349          {
 350   1          unsigned char i;
 351   1      
 352   1          for(i=0;i<8;i++)
 353   1          { 
 354   2          DC   = 1;           //Ð´Êý¾Ý
 355   2            SCL_OLED  = 0;            //SCL_OLEDÀ­µÍ£¬ÎªÊý¾Ý½»»»×ö×¼±¸
 356   2          Delay_us();
 357   2      
 358   2              if (Dat&0x80)           //ÏÈ·¢ËÍ×î¸ßÎ»
 359   2                  SDA_OLED = 1;
 360   2              else
 361   2                  SDA_OLED = 0;
 362   2      
 363   2              SCL_OLED = 1;             //ÉÏÉýÑØËø´æÊý¾Ýµ½OLED
C51 COMPILER V9.52.0.0   OLED                                                              08/08/2018 23:40:21 PAGE 7   

 364   2              Delay_us();   
 365   2              Dat <<= 1;    
 366   2          }
 367   1      }
 368          
 369          /*****************************************************************************
 370           º¯ Êý Ãû  : WriteCmd
 371           ¹¦ÄÜÃèÊö  : ÏòOLEDÐ´ÃüÁî
 372           ÊäÈë²ÎÊý  : unsigned char Cmd  
 373           Êä³ö²ÎÊý  : NONE
 374           ·µ »Ø Öµ  : NONE
 375          *****************************************************************************/
 376          void WriteCmd(unsigned char Cmd)
 377          {
 378   1             unsigned char i;
 379   1      
 380   1          for(i=0;i<8;i++)
 381   1          { 
 382   2          DC   = 0;           //Ð´ÃüÁî
 383   2            SCL_OLED  = 0;            //SCL_OLEDÀ­µÍ£¬ÎªÊý¾Ý½»»»×ö×¼±¸
 384   2          Delay_us();
 385   2      
 386   2              if (Cmd&0x80)           //ÏÈ·¢ËÍ×î¸ßÎ»
 387   2                  SDA_OLED = 1;
 388   2              else
 389   2                  SDA_OLED = 0;
 390   2      
 391   2              SCL_OLED = 1;             //ÉÏÉýÑØËø´æÊý¾Ýµ½OLED
 392   2              Delay_us();   
 393   2              Cmd <<= 1;    
 394   2          }
 395   1      }
 396          
 397          /*****************************************************************************
 398           º¯ Êý Ãû  : SetPos
 399           ¹¦ÄÜÃèÊö  : ÉèÖÃ×ø±ê
 400           ÊäÈë²ÎÊý  : unsigned char Page 
 401                       unsigned char Column  
 402           Êä³ö²ÎÊý  : NONE
 403           ·µ »Ø Öµ  : NONE
 404          *****************************************************************************/
 405          void SetPos(unsigned char Page, unsigned char Column)          //Column(ÁÐ)È¡Öµ0~127£¬Page(Ò³)È¡Öµ0~7
 406          { 
 407   1          WriteCmd(0xb0 + Page);           //Ò³Ä£Ê½ÏÂ£¬ÉèÖÃÒ³Ê×µØÖ·£¬pageµÄÈ¡Öµ£º0~7
 408   1          WriteCmd(((Column & 0xf0) >> 4) | 0x10);   //ÁÐÖµ¶ÔÓ¦µÄ¸ßËÄÎ»ÃüÁî£º 0001_X7X6X5X4
 409   1          WriteCmd(( Column & 0x0f) | 0x00);     //ÁÐÖµ¶ÔÓ¦µÄµÍËÄÎ»ÃüÁî£º 0000_X3X2X1X0
 410   1      } 
 411          
 412          /*****************************************************************************
 413           º¯ Êý Ãû  : FillScreen
 414           ¹¦ÄÜÃèÊö  : ¶ÔÈ«ÆÁÐ´ÈëÍ¬Ò»¸ö×Ö·û 
 415                       Èç LED_Fill(0x01);    ¶ÔÓÚÄ³Ò»Î»0Îª²»ÁÁ 1ÎªÁÁ
 416                      ------------------------------------------------------
 417                                          ¹²128ÁÐ
 418                            1           1                1   LSB
 419                        ¹²  0           0                0  ¡ü
 420                        8   0           0                0  |
 421             ´Ë         ×é  0       ¡­¡­0     ¡­¡­¡­¡­   0        |
 422             Îª         ×Ö  0           0                0  |
 423             Ò»         ·û  0           0                0  |
 424             Ò³         ¼´  0           0                0  |
 425                        8   0           0                0  MSB
C51 COMPILER V9.52.0.0   OLED                                                              08/08/2018 23:40:21 PAGE 8   

 426          ---------------------------------------------¡ª-------------
 427                        Ò³  1           1                1
 428                        64  0           0                0
 429                        ÐÐ  .           .                .
 430                            .           .    ¡­¡­¡­¡­    .
 431                            .           .                . 
 432                            .           .                .
 433                            0           0                0
 434                      ------------------------------------------------------
 435           ÊäÈë²ÎÊý  : unsigned char Dat  
 436           Êä³ö²ÎÊý  : NONE
 437           ·µ »Ø Öµ  : NONE
 438          *****************************************************************************/
 439          void FillScreen(unsigned char Dat)
 440          {
 441   1          unsigned char Page,Column;
 442   1          
 443   1          for(Page = 0; Page < 8; Page++)
 444   1          {
 445   2              WriteCmd(0xb0 + Page);                  //0xb0+0~7±íÊ¾Ò³0~7£¬Ö¸¶¨Ò³µÄ¿ªÊ¼Î»ÖÃ
 446   2              WriteCmd(0x00);                         //0x00+0~16±íÊ¾½«128ÁÐ·Ö³É16×éÆäµØÖ·ÔÚÄ³×éÖÐµÄµÚ¼¸ÁÐ
 447   2              WriteCmd(0x10);                         //0x10+0~16±íÊ¾½«128ÁÐ·Ö³É16×éÆäµØÖ·ËùÔÚµÚ¼¸×é
 448   2              for(Column = 0; Column < 128; Column++)  //Ð´128ÁÐ
 449   2              {
 450   3                  WriteDat(Dat);
 451   3              }
 452   2          }
 453   1      } 
 454          
 455          /*****************************************************************************
 456           º¯ Êý Ãû  : SetAddressMode
 457           ¹¦ÄÜÃèÊö  : ÉèÖÃµØÖ·µÄÄ£Ê½
 458           ÊäÈë²ÎÊý  : unsigned char AddMode  
 459           Êä³ö²ÎÊý  : NONE
 460           ·µ »Ø Öµ  : NONE
 461          *****************************************************************************/
 462          void SetAddressMode(unsigned char  AddMode)   //È¡ÖµÎª0~2
 463          {
 464   1          WriteCmd(0x20);        // ÉèÖÃÄÚ´æµØÖ·Ä£Ê½, È±Ê¡ => 0x02£¬¼´£ºÒ³µØÖ·Ä£Ê½
 465   1          WriteCmd(AddMode);      // 0x00 => Ë®Æ½µØÖ·Ä£Ê½; 0x01 => ´¹Ö±µØÖ·Ä£Ê½; 0x02 => Ò³µØÖ·Ä£Ê½             
             -                                          
 466   1      }
 467          
 468          /*****************************************************************************
 469           º¯ Êý Ãû  : SetStartPage
 470           ¹¦ÄÜÃèÊö  : ÉèÖÃÁÐµÄÆðÊ¼Î»ÖÃ
 471           ÊäÈë²ÎÊý  : unsigned char StartPage  
 472           Êä³ö²ÎÊý  : NONE
 473           ·µ »Ø Öµ  : NONE
 474          *****************************************************************************/
 475          void SetStartPage(unsigned char StartPage)  //ÓÃÓÚÒ³µØÖ·Ä£Ê½   
 476          {
 477   1          WriteCmd(0xb0 | StartPage);         //StartPageÈ¡Öµ£º0~7
 478   1      }
 479          
 480          /*****************************************************************************
 481           º¯ Êý Ãû  : SetStartColumn
 482           ¹¦ÄÜÃèÊö  : ÉèÖÃÁÐµÄÆðÊ¼Î»ÖÃ
 483           ÊäÈë²ÎÊý  : unsigned char StartColumn  
 484           Êä³ö²ÎÊý  : NONE
 485           ·µ »Ø Öµ  : NONE
 486          *****************************************************************************/
C51 COMPILER V9.52.0.0   OLED                                                              08/08/2018 23:40:21 PAGE 9   

 487          void SetStartColumn(unsigned char StartColumn)     //ÓÃÓÚÒ³µØÖ·Ä£Ê½
 488          {                          //StartColumnÈ¡Öµ0~127
 489   1          WriteCmd(((StartColumn & 0xf0) >> 4) | 0x10);  //ÁÐÖµ¶ÔÓ¦µÄ¸ßËÄÎ»ÃüÁî£º 0001_X7X6X5X4
 490   1          WriteCmd(( StartColumn & 0x0f) | 0x00);      //ÁÐÖµ¶ÔÓ¦µÄµÍËÄÎ»ÃüÁî£º 0000_X3X2X1X0
 491   1      }
 492          
 493          /*****************************************************************************
 494           º¯ Êý Ãû  : SetPageAddress
 495           ¹¦ÄÜÃèÊö  : ÉèÖÃÐÐµØÖ·µÄ×÷ÓÃ·¶Î§
 496           ÊäÈë²ÎÊý  : unsigned char StartColumn  
 497           Êä³ö²ÎÊý  : NONE
 498           ·µ »Ø Öµ  : NONE
 499           ±¸    ×¢  : ¸Ãº¯Êý½öÓÃÓÚË®Æ½µØÖ·»ò´¹Ö±µØÖ·Ä£Ê½
 500          *****************************************************************************/
 501          void SetPageAddress(unsigned char Start, unsigned char End)  //×¢£º¸Ãº¯Êý½öÓÃÓÚË®Æ½µØÖ·»ò´¹Ö±µØÖ·Ä£Ê½
 502          {
 503   1          WriteCmd(0x22);        // ÉèÖÃÒ³µØÖ·
 504   1          WriteCmd(Start);           // ÆðÊ¼Ò³µØÖ·È±Ê¡Öµ => 0x00 
 505   1          WriteCmd(End);           // ½áÊøÒ³µØÖ·È±Ê¡Öµ => 0x07 
 506   1      }
 507          
 508          /*****************************************************************************
 509           º¯ Êý Ãû  : SetColumnAddress
 510           ¹¦ÄÜÃèÊö  : ÉèÖÃÁÐµØÖ·µÄ×÷ÓÃ·¶Î§
 511           ÊäÈë²ÎÊý  : unsigned char Start, unsigned char End  
 512           Êä³ö²ÎÊý  : NONE
 513           ·µ »Ø Öµ  : NONE
 514           ±¸    ×¢  : ¸Ãº¯Êý½öÓÃÓÚË®Æ½µØÖ·»ò´¹Ö±µØÖ·Ä£Ê½
 515          *****************************************************************************/
 516          void SetColumnAddress(unsigned char Start, unsigned char End) //×¢£º¸Ãº¯Êý½öÓÃÓÚË®Æ½µØÖ·»ò´¹Ö±µØÖ·Ä£Ê½
 517          {
 518   1          WriteCmd(0x21);        // ÉèÖÃÁÐµØÖ·
 519   1          WriteCmd(Start);       // ÆðÊ¼µØÖ·È±Ê¡Öµ => 0x00 
 520   1          WriteCmd(End);         // ½áÊøµØÖ·È±Ê¡Öµ => 0x7F 
 521   1      }
 522          
 523          /*****************************************************************************
 524           º¯ Êý Ãû  : SetStartLine
 525           ¹¦ÄÜÃèÊö  : ÉèÖÃÆðÊ¼µÄÐÐÖµ
 526           ÊäÈë²ÎÊý  : unsigned char StartLine  
 527           Êä³ö²ÎÊý  : NONE
 528           ·µ »Ø Öµ  : NONE
 529          *****************************************************************************/
 530          void SetStartLine(unsigned char StartLine)    //È¡Öµ£º0~63
 531          {
 532   1          WriteCmd(0x40|StartLine);                 // ÉèÖÃÏÔÊ¾µÄÆðÊ¼ÐÐ, È±Ê¡Öµ => 0x40 (0x00)                  
             -                           
 533   1      }
 534          
 535          /*****************************************************************************
 536           º¯ Êý Ãû  : SetContrast
 537           ¹¦ÄÜÃèÊö  : ÉèÖÃÆðÊ¼µÄÐÐÖµ
 538           ÊäÈë²ÎÊý  : unsigned char ContrastValue  
 539           Êä³ö²ÎÊý  : NONE
 540           ·µ »Ø Öµ  : NONE
 541          *****************************************************************************/
 542          void SetContrast(unsigned char ContrastValue) //È¡Öµ·¶Î§Îª0~255¹²256¼¶¶Ô±È¶È
 543          {
 544   1          WriteCmd(0x81);               // ÉèÖÃOLEDÏÔÊ¾µÄ¶Ô±È¶È
 545   1          WriteCmd(ContrastValue);      // È±Ê¡ => 0x7F
 546   1      }
 547          
C51 COMPILER V9.52.0.0   OLED                                                              08/08/2018 23:40:21 PAGE 10  

 548          /*****************************************************************************
 549           º¯ Êý Ãû  : SetChargePump
 550           ¹¦ÄÜÃèÊö  : ÉèÖÃÆðÊ¼µÄÐÐÖµ
 551           ÊäÈë²ÎÊý  : unsigned char On  
 552           Êä³ö²ÎÊý  : NONE
 553           ·µ »Ø Öµ  : NONE
 554          *****************************************************************************/
 555          void SetChargePump(unsigned char  on)   //0£º¹Ø±ÕµçºÉ±Ã£»1£º¿ªÆôµçºÉ±Ã
 556          {
 557   1          WriteCmd(0x8D);                   // Set Charge Pump
 558   1        if(on)
 559   1            WriteCmd(0x14);               // 0x14,Ê¹ÄÜµçºÉ±Ã
 560   1        else
 561   1          WriteCmd(0x10);               // È±Ê¡ => 0x10£¬¼´¹Ø±ÕµçºÉ±Ã
 562   1      }
 563          
 564          /*****************************************************************************
 565           º¯ Êý Ãû  : SetCommonRemap
 566           ¹¦ÄÜÃèÊö  : ÉèÖÃÐÐµÄÖØÓ³Éä(¿ÉÒÔÍ¨¹ýcomµÄÖØÓ³Éä£¬ÊµÏÖ´¹Ö±·½ÏòµÄ¾µÏñ)
 567           ÊäÈë²ÎÊý  : unsigned char Dat  
 568           Êä³ö²ÎÊý  : NONE
 569           ·µ »Ø Öµ  : NONE
 570          *****************************************************************************/
 571          void SetCommonRemap(unsigned char Dat) //ÉèÖÃCOMÊä³öµÄÉ¨Ãè·½Ïò
 572          {
 573   1        if(Dat)
 574   1            WriteCmd(0xC8);   //0xc8 ´ÓCOM63¡ú0:
 575   1        else
 576   1          WriteCmd(0xC0);   //È±Ê¡=> 0xC0£¬´ÓCOM0¡ú63
 577   1      }
 578          
 579          /*****************************************************************************
 580           º¯ Êý Ãû  : SetSegmentRemap
 581           ¹¦ÄÜÃèÊö  : ÉèÖÃÁÐµÄÖØÓ³Éä(¿ÉÒÔÍ¨¹ýSegmentµÄÖØÓ³Éä£¬ÊµÏÖË®Æ½·½ÏòµÄ¾µÏñ)
 582           ÊäÈë²ÎÊý  : unsigned char On  
 583           Êä³ö²ÎÊý  : NONE
 584           ·µ »Ø Öµ  : NONE
 585          *****************************************************************************/
 586          void SetSegmentRemap(unsigned char Dat)    // ÉèÖÃsegmentµÄÖØÓ³Éä
 587          {                      // È±Ê¡ => 0xA0
 588   1        if(Dat)
 589   1            WriteCmd(0xA1);            // 0xA1 => ÁÐ127Ó³Éäµ½SEG0
 590   1          else                   
 591   1          WriteCmd(0xA0);                    // 0xA0 => ÁÐµØÖ·0Ó³Éäµ½seg127   
 592   1      }
 593          
 594          /*****************************************************************************
 595           º¯ Êý Ãû  : SetEntireDisplay
 596           ¹¦ÄÜÃèÊö  : ÉèÖÃÕûÆÁµÄÏÔÊ¾ÄÚÈÝ 
 597           ÊäÈë²ÎÊý  : unsigned char On  
 598           Êä³ö²ÎÊý  : NONE
 599           ·µ »Ø Öµ  : NONE
 600          *****************************************************************************/
 601          void SetEntireDisplay(unsigned char OnMode)   // 0: Õý³£ÏÔÊ¾
 602          {
 603   1          if(OnMode)        // Set Entire Display On / Off
 604   1          WriteCmd(0xA5);   // 0xA5 (0x01) => ¿ªÏÔÊ¾£¬µ«ºöÂÔRAMÖÐÄÚÈÝ
 605   1        else           
 606   1          WriteCmd(0xA4);   // 0xA4 (È±Ê¡) => Õý³£ÏÔÊ¾£¬ÏÔÊ¾RAMÖÐµÄÄÚÈÝ                           
 607   1      }
 608          
 609          /*****************************************************************************
C51 COMPILER V9.52.0.0   OLED                                                              08/08/2018 23:40:21 PAGE 11  

 610           º¯ Êý Ãû  : SetInverseDisplay
 611           ¹¦ÄÜÃèÊö  : ÉèÖÃ·´°×ÏÔÊ¾Ä£Ê½ 
 612           ÊäÈë²ÎÊý  : unsigned char InverseValue  
 613           Êä³ö²ÎÊý  : NONE
 614           ·µ »Ø Öµ  : NONE
 615          *****************************************************************************/
 616          void  SetInverseDisplay(unsigned char InverseValue)  // ·´°×ÏÔÊ¾¿ª/¹Ø
 617          {
 618   1          WriteCmd(0xA6|InverseValue);  // È±Ê¡(InverseValue = 0) => 0xA6£¬Õý³£ÏÔÊ¾
 619   1                                      // 0xa7(InverseValue = 1) ,·´°×ÏÔÊ¾
 620   1      }
 621          
 622          /*****************************************************************************
 623           º¯ Êý Ãû  : SetMultiplexRatio
 624           ¹¦ÄÜÃèÊö  : ±¶ÆµÂÊÉèÖÃ
 625           ÊäÈë²ÎÊý  : unsigned char Ratio  
 626           Êä³ö²ÎÊý  : NONE
 627           ·µ »Ø Öµ  : NONE
 628          *****************************************************************************/
 629          void SetMultiplexRatio(unsigned char Ratio) //È¡Öµ£º0~63
 630          {
 631   1          WriteCmd(0xA8);        // ÉèÖÃ±¶ÆµÂÊ
 632   1          WriteCmd(Ratio);       // È±Ê¡ => 0x3F (1/64 Duty)
 633   1      }
 634          
 635          /*****************************************************************************
 636           º¯ Êý Ãû  : SetDisplayOnOff
 637           ¹¦ÄÜÃèÊö  : ÏÔÊ¾¿ª/¹ØÉèÖÃ
 638           ÊäÈë²ÎÊý  : unsigned char ON  
 639           Êä³ö²ÎÊý  : NONE
 640           ·µ »Ø Öµ  : NONE
 641          *****************************************************************************/
 642          void SetDisplayOnOff(unsigned char on)    // ÉèÖÃÏÔÊ¾¿ª/¹Ø
 643          {
 644   1          WriteCmd(0xAE|on);  //0: ¹ØÏÔÊ¾£»1£º¿ªÏÔÊ¾ £¬È±Ê¡Îª¹Ø
 645   1      }
 646          
 647          /*****************************************************************************
 648           º¯ Êý Ãû  : SetDisplayOffset
 649           ¹¦ÄÜÃèÊö  : ÏÔÊ¾¿ª/¹ØÉèÖÃ
 650           ÊäÈë²ÎÊý  : unsigned char OffsetValue  
 651           Êä³ö²ÎÊý  : NONE
 652           ·µ »Ø Öµ  : NONE
 653          *****************************************************************************/
 654          void SetDisplayOffset(unsigned char OffsetValue)
 655          {
 656   1          WriteCmd(0xD3);        // ÉèÖÃÏÔÊ¾Æ«ÒÆÁ¿
 657   1          WriteCmd(OffsetValue); // Default => 0x00 £¬OffsetValueµÄÈ¡Öµ0~63£¬¿ÉÊµÏÖ´¹Ö±·½ÏòÉÏµÄÆ«ÒÆ
 658   1      }
 659          
 660          /*****************************************************************************
 661           º¯ Êý Ãû  : SetDisplayClock
 662           ¹¦ÄÜÃèÊö  : ÏÔÊ¾¾§ÌåÆµÂÊ¼°Ê±ÖÓ·ÖÆµÂÊ
 663           ÊäÈë²ÎÊý  : unsigned char Value  
 664           Êä³ö²ÎÊý  : NONE
 665           ·µ »Ø Öµ  : NONE
 666          *****************************************************************************/
 667          void SetDisplayClock(unsigned char Value)
 668          {
 669   1          WriteCmd(0xD5);         // Set Display Clock Divide Ratio / Oscillator Frequency
 670   1          WriteCmd(Value);        // Default => 0x80
 671   1                                  // D[3:0] => Êý¾ÝµÍËÄÎ»Îª·ÖÆµÂÊ
C51 COMPILER V9.52.0.0   OLED                                                              08/08/2018 23:40:21 PAGE 12  

 672   1                                  // D[7:4] => ¸ßËÄÎ»Îª¾§ÌåÆµÂÊ
 673   1      }
 674          
 675          /*****************************************************************************
 676           º¯ Êý Ãû  : SetPrechargePeriod
 677           ¹¦ÄÜÃèÊö  : ÉèÖÃÔ¤³äµçÖÜÆÚ
 678           ÊäÈë²ÎÊý  : unsigned char Value  
 679           Êä³ö²ÎÊý  : NONE
 680           ·µ »Ø Öµ  : NONE
 681          *****************************************************************************/
 682          void SetPrechargePeriod(unsigned char Value) // ÉèÖÃÔ¤³äµçÖÜÆÚ£¬È±Ê¡Îª0x22
 683          {              
 684   1          WriteCmd(0xD9);        
 685   1          WriteCmd(Value);  // D[3:0]: Ô¤³äµçÖÜÆÚ£¬D[7:4]£º·ÅµçÖÜÆÚ 
 686   1      }
 687          
 688          /*****************************************************************************
 689           º¯ Êý Ãû  : SetCommonConfig
 690           ¹¦ÄÜÃèÊö  : ÉèÖÃÔ¤³äµçÖÜÆÚ
 691           ÊäÈë²ÎÊý  : unsigned char Dat  
 692           Êä³ö²ÎÊý  : NONE
 693           ·µ »Ø Öµ  : NONE
 694          *****************************************************************************/
 695          void SetCommonConfig(unsigned char Dat) // È±Ê¡ => 0x12 (0x10)
 696          {
 697   1          WriteCmd(0xDA);        // ÉèÖÃCOM¶ËµÄÓ²¼þÅäÖÃ
 698   1          WriteCmd(0x02|Dat);    // Alternative COM Pin Configuration
 699   1                                 // Disable COM Left/Right Re-Map£¨Dat[5]:0,¹Ø±ÕCOMÖØÓ³Éä£»1£ºÊ¹ÄÜCOMÖØÓ³Éä£©
 700   1      }
 701          
 702          /*****************************************************************************
 703           º¯ Êý Ãû  : SetVCOMH
 704           ¹¦ÄÜÃèÊö  : ÉèÖÃCOM¶ËµÄµçÆ½µÈ¼¶
 705           ÊäÈë²ÎÊý  : unsigned char Dat  
 706           Êä³ö²ÎÊý  : NONE
 707           ·µ »Ø Öµ  : NONE
 708          *****************************************************************************/
 709          void SetVCOMH(unsigned char Dat)   //Dat¸ñÊ½£º 0xxx_0000
 710          {
 711   1          WriteCmd(0xDB);              // Set VCOMH Deselect Level
 712   1          WriteCmd(Dat);                 // È±Ê¡ => 0x20 (0.77*VCC)
 713   1      }
 714          
 715          /*****************************************************************************
 716           º¯ Êý Ãû  : SetNop
 717           ¹¦ÄÜÃèÊö  : ¿Õ²Ù×÷ NOP
 718           ÊäÈë²ÎÊý  : NONE
 719           Êä³ö²ÎÊý  : NONE
 720           ·µ »Ø Öµ  : NONE
 721          *****************************************************************************/
 722          void SetNop(void)
 723          {
 724   1          WriteCmd(0xE3);                // ²»²Ù×÷
 725   1      }
 726          
 727          /*****************************************************************************
 728           º¯ Êý Ãû  : LED_Init
 729           ¹¦ÄÜÃèÊö  : OLED³õÊ¼»¯
 730           ÊäÈë²ÎÊý  : VOID  
 731           Êä³ö²ÎÊý  : NONE
 732           ·µ »Ø Öµ  : NONE
 733           ±¸    ×¢  £ºÏêÏ¸Çë²Î¿¼0.96inch_LDR128064B2B201 9.5 Recommanded Software Initialization
C51 COMPILER V9.52.0.0   OLED                                                              08/08/2018 23:40:21 PAGE 13  

 734          *****************************************************************************/
 735          void OLED_Init(void)        
 736          {
 737   1          unsigned char i;
 738   1      
 739   1          SCL_OLED = 1;      
 740   1          RST = 0;
 741   1          for(i = 0; i < 100; i++)
 742   1        {
 743   2          ;                      //´ÓÉÏµçµ½ÏÂÃæ¿ªÊ¼³õÊ¼»¯ÒªÓÐ×ã¹»µÄÊ±¼ä£¬¼´µÈ´ýRC¸´Î»Íê±Ï    
 744   2          }      
 745   1          RST = 1;
 746   1      
 747   1          SetDisplayOnOff(0);        // ¹ØÏÔÊ¾ (0£º¹ØÏÔÊ¾/1£º¿ªÏÔÊ¾)
 748   1          SetDisplayClock(0x80);     // ÉèÖÃÊ±ÖÓÎª100Frames/Sec £¬0x80ÎªÈ±Ê¡Öµ
 749   1          SetMultiplexRatio(0x3F);   // 1/64 Duty (0x0F~0x3F)
 750   1          SetDisplayOffset(0x00);    // ´¹Ö±ÏÔÊ¾ÎÞÆ«ÒÆ (0x00~0x3F)
 751   1          SetStartLine(0x00);        // ÉèÖÃÓ³ÉäÄÚÈÝÏÔÊ¾µÄÆðÊ¼ÐÐ(0x00~0x3F)
 752   1          SetChargePump(1);          // Ê¹ÄÜÄÚ²¿DC/DC×ª»»(0x00/0x04)
 753   1          SetAddressMode(0x02);      // ÉèÖÃÎªÒ³µØÖ·Ä£Ê½ (0x00/0x01/0x02)
 754   1          SetSegmentRemap(0x01);     // SegmentÖØÓ³Éä£»  0x00×óÓÒ·´ÖÃ 0x01Õý³£
 755   1          SetCommonRemap(0x01);      // ÉèÖÃCOMÉ¨Ãè·½Ïò  0x00ÉÏÏÂ·´ÖÃ 0x08Õý³£
 756   1          SetCommonConfig(0x10);     // ÉèÖÃcomÐòÁÐµÄÅäÖÃ (0x00/0x10)
 757   1          SetContrast(0x7F);         // ÉèÖÃ¶Ô±È¶È
 758   1          SetPrechargePeriod(0xF1);  // ÉèÖÃÔ¤³äµçÖÜÆÚÎª15¸öÊ±ÖÓ£¬·ÅµçÖÜÆÚÎª1¸öÊ±ÖÓÖÜÆÚ
 759   1          SetVCOMH(0x40);            // ÉèÖÃCOM¶ËµçÆ½µÈ¼¶
 760   1          SetEntireDisplay(0);       // Õý³£ÏÔÊ¾(0£ºÕý³£ÏÔÊ¾/1£ººöÂÔÏÔÊ¾)
 761   1          SetInverseDisplay(0);      // ·´°×ÉèÖÃ (0£ºÕý³£ÏÔÊ¾/1£º·´°×ÏÔÊ¾)  
 762   1          SetDisplayOnOff(1);        // ¿ªÏÔÊ¾ (0£º¹ØÏÔÊ¾/1£º¿ªÏÔÊ¾)
 763   1          FillScreen(0x00);            // ³õÊ¼ÇåÆÁ£¬Ìî³ä¿Õ°×
 764   1      ///    SetPos(0,0);      //²¢½«Î»ÖÃÉèÖÃÔÚ0Ò³£¬0ÁÐ
 765   1      
 766   1      } 
 767           
 768          /*****************************************************************************
 769           º¯ Êý Ãû  : WriteChar_16x16
 770           ¹¦ÄÜÃèÊö  : ÏÔÊ¾Ò»¸ö6x8±ê×¼ASCII×Ö·û
 771           ÊäÈë²ÎÊý  : unsigned char Column  ÏÔÊ¾µÄºá×ø±ê0~122,
 772                                             ÒòÎª6*8¸ñÊ½µÄ×Ö·û¿í¶ÈÎª6£¬Òò´Ë×Ö·ûÆðÊ¼ÁÐµØÖ·Ö»ÄÜÎª0~122
 773                       unsigned char Page    Ò³·¶Î§0¡«7
 774                       unsigned char Dat  ÏÔÊ¾µÄ×Ö·û
 775           Êä³ö²ÎÊý  : NONE
 776           ·µ »Ø Öµ  : NONE
 777          *****************************************************************************/
 778          void WriteChar_16x16(unsigned char Page,unsigned char Column, unsigned char Dat)
 779          {
 780   1          unsigned char i, temp;     
 781   1             
 782   1          temp = Dat - 32;   //ASCIIÂë±íµÄ0~31Îª²»¿É¼û×Ö·û£¬F6x8µÄ±àÂëÊ×ÐÐÎªASCiiÂë±íµÄµÚ32ÐÐ£¬¹ÊÐè¼õ32
 783   1          if(Column > 122)
 784   1          {
 785   2              Column = 0;    //ÈôÎÞ·¨Ð´ÏÂÒ»¸ö×Ö·û£¬ÔòÁíÆðÒ»Ò³£¬²¢½«ÁÐµØÖ·¸ÄÖÁÊ×ÁÐ
 786   2              Page++;
 787   2          }
 788   1          SetPos(Page, Column);
 789   1          for(i = 0; i < 16; i++)
 790   1          {     
 791   2              WriteDat(F6x8[temp][i]);  
 792   2          }
 793   1      }
 794          
 795          /*****************************************************************************
C51 COMPILER V9.52.0.0   OLED                                                              08/08/2018 23:40:21 PAGE 14  

 796           º¯ Êý Ãû  : WriteStr_6x8
 797           ¹¦ÄÜÃèÊö  : Ð´ÈëÒ»×é6x8±ê×¼ASCII×Ö·û´®
 798           ÊäÈë²ÎÊý  : unsigned char Page      Ò³·¶Î§0¡«7     
 799                       unsigned char Column    ÏÔÊ¾µÄºá×ø±ê0~122  
 800                       unsigned char Str[]     ÏÔÊ¾µÄ×Ö·û´®
 801           Êä³ö²ÎÊý  : NONE
 802           ·µ »Ø Öµ  : NONE
 803          *****************************************************************************/
 804          //void WriteStr_6x8(unsigned char Page, unsigned char Column, unsigned char Str[])
 805          //{
 806          //    unsigned char j; 
 807          
 808          //    for (j=0; Str[j] != '\0'; j++)    //ÅÐ¶Ï×Ö·û´®ÊÇ·ñ½áÊø£¬Ò²¿ÉÍ¨¹ýÖ¸Õë½øÐÐ²Ù×÷
 809          //    {    
 810          //        WriteChar_6x8(Page,Column,Str[j]);    //ÔÚÖ¸¶¨µÄµØ·½Ð´Ò»¸ö×Ö·û
 811          //        Column += 6;          //Ã¿Ð´Ò»¸ö×Ö·û£¬ÁÐµØÖ·¼Ó6
 812          //    }
 813          //}
 814          
 815          /*****************************************************************************
 816           º¯ Êý Ãû  : WriteStr_8x16
 817           ¹¦ÄÜÃèÊö  : Ð´ÈëÒ»×é8x16±ê×¼ASCII×Ö·û´®
 818           ÊäÈë²ÎÊý  : unsigned char Page     ÎªÒ³·¶Î§0¡«3,ÒòÎª¸Ã¸ñÊ½µÄ×Ö·û¸ß¶ÈÕ¼ÓÃÁ½Ò³
 819                 unsigned char Column   ÎªÏÔÊ¾µÄºá×ø±ê0~120
 820                       unsigned char Str[]    ÒªÏÔÊ¾µÄ×Ö·û´®
 821           Êä³ö²ÎÊý  : NONE
 822           ·µ »Ø Öµ  : NONE
 823          *****************************************************************************/
 824          void WriteStr_8x16(unsigned char Page, unsigned char Column, unsigned char Str[])
 825          {
 826   1          unsigned char i, j, temp;
 827   1      
 828   1          Page <<= 1;             //ÏÔÊ¾¸ß¶ÈÎª16µÄ×Ö·ûÊ±£¬ÆÁÄ»0~7Ò³×ª»¯Îª0~3ÐÐ£¬¼´Á½Ò³ÎªÒ»ÐÐ
 829   1                                            //Ò²¿É²»Òª´ËÐÐ£¬µ«Ðè×¢Òâ¶ÔÓ¦¹ØÏµ
 830   1          for (j=0;Str[j] != '\0'; j++)       //×Ö·û´®Î´½áÊø
 831   1          {    
 832   2              temp = Str[j] - 32;
 833   2              if(Column > 120)
 834   2              {
 835   3                  Column = 0;
 836   3                  Page += 2;          //Èôµ±Ç°ÐÐÐ´²»ÏÂ£¬ÔòÐèÒ»´Î»»Á½Ò³£¬·½¿É¼ÌÐøÐ´
 837   3              }
 838   2      
 839   2              SetPos(Page, Column);   
 840   2              for(i = 0; i < 8; i++) 
 841   2              {
 842   3                  WriteDat(F8X16[temp][i]);   //ÏÈÐ´Ò»¸ö×Ö·ûµÄÉÏ°ë²¿·Ö
 843   3              }
 844   2              
 845   2              SetPos(Page+1, Column);   
 846   2              for(i=8; i<16; i++) 
 847   2              {
 848   3                  WriteDat(F8X16[temp][i]);
 849   3              }
 850   2              Column += 8;  
 851   2          }
 852   1      }
 853          
 854          /*****************************************************************************
 855           º¯ Êý Ãû  : WriteChinese16x16
 856           ¹¦ÄÜÃèÊö  : Ð´ÈëÒ»×é16x16µÄÖÐÎÄ×Ö·û´®¡¾ÐèÍ¨¹ýÈ¡Ä£Èí¼þ¶ÔÐèÒªµÄºº×Ö½øÐÐ±àÂë¡¿
 857           ÊäÈë²ÎÊý  : unsigned char Page       ÎªÒ³·¶Î§0¡«3
C51 COMPILER V9.52.0.0   OLED                                                              08/08/2018 23:40:21 PAGE 15  

 858                       unsigned char Column     ÎªÏÔÊ¾µÄºá×ø±ê0~114,  114 = 128-16(¼´±ØÐë±£Ö¤Ð´ÂúÒ»¸ö×Ö)
 859                       unsigned char Str[]      ÒªÏÔÊ¾µÄÖÐÎÄ×Ö·û´®
 860           Êä³ö²ÎÊý  : NONE
 861           ·µ »Ø Öµ  : NONE
 862           ±¸    ×¢  £ºÇëÓÃ»§×ÐÏ¸Ìå»á¸Ãº¯ÊýµÄÐ´·¨
 863          *****************************************************************************/
 864          void WriteChinese16x16(unsigned char Page,unsigned char Column,unsigned char Str[])
 865          {
 866   1          unsigned char i, j;
 867   1          unsigned int  Address; 
 868   1          
 869   1          Page <<= 1;                    //Á½Ò³ÎªÒ»ÐÐ£¬pageÈ¡ÖµÎª0~3
 870   1          for(j=0;Str[j]!='\0';)
 871   1          {
 872   2              i = 0;
 873   2              Address = 1;
 874   2              while(font16x16[i] > 127)  //ASCIIÂëÎª7Î»¶þ½øÖÆ±íÊ¾µÄ£¬Òò´Ë×î´óÎª127,Èô´óÓÚ127,ÒÑËµÃ÷Æä²»ÊÇASCIIÂë
             -ÁË¡£
 875   2                                     //ºº×Ö±íÊ¾ÐèÁ½¸ö×Ö½Ú£¬Îª¼æÈÝASCIIÂë£¬¼ÆËã»úÖÐÓÃÄÚÂë±íÊ¾£¬Á½¸ö×Ö½Ú×î¸ßÎ»¾ùÎª1£
             -¬¼´´óÓÚ127
 876   2              {
 877   3                  if(font16x16[i] == Str[j])       //Èôºº×ÖÊý×éÖÐµÚi¸öºº×ÖÓëÊµ²ÎµÚj¸ö×ÖµÄµÚÒ»¸ö×Ö½ÚÏàÍ¬
 878   3                  {
 879   4                      if(font16x16[i+1] == Str[j+1]) //ÇÒºº×ÖÊý×éÖÐµÚi¸öºº×ÖÓëÊµ²ÎµÚj¸ö×ÖµÄµÚ¶þ¸ö×Ö½ÚÒ²ÏàÍ¬
 880   4                      {
 881   5                          Address = i*16;        //ÔòÊµ¼ÊµÚj¸öºº×Ö¾Í²ÉÓÃfont16*16µÄµÚi¸öºº×ÖµÄ±àÂë
 882   5                          break;
 883   5                      }
 884   4                  }
 885   3                  i += 2;                      //ºº×ÖË÷ÒýÇ°ÒÆÒ»¸ö,Ö¸Ïòºº×ÖÊý×éÖÐµÄÏÂÒ»¸öºº×Ö
 886   3              }                    //ºº×ÖÒÑ¶¨ÒåÎªcharÐÍ¸ñÊ½£¬¼´Ò»¸öºº×ÖÕ¼Á½¸öcharÐÍµÄ¿í¶È
 887   2              
 888   2              if(Column > 112)
 889   2              {
 890   3                  Column = 0;
 891   3                  Page  += 2;              //Ã¿»»Ò»´ÎÐÐ£¬Ôö¼ÓÁ½Ò³
 892   3              }
 893   2              
 894   2              if(Address != 1)                       // ËùÃ÷ºº×ÖµÄ×Ö·û´®·Ç¿Õ£¬»ò±íÊ¾Êµ²ÎµÄ±àÂë¿ÉÒÔÔÚºº×ÖÊý×é¶ÔÓ¦
             -±àÂëÖÐÕÒµ½                 
 895   2              {
 896   3                  SetPos(Page, Column);        //ÉèÖÃÉÏ°ë²¿·ÖµÄÆðÊ¼Î»ÖÃ
 897   3                  for(i=0;i<16;i++)               
 898   3                  {
 899   4                      WriteDat(font16x16_code[Address]);  //Ð´ºº×ÖÉÏ°ë²¿·Ö  
 900   4                      Address++;
 901   4                  }
 902   3                  SetPos(Page+1,Column);                  //ÉèÖÃÏÂ°ë²¿·ÖµÄÆðÊ¼Î»ÖÃ
 903   3                  for(i=0;i<16;i++)          
 904   3                  {
 905   4                      WriteDat(font16x16_code[Address]);  //Ð´ºº×ÖÏÂ°ë²¿·Ö
 906   4                      Address++;
 907   4                  }
 908   3                  j += 2;                       //Êµ²ÎÖÐµÄºº×ÖºóÒÆÒ»¸ö
 909   3              }
 910   2              else                                        //ÈôÊµ²ÎÊý×éÄÚÈÝÎª¿Õ£¬»òÕßÊµ²ÎÓëÖ¸¶¨µÄºº×ÖÊý×é³£Á¿²»´æ
             -ÔÚÏàÍ¬ºº×Ö            
 911   2              {
 912   3                  SetPos(Page,Column);            //Ôò½«²»´æÔÚ±àÂëµÄºº×ÖÓÃ¿Õ°×Ìî³ä
 913   3                  for(i=0;i<16;i++)
 914   3                  {
 915   4                      WriteDat(0);
C51 COMPILER V9.52.0.0   OLED                                                              08/08/2018 23:40:21 PAGE 16  

 916   4                  }
 917   3                  SetPos(Page+1,Column);
 918   3                  for(i=0;i<16;i++)
 919   3                  {           
 920   4                      WriteDat(0);   
 921   4                  }
 922   3                  j++;                    //¿ÉÄÜºº×ÖÖÐ´æÔÚÒ»¸ö¿Õ°×»òÓ¢ÎÄ×Ö·û£¬Ìø¹ýÒ»¸ö×Ö½ÚÔÙÖØÐÂÆ¥Åä
 923   3              }
 924   2              
 925   2              Column += 16;                               //Ð´ÍêÒ»¸öºº×Ö£¬ÁÐÔö¼Ó16
 926   2          }
 927   1      }
 928          
 929          /*****************************************************************************
 930           º¯ Êý Ãû  : WriteMixStrXx16
 931           ¹¦ÄÜÃèÊö  : Êä³ö16x16ºº×ÖºÍ8x16×Ö·û»ìºÏ×Ö·û´® £¨×Ö·û´®±í¸ñÖÐÐèº¬ÓÐ´Ë×Ö£©
 932           ÊäÈë²ÎÊý  : unsigned char Page       ÎªÒ³·¶Î§0¡«3
 933                 unsigned char Column     ÎªÏÔÊ¾µÄºá×ø±ê0~114
 934                       unsigned char Str[]      ÒªÏÔÊ¾µÄ»ìºÏ×Ö·û´®
 935           Êä³ö²ÎÊý  : NONE
 936           ·µ »Ø Öµ  : NONE
 937          *****************************************************************************/
 938          void WriteMixStrXx16(unsigned char Page, unsigned char Column, unsigned char Str[])
 939          {
 940   1          unsigned char TempStr[3];
 941   1          unsigned char i = 0;    
 942   1      
 943   1          while(Str[i] != '\0')                       //×Ö·û´®Î´½áÊø
 944   1          {
 945   2              if(Str[i] > 127)                        //Èô·ÇASCIIÂë±íÖÐ×Ö·û
 946   2              {
 947   3                  TempStr[0] = Str[i];                  //½«Êµ²ÎµÚÒ»¸ö×Ö½ÚºÍµÚ¶þ¸ö×Ö½Ú·Ö±ðÔÝ´æ£¨¿ÉÄÜ¸ÕºÃÊÇÒ»¸öºº×Ö
             -£©
 948   3                  TempStr[1] = Str[i+1];
 949   3                  TempStr[2] = '\0';                        //ÔÝ´æ×Ö·û´®½áÊø×Ö·û
 950   3                  WriteChinese16x16(Page, Column, TempStr);  //ÏÔÊ¾ºº×Ö
 951   3                  Column += 16;               //ÁÐ¼Ó16
 952   3                  i += 2;                   //×Ö·ûË÷Òý¼Ó2£¬ºº×ÖË÷Òý¼Ó1£¨Ò»¸öºº×ÖÁ½¸ö×Ö½Ú£©
 953   3              }
 954   2              else                      //¼´»ìºÏ×Ö·û´®µ±ÖÐ³öÏÖÓ¢ÎÄ×Ö·û
 955   2              {
 956   3                  TempStr[0] = Str[i];    
 957   3                  TempStr[1] = '\0';                        //½«Ò»¸öÓ¢ÎÄ×Ö·ûµ±×ö×Ö·û´®
 958   3                  WriteStr_8x16(Page, Column, TempStr);     //Ð´TemStr
 959   3                  Column += 8;                //ÁÐÔö¼Ó8ÁÐ
 960   3                  i += 1;                   //×Ö·û´®Ë÷ÒýÔö¼ÓÒ»¸ö×Ö½Ú
 961   3              }
 962   2          }
 963   1      } 
 964          
 965          /*****************************************************************************
 966           º¯ Êý Ãû  : PrintChar
 967           ¹¦ÄÜÃèÊö  : ½«Ò»¸öCharÐÍÊý×ª»»³É3Î»Êý½øÐÐÏÔÊ¾
 968           ÊäÈë²ÎÊý  : unsigned char Page      ·¶Î§Îª0¡«7
 969                 unsigned char Column  ·¶Î§Îª0¡«122
 970                       char          Dat       ÐèÒª×ª»¯ÏÔÊ¾µÄÊýÖµ -128~127
 971           Êä³ö²ÎÊý  : NONE
 972           ·µ »Ø Öµ  : NONE
 973          *****************************************************************************/
 974          void PrintChar(unsigned char Page, unsigned char Column, char Dat)
 975          {
 976   1          unsigned int i, j, k, temp;
C51 COMPILER V9.52.0.0   OLED                                                              08/08/2018 23:40:21 PAGE 17  

 977   1      
 978   1          if(Dat < 0)
 979   1          {
 980   2              WriteChar_6x8(Page, Column, '-');   //ÈôÎª¸ºÊý£¬ÏÈÏÔÊ¾Æä¸ººÅ
 981   2              temp = (unsigned char)(-Dat);       //½«¸ºÊý×ª»»ÎªÕýÊý
 982   2          }
 983   1          else
 984   1          {
 985   2              WriteChar_6x8(Page, Column, '+');
 986   2              temp = (unsigned char)Dat;        //²»ÄÜÖ±½ÓÓÃÓÚÏÔÊ¾£¬ÒòÎªÊýÖµ½«µÈÐ§ÎªACSii£¬ÏÔÊ¾½«±ä³É×Ö·û 
 987   2          }
 988   1          i = temp/100;               //·ÖÀë°ÙÎ»Êý
 989   1          j = temp/10%10;               //·ÖÀëÊ®Î»Êý
 990   1          k = temp%10;                //·ÖÀë¸öÎ»Êý
 991   1          
 992   1          WriteChar_6x8(Page, Column+ 6, i);        //Ð´°ÙÎ»Êý
 993   1          WriteChar_6x8(Page, Column+12, j);        //Ð´Ê®Î»Êý
 994   1          WriteChar_6x8(Page, Column+18, k);        //Ð´¸öÎ»Êý
 995   1      }
 996          
 997          /*****************************************************************************
 998           º¯ Êý Ãû  : PrintShort
 999           ¹¦ÄÜÃèÊö  : ½«Ò»¸öShortÐÍÊý×ª»»³É5Î»Êý½øÐÐÏÔÊ¾
1000           ÊäÈë²ÎÊý  : unsigned char Page    ·¶Î§Îª0¡«7
1001                       unsigned char Column  ·¶Î§Îª0~122
1002                       int           Dat     ÐèÒª×ª»¯ÏÔÊ¾µÄÊýÖµ
1003           Êä³ö²ÎÊý  : NONE
1004           ·µ »Ø Öµ  : NONE
1005          *****************************************************************************/
1006          void PrintShort(unsigned char Page, unsigned char Column, int Dat)
1007          {
1008   1          unsigned int i, j, k, l, m, temp;  
1009   1          if(Dat < 0)
1010   1          {
1011   2              WriteChar_6x8(Page,Column,'-');
1012   2              temp = (unsigned int)(-Dat);  
1013   2          }
1014   1          else
1015   1          {
1016   2              WriteChar_6x8(Page,Column,'+');
1017   2              temp = (unsigned int)Dat;
1018   2          }
1019   1          
1020   1          l = temp/10000;                       //·ÖÀëÍòÎ»
1021   1          m = temp/1000%10;             //·ÖÀëÇ§Î»
1022   1          i = temp/100%10;              //·ÖÀë°ÙÎ»
1023   1          j = temp/10%10;               //·ÖÀëÊ®Î»
1024   1          k = temp%10;                //·ÖÀë¸öÎ»
1025   1          WriteChar_6x8(Page, Column+ 6, l);      //ÏÔÊ¾ÍòÎ»
1026   1          WriteChar_6x8(Page, Column+12, m);      //ÏÔÊ¾Ç§Î»
1027   1          WriteChar_6x8(Page, Column+18, i);      //ÏÔÊ¾°ÙÎ»
1028   1          WriteChar_6x8(Page, Column+24, j);      //ÏÔÊ¾Ê®Î»
1029   1          WriteChar_6x8(Page, Column+30, k);      //ÏÔÊ¾¸öÎ»
1030   1      
1031   1      }
1032          
1033          /*****************************************************************************
1034           º¯ Êý Ãû  : PrintImage
1035           ¹¦ÄÜÃèÊö  : ½«Í¼ÏñÏÔÊ¾³öÀ´
1036           ÊäÈë²ÎÊý  : unsigned char * ImageTable     ¶þÎ¬Í¼ÏñÊý×éµÄµØÖ·
1037                       unsigned char   RowNum         ¶þÎ¬Í¼ÏñµÄÐÐÊý1~64
1038                       unsigned char   ColumnNum      ¶þÎ¬Í¼ÏñµÄÁÐÊý1~128
C51 COMPILER V9.52.0.0   OLED                                                              08/08/2018 23:40:21 PAGE 18  

1039           Êä³ö²ÎÊý  : NONE
1040           ·µ »Ø Öµ  : NONE
1041           ±¸    ×¢  £º¶ÔÓ¦Í¼ÐÎµÄ±àÂëÉú³ÉÇëÊ¹ÓÃÈí¼þImage2Lcd v3.2.
1042                       Êä³öÊý¾ÝÀàÐÍ   £º CÓïÑÔÊý×é£¨*.C£©
1043                 É¨Ãè·½Ê½       £º Êý¾ÝË®Æ½£¬×Ö½Ú´¹Ö±£¨ÕâÑùÈí¼þÊµÏÖ½«ºÜÈÝÒ×ÊµÏÖ£©
1044                 Êä³ö»Ò¶È       £º µ¥É«£¨ÒòÎªËùÑ¡ÓÃµÄOLEDÎªµ¥É«£©
1045                 °üº¬Í·ÏñÍ·Êý¾Ý £º ²»°üº¬£¨°üº¬ÓÃÓÚÉãÏñÍ·ËùÐèµÄÊý×ÖÍ¼ÏñÐÅÏ¢£©
1046                 ×Ö½ÚÄÚÊý¾Ý·´Ðò :  Ñ¡Ôñ·´Ðò£¨¼´»­¡Ì£©
1047                 ×ÔÓÒÖÁ×óÉ¨Ãè   £º ²»Ñ¡Ôñ
1048                 ×Ôµ×ÖÁ¶¥É¨Ãè   £º ²»Ñ¡Ôñ
1049                 ¸ßÎ»ÔÚÇ°       :  ²»Ñ¡Ôñ
1050          *****************************************************************************/
1051          void PrintImage(unsigned char ImageTable[], unsigned char RowNum, unsigned char ColumnNum)
1052          {
1053   1          unsigned char i,j,m,n;
1054   1        unsigned int num = 0;               //±£´æÒ»·ùÍ¼Ïñ°üº¬µÄ×Ö½Ú¸öÊý
1055   1      
1056   1        if(RowNum > 63)        //Ô½½çÅÐ¶Ï
1057   1          RowNum = 63;
1058   1        if(ColumnNum > 127)
1059   1          ColumnNum = 127;
1060   1      
1061   1        m = RowNum/8;     //ÐÐÊý¶Ô8È¡Õû
1062   1        n = RowNum%8;   //ÐÐÊý¶Ô8È¡Óà
1063   1        if(n)       //ÈôÓàÊý²»Îª0£¬¼´½«ÐÐÊý°´8£¨×Ö½Ú£©½øÐÐ·Ö×é£¬ÓÐÓàÊý
1064   1          m = m + 1 ; //Ôò½«²»ÄÜ¹¹³ÉÒ»¸ö×Ö½ÚµÄÐÐÊý²¹ÆëÎªÒ»¸ö×Ö½Ú
1065   1      
1066   1        for(i=0;i<m;i++)
1067   1        { 
1068   2          SetPos(i,0);
1069   2          for(j=0;j<ColumnNum;j++)
1070   2          { 
1071   3            WriteDat(ImageTable[num]);
1072   3            num++;
1073   3          }
1074   2        }
1075   1      }
1076          
1077          //========== ÏÔÊ¾Ð§¹û´¦ÀíÏà¹Øº¯Êý  ===============
1078          /*****************************************************************************
1079           º¯ Êý Ãû  : ConHorScroll
1080           ¹¦ÄÜÃèÊö  : Á¬ÐøË®Æ½¹öÆÁ
1081           ÊäÈë²ÎÊý  : unsigned char StartPage       ¹öÆÁÆðÊ¼µØÖ·
1082                       unsigned char EndPage         ¹öÆÁÖÕÖ¹µØÖ·
1083                       bit Direction                 ¹öÆÁ·½Ïò£¨0£ºÓÒ£»1£º×ó£©
1084                 unsigned char speed       ¹öÆÁËÙ¶È£¨È¡Öµ0~7£©
1085           Êä³ö²ÎÊý  : NONE
1086           ·µ »Ø Öµ  : NONE
1087          *****************************************************************************/
1088          void ConHorScroll(unsigned char StartPage,unsigned char EndPage,bit Direction,unsigned char speed)
1089          {
1090   1        WriteCmd(0x2e);          //ÈôÓÐÒÆÆÁ²Ù×÷£¬ÏÈÍ£Ö¹£¬ÒÔ±ÜÃâÆÆ»µRAMÄÚÈÝ
1091   1        
1092   1        if(Direction)  
1093   1          WriteCmd(0x27);    //×óÒÆ£¨Êµ¼ÊÎªÏÈÍ£Ö¹×óÒÆ£©
1094   1        else
1095   1          WriteCmd(0x26);    //ÓÒÒÆ£¨Êµ¼ÊÎªÏÈÍ£Ö¹ÓÒÒÆ£©
1096   1      
1097   1        WriteCmd(0x00);
1098   1        WriteCmd(StartPage);     //»î¶¯ÇøÓòÆðÊ¼Ò³
1099   1        WriteCmd(speed);         //ÉèÖÃ¹öÆÁËÙ¶È  0£º5Ö¡£»1£º64Ö¡£»2£º128Ö¡£»3£º256Ö¡£»4£º3Ö¡£»5£º4Ö¡£»6£º25Ö¡£»7£
             -º2Ö¡
C51 COMPILER V9.52.0.0   OLED                                                              08/08/2018 23:40:21 PAGE 19  

1100   1        WriteCmd(EndPage);       //»î¶¯ÇøÓòÖÕÖ¹Ò³
1101   1        WriteCmd(0x00);
1102   1        WriteCmd(0xff);
1103   1        WriteCmd(0x2f);      //¼¤»îÒÆÆÁ
1104   1      
1105   1          
1106   1      }
1107          
1108          /*****************************************************************************
1109           º¯ Êý Ãû  : ConVerHorScroll
1110           ¹¦ÄÜÃèÊö  : Á¬Ðø´¹Ö±Ë®Æ½¹öÆÁ£¨¼´Ð±½Ç¹öÆÁ£©
1111           ÊäÈë²ÎÊý  : unsigned char StartPage       ¹öÆÁÆðÊ¼µØÖ·
1112                       unsigned char EndPage         ¹öÆÁÖÕÖ¹µØÖ·
1113                       bit Direction                 ¹öÆÁ·½Ïò£¨0£ºÓÒÉÏ½Ç£»1£º×óÉÏ½Ç£©
1114                 unsigned char speed       ¹öÆÁËÙ¶È  £¨È¡Öµ0~7£©
1115                 unsigned char VerOffset       ´¹Ö±Æ«ÒÆÁ¿£¨È¡Öµ0~63£©,Îª0Ê±½«Ã»ÓÐ´¹Ö±·½ÏòÉÏÒÆ¶¯£¬Ð§¹û½«µÈÍ¬ÓÚË®Æ½ÒÆ¶¯
1116           Êä³ö²ÎÊý  : NONE
1117           ·µ »Ø Öµ  : NONE
1118          *****************************************************************************/
1119          void ConVerHorScroll(unsigned char StartPage,unsigned char EndPage,bit Direction,unsigned char speed,unsig
             -ned char VerOffset)
1120          {
1121   1      
1122   1        WriteCmd(0x2e);          //ÈôÓÐÒÆÆÁ²Ù×÷£¬ÏÈÍ£Ö¹£¬ÒÔ±ÜÃâÆÆ»µRAMÄÚÈÝ
1123   1        if(Direction)  
1124   1          WriteCmd(0x2a);    //Ïò×óÉÏ½ÇÒÆÆÁ 
1125   1        else
1126   1          WriteCmd(0x29);    //ÏòÓÒÉÏ½ÇÒÆÆÁ
1127   1      
1128   1        WriteCmd(0x00);
1129   1        WriteCmd(StartPage);     //»î¶¯ÇøÓòÆðÊ¼Ò³
1130   1        WriteCmd(speed);         //ÉèÖÃ¹öÆÁËÙ¶È  0£º5Ö¡£»1£º64Ö¡£»2£º128Ö¡£»3£º256Ö¡£»4£º3Ö¡£»5£º4Ö¡£»6£º25Ö¡£»7£
             -º2Ö¡
1131   1        WriteCmd(EndPage);       //»î¶¯ÇøÓòÖÕÖ¹Ò³
1132   1        WriteCmd(0x00);
1133   1        WriteCmd(VerOffset);   //´¹Ö±·½ÏòÆ«ÒÆÁ¿£¬¼´Öµ0~63
1134   1        WriteCmd(0x2f);      //¼¤»îÒÆÆÁ
1135   1          
1136   1      }
1137          
1138          /*****************************************************************************
1139           º¯ Êý Ãû  : ConVerHorScroll
1140           ¹¦ÄÜÃèÊö  : ÉèÖÃ´¹Ö±¹öÆÁµÄÇøÓò
1141           ÊäÈë²ÎÊý  : unsigned char FixRowNoe       ¹Ì¶¨ÇøÓòÊ×ÐÐ
1142                       unsigned char ScrollRowNo     ¹Ì¶¨ÇøÓòÎ²ÐÐ£¬¹öÆÁÐÐ´Ó¹Ì¶¨ÇøÓòÎ²ÐÐÏÂÒ»ÐÐ¿ªÊ¼
1143           Êä³ö²ÎÊý  : NONE
1144           ·µ »Ø Öµ  : NONE
1145          *****************************************************************************/
1146          void SetVerScrollArea(unsigned char FixRowNo,unsigned char ScrollRowNo)
1147          {                 //ÅäÖÃËµÃ÷£º
1148   1                        //         1. FixRowNo = 0, ScrollRowNo = 64 £ºÕûÆÁ¹ö¶¯
1149   1        WriteCmd(0xa3);               //         2. FixRowNo = 0, ScrollRowNo < 64 £º¶¥²¿ÇøÓò¹ö¶¯
1150   1        WriteCmd(FixRowNo);       //         3. FixRowNo + ScrollRowNo < 64    £ºÖÐ¼äÆÁ¹ö¶¯
1151   1        WriteCmd(ScrollRowNo);      //         4. FixRowNo + ScrollRowNo = 64    £ºµ×²¿ÇøÓò¹ö¶¯
1152   1      }
1153          
1154          //----------  ÏÔÊ¾Êý×Ö0~9 6x8¸ñÊ½--------------------------------------
1155          void PrintNum_6x8(unsigned char Page,unsigned char Column,unsigned char num)    //numÈ¡ÖµÎª0~9
1156          {
1157   1        unsigned char i;
1158   1      
1159   1        if(Column > 122)
C51 COMPILER V9.52.0.0   OLED                                                              08/08/2018 23:40:21 PAGE 20  

1160   1        {
1161   2          Page = Page + 1;
1162   2          Column = 0;
1163   2        }
1164   1        if(num<10)
1165   1        {
1166   2          SetPos(Page,Column);
1167   2          for(i=0;i<6;i++)
1168   2          {
1169   3            WriteDat(F6x8[num+16][i]);      //Êý×ÖÔÚasciiÂë±íÖÐ´Ó48¿ªÊ¼,F6*8µÄµÚ16ÐÐ¿ªÊ¼
1170   3          }
1171   2        }
1172   1        if((num>9)&&(num<16))
1173   1        {
1174   2          SetPos(Page,Column);
1175   2          for(i=0;i<6;i++)
1176   2          {
1177   3            WriteDat(F6x8[num+23][i]);      //Êý×ÖÔÚasciiÂë±íÖÐ´Ó48¿ªÊ¼£¬F6*8µÄµÚ33ÐÐ¿ªÊ¼£¬µ«10¶ÔÓ¦A£¬ÔÙ¼õµô10Îª23
1178   3          } 
1179   2        }
1180   1      
1181   1      }
1182          
1183          //----------  ÏÔÊ¾Êý×Ö0~9 8x16¸ñÊ½--------------------------------------
1184          void PrintNum_8x16(unsigned char Page,unsigned char Column,unsigned char num)   //numÈ¡ÖµÎª0~15
1185          {
1186   1        unsigned char i;
1187   1         Page <<= 1;  
1188   1        if(Column > 120)
1189   1        {
1190   2          Page = Page + 2;
1191   2          Column = 0;
1192   2        }
1193   1        if(num<10)
1194   1        {
1195   2          SetPos(Page,Column);           //ÉèÖÃÉÏ°ëÒ³ÏÔÊ¾ÏÔÊ¾µÄÎ»ÖÃ
1196   2          for(i=0;i<8;i++)             //ÏÔÊ¾ÉÏ°ëÒ³ÄÚÈÝ
1197   2          {
1198   3            WriteDat(F8X16[num+16][i]);
1199   3          }
1200   2        
1201   2          SetPos(Page+1,Column);           //ÉèÖÃÏÂ°ëÒ³ÏÔÊ¾ÏÔÊ¾µÄÎ»ÖÃ
1202   2          for(i=8;i<16;i++)            //ÏÔÊ¾ÏÂ°ëÒ³ÄÚÈÝ
1203   2          {
1204   3            WriteDat(F8X16[num+16][i]);
1205   3          }
1206   2        }
1207   1        if((num>9)&&(num<16))
1208   1        {
1209   2              SetPos(Page,Column);      //ÉèÖÃÉÏ°ëÒ³ÏÔÊ¾ÏÔÊ¾µÄÎ»ÖÃ
1210   2          for(i=0;i<8;i++)             //ÏÔÊ¾ÉÏ°ëÒ³ÄÚÈÝ
1211   2          {
1212   3            WriteDat(F8X16[num+23][i]);
1213   3          }
1214   2        
1215   2          SetPos(Page+1,Column);           //ÉèÖÃÏÂ°ëÒ³ÏÔÊ¾ÏÔÊ¾µÄÎ»ÖÃ
1216   2          for(i=8;i<16;i++)            //ÏÔÊ¾ÏÂ°ëÒ³ÄÚÈÝ
1217   2          {
1218   3            WriteDat(F8X16[num+23][i]);
1219   3          }
1220   2        }
1221   1      
C51 COMPILER V9.52.0.0   OLED                                                              08/08/2018 23:40:21 PAGE 21  

1222   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   1822    ----
   CONSTANT SIZE    =   2105    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----      61
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----       2
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
