C51 COMPILER V9.52.0.0   MAIN                                                              08/19/2018 17:14:47 PAGE 1   


C51 COMPILER V9.52.0.0, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\Objects\main.obj
COMPILER INVOKED BY: D:\KEIL C51\C51\BIN\C51.EXE main.c BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings\main.lst) TABS(2) OBJ
                    -ECT(.\Objects\main.obj)

line level    source

   1          #include "stc15.h"
   2          #include "usart.h"
   3          #include "OLED.h"
   4          #include "IR.h"
   5          #include "TV.h"
   6          #define Slave_adrr 0x43 //从设备识别地址A 0x41  B 0x42  C 0x43 D 0x44
   7          #define BLE_RST_WAIT_TIME 4  //3*20 60ms 
   8          extern unsigned char temper;//0-14 代表17-30 度
   9          extern unsigned char model;//模式
  10          extern unsigned char flag;
  11          unsigned char  BLEReceive[2];
  12          extern unsigned char BLEReceive_buff[2];
  13          extern unsigned char  send_data[6];
  14          extern unsigned char INFO[];
  15          extern unsigned char TV_sta;//开关机状态
  16          // Slave_adrr 0x43
  17          extern unsigned char chnel;//频道
  18          extern bit full;
  19          unsigned char time_flag=0;
  20          bit read_buff=0;
  21          extern unsigned char chnel;//频道
  22          unsigned char time_start=0;
  23          bit  sure=0;//确定按键
  24          unsigned char TV_chnel_arr[2]={'-','-'};//遥控控制的频道
  25          unsigned char TV_chnel_flag=0;
  26          bit BLE_RST_Flag_bit=0;
  27          unsigned char BLE_RST_Flag=1;//蓝牙复位，避免使用延时，当为零时复位开始，
  28          void Delay25ms()    //@12.000MHz
  29          {
  30   1        unsigned char i, j, k;
  31   1      
  32   1        _nop_();
  33   1        _nop_();
  34   1        i = 2;
  35   1        j = 50;
  36   1        k = 206;
  37   1        do
  38   1        {
  39   2          do
  40   2          {
  41   3            while (--k);
  42   3          } while (--j);
  43   2        } while (--i);
  44   1      }
  45          
  46          
  47          void Timer1Init_main(void)    //20毫秒@12.000MHz
  48          {
  49   1        AUXR &= 0xBF;   //定时器时钟12T模式
  50   1        TMOD &= 0x0F;   //设置定时器模式
  51   1        TL1 = 0xE0;   //设置定时初值
  52   1        TH1 = 0xB1;   //设置定时初值
  53   1        TF1 = 0;    //清除TF1标志
  54   1        TR1 = 1;    //定时器1开始计时
C51 COMPILER V9.52.0.0   MAIN                                                              08/19/2018 17:14:47 PAGE 2   

  55   1        ET1=1;
  56   1        EA=1;
  57   1      }
  58          void Delay1ms()   //@12.000MHz
  59          {
  60   1        unsigned char i, j;
  61   1      
  62   1        i = 12;
  63   1        j = 169;
  64   1        do
  65   1        {
  66   2          while (--j);
  67   2        } while (--i);
  68   1      }
  69          void system_init(void)
  70          {
  71   1        BLE=0;//复位按键
  72   1        Delay1ms();
  73   1        BLE=1;//复位按键
  74   1        P15=1;
  75   1        P14=0;
  76   1        OLED_Init();
  77   1        Usart_init();
  78   1        Timer1Init_main();
  79   1        IR_init();
  80   1        WriteChinese16x16(0,0,"模拟电视");
  81   1        WriteChinese16x16(1,0,"当前频道");
  82   1        WriteChinese16x16(2,0,"选择频道");
  83   1        WriteStr_8x16(1,64,":");  
  84   1        WriteStr_8x16(0,64,":");
  85   1        WriteStr_8x16(2,64,":");  
  86   1        
  87   1      }
  88          
  89          void Check_uart_buff(void)
  90          {
  91   1        unsigned char i=0;
  92   1        if(BLEReceive_buff[0]==Slave_adrr)
  93   1        {
  94   2      //    if(BLEReceive_buff[0]==Slave_adrr && BLEReceive_buff[2]==Slave_adrr )
  95   2      //        if(BLEReceive_buff[1]== BLEReceive_buff[3] )
  96   2      //        {
  97   2                BLEReceive[0]=BLEReceive_buff[0];
  98   2                BLEReceive[1]=BLEReceive_buff[1];
  99   2      //        }
 100   2            for(i=0;i<2;i++)
 101   2            {
 102   3              BLEReceive_buff[i]=0x00;
 103   3            }
 104   2        }
 105   1        if(BLEReceive_buff[1]==Slave_adrr)
 106   1        {
 107   2      //      if(BLEReceive_buff[1]==Slave_adrr && BLEReceive_buff[3]==Slave_adrr )
 108   2      //        if(BLEReceive_buff[2]== BLEReceive_buff[4] )
 109   2      //        {
 110   2                BLEReceive[0]=BLEReceive_buff[1];
 111   2                BLEReceive[1]=BLEReceive_buff[0];
 112   2      //        }
 113   2            for(i=0;i<2;i++)
 114   2            {
 115   3              BLEReceive_buff[i]=0x00;
 116   3            }
C51 COMPILER V9.52.0.0   MAIN                                                              08/19/2018 17:14:47 PAGE 3   

 117   2          
 118   2        }
 119   1      
 120   1      }
 121          
 122          void fun_chnel(unsigned char temp)
 123          {
 124   1      //  unsigned char dat=0;
 125   1      //  dat=TV_chnel_flag*8;
 126   1        if(TV_sta)//开机有效
 127   1        {
 128   2          //开启计时器 
 129   2          time_start=1;
 130   2            if(TV_chnel_flag>1)
 131   2            {
 132   3              TV_chnel_flag=0;
 133   3              TV_chnel_arr[0]='-';
 134   3              TV_chnel_arr[1]='-';
 135   3              WriteStr_8x16(2,72,"   ");
 136   3            }
 137   2      
 138   2              TV_chnel_arr[TV_chnel_flag]=temp-'d';//
 139   2            PrintNum_8x16(2,(TV_chnel_flag+8)*9,TV_chnel_arr[TV_chnel_flag]); 
 140   2              TV_chnel_flag++;
 141   2        
 142   2      
 143   2        }
 144   1      }
 145          void sure_(void)
 146          {
 147   1        unsigned char dat=0;
 148   1              if(TV_chnel_arr[0]!='-' && TV_chnel_arr[1]!='-')
 149   1                dat=TV_chnel_arr[0]*10+TV_chnel_arr[1];
 150   1              if(TV_chnel_arr[0]!='-' && TV_chnel_arr[1]=='-' )
 151   1                dat=TV_chnel_arr[0];
 152   1        
 153   1            
 154   1            if(dat>99)dat=99;
 155   1            INFO[4]=TV_sta;
 156   1            INFO[5]=dat;
 157   1            chnel=dat;
 158   1            
 159   1      
 160   1            
 161   1            chnel_Change();//显示和红外发射
 162   1            SendString_Size(INFO,7);
 163   1            
 164   1            BLE_reset();
 165   1          WriteStr_8x16(2,72,"   ");
 166   1          TV_chnel_arr[0]='-';
 167   1          TV_chnel_arr[1]='-';
 168   1          TV_chnel_flag=0;
 169   1      }
 170          void main()
 171          {
 172   1        unsigned char sum=0;
 173   1        system_init();
 174   1        while(1)
 175   1        {
 176   2          if(BLEReceive[0]==Slave_adrr   )//判断接收到数据前八位是否为从机地址
 177   2          {
 178   3            BLEReceive[0]=0x00;//清除
C51 COMPILER V9.52.0.0   MAIN                                                              08/19/2018 17:14:47 PAGE 4   

 179   3            switch(BLEReceive[1])//判断后八位对应功能
 180   3            {
 181   4              case 'a':
 182   4                open_open();
 183   4                  break;
 184   4              case 'b':         
 185   4                open_close();
 186   4              break;
 187   4              
 188   4              case 'c':
 189   4                chnel_add();
 190   4              break;
 191   4              
 192   4              case 'd':
 193   4              chnel_mul();
 194   4                
 195   4      //          WriteStr_8x16(2,0,"MODE:");
 196   4      //          PrintNum_8x16(2,45,model);        
 197   4              break;
 198   4              
 199   4              case 'e':   //1
 200   4                fun_chnel('e');
 201   4              break;
 202   4              
 203   4              case 'f':   //2
 204   4                fun_chnel('f');
 205   4              break;  
 206   4              
 207   4              case 'g':   //3
 208   4                  fun_chnel('g');
 209   4              break;
 210   4              
 211   4              case 'h':   //4
 212   4                  fun_chnel('h');
 213   4              break;
 214   4              
 215   4              case 'i':   //5
 216   4                  fun_chnel('i');
 217   4              break;
 218   4              
 219   4              case 'j':    //6
 220   4                fun_chnel('j');
 221   4              break;
 222   4              
 223   4              case 'k':   //7
 224   4                  fun_chnel('k');
 225   4              break;
 226   4              
 227   4              case 'l':   //8
 228   4                //  fun_chnel('l');
 229   4                  sure=1;
 230   4              break;
 231   4              default:
 232   4                if(BLEReceive[1]>'m')
 233   4                {
 234   5                  TV_chnel_arr[0]=(BLEReceive[1]-'m')/10;
 235   5                  TV_chnel_arr[1]=(BLEReceive[1]-'m')%10;
 236   5                  sure_();
 237   5                }
 238   4                    
 239   4            }
 240   3            BLEReceive[1]=0x00;
C51 COMPILER V9.52.0.0   MAIN                                                              08/19/2018 17:14:47 PAGE 5   

 241   3      
 242   3          }//
 243   2          
 244   2          
 245   2          if(sure==1)// 选择频道后 按下确认按键
 246   2          {
 247   3            sure=0;
 248   3            sure_();
 249   3            
 250   3          }
 251   2          if(time_start>50)//时间到了没有按下确定，取消
 252   2          {
 253   3              time_start=0;
 254   3              TV_chnel_flag=0;
 255   3              TV_chnel_arr[0]='-';
 256   3              TV_chnel_arr[1]='-';
 257   3            WriteStr_8x16(2,72,"   ");
 258   3          }
 259   2          PrintNum_8x16(3,0,sum);
 260   2            if(time_flag==1)
 261   2            {
 262   3              time_flag=0;
 263   3                sum++;
 264   3                Send_info();
 265   3                
 266   3              if(sum>9)sum=0;
 267   3            //  Send_info();
 268   3              
 269   3            }
 270   2            if(read_buff)
 271   2            {
 272   3              read_buff=0;
 273   3              Check_uart_buff();
 274   3              
 275   3            }
 276   2            if(BLE_RST_Flag>=BLE_RST_WAIT_TIME &&BLE_RST_Flag_bit)
 277   2            {   
 278   3              BLE_reset();
 279   3              BLE_RST_Flag=0;
 280   3              BLE_RST_Flag_bit=0;
 281   3            } 
 282   2            
 283   2      
 284   2        }
 285   1      }
 286          //20ms 中断
 287          void tm1_isr() interrupt 3 using 1
 288          {
 289   1          static unsigned char mun;
 290   1        mun++;
 291   1          if(BLE_RST_Flag_bit)
 292   1        {
 293   2          if(BLE_RST_Flag<BLE_RST_WAIT_TIME)
 294   2          BLE_RST_Flag++; 
 295   2        }
 296   1        if(mun%5==0)  //100MS
 297   1        {
 298   2        
 299   2          read_buff=1;
 300   2          if(time_start)
 301   2          {
 302   3            time_start++;
C51 COMPILER V9.52.0.0   MAIN                                                              08/19/2018 17:14:47 PAGE 6   

 303   3          }
 304   2          
 305   2        }
 306   1        if(mun==70)
 307   1        {
 308   2          mun=0;
 309   2          time_flag=1;
 310   2        }
 311   1      }
 312          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    689    ----
   CONSTANT SIZE    =     33    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      9       2
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      3    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
