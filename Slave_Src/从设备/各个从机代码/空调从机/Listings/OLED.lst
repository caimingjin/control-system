C51 COMPILER V9.52.0.0   OLED                                                              08/18/2018 20:16:56 PAGE 1   


C51 COMPILER V9.52.0.0, COMPILATION OF MODULE OLED
OBJECT MODULE PLACED IN .\Objects\OLED.obj
COMPILER INVOKED BY: D:\KEIL C51\C51\BIN\C51.EXE OLED.C BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings\OLED.lst) TABS(2) OBJ
                    -ECT(.\Objects\OLED.obj)

line level    source

   1          /***********************************
   2            ÎÄ¼þÃû£º OLED.C
   3            °æ±¾ºÅ£º V1.0
   4            ×÷  Õß£º FG
   5            Ê±  ¼ä£º 2015-2-7 16:00:59
   6            ±¸  ×¢£º ²Î¿¼ÐÅÒâµç×Ó¿Æ¼¼oled.cÄÚÈÝ
   7          *************************************/
   8          
   9          #include "OLED.H"
  10          #include "stc15.h"
  11          
  12          sbit SCL_OLED       = P1^3;
  13          sbit SDA_OLED       = P1^2;
  14          sbit RST      = P1^1;
  15          sbit DC         = P1^0;
  16          
  17          //²Ù×÷ºº×ÖÊ±£¬ÓÃ»§×ÔÐÐÌæ»»ÏÂÃæºº×Ö¼°±àÂë
  18          const unsigned char code font16x16[] = {"Ê½×Ô¶¯³éÊªÖÆÀäÈÈÄ£ÄâµçÊÓ±ùÏä¿Õµ÷Ò£¿Ø¡æ"}; //ÕâÀïÖ»¶Ôºº×Ö½øÐÐ±àÂë£
             -¬Çë²»Òª°üº¬×Ö·ûµÄ±àÂë
  19          const unsigned char code font16x16_code[]={
  20          
  21          
  22          0x10,0x10,0x90,0x90,0x90,0x90,0x90,0x10,0x10,0xFF,0x10,0x10,0x11,0x16,0x10,0x00,
  23          0x00,0x20,0x60,0x20,0x3F,0x10,0x10,0x10,0x00,0x03,0x0C,0x10,0x20,0x40,0xF8,0x00,/*"Ê½",1*/
  24          0x00,0x00,0x00,0xF8,0x88,0x8C,0x8A,0x89,0x88,0x88,0x88,0xF8,0x00,0x00,0x00,0x00,
  25          0x00,0x00,0x00,0xFF,0x44,0x44,0x44,0x44,0x44,0x44,0x44,0xFF,0x00,0x00,0x00,0x00,/*"×Ô",0*/
  26          
  27          0x40,0x44,0xC4,0x44,0x44,0x44,0x40,0x10,0x10,0xFF,0x10,0x10,0x10,0xF0,0x00,0x00,
  28          0x10,0x3C,0x13,0x10,0x14,0xB8,0x40,0x30,0x0E,0x01,0x40,0x80,0x40,0x3F,0x00,0x00,/*"¶¯",1*/
  29          
  30          0x10,0x10,0x10,0xFF,0x10,0x90,0x00,0xF0,0x10,0x10,0xFF,0x10,0x10,0xF0,0x00,0x00,
  31          0x04,0x44,0x82,0x7F,0x01,0x00,0x00,0xFF,0x42,0x42,0x7F,0x42,0x42,0xFF,0x00,0x00,/*"³é",2*/
  32          
  33          0x10,0x60,0x02,0x8C,0x00,0xFE,0x92,0x92,0x92,0x92,0x92,0x92,0xFE,0x00,0x00,0x00,
  34          0x04,0x04,0x7E,0x01,0x44,0x48,0x50,0x7F,0x40,0x40,0x7F,0x50,0x48,0x44,0x40,0x00,/*"Êª",3*/
  35          
  36          0x40,0x50,0x4E,0x48,0x48,0xFF,0x48,0x48,0x48,0x40,0xF8,0x00,0x00,0xFF,0x00,0x00,
  37          0x00,0x00,0x3E,0x02,0x02,0xFF,0x12,0x22,0x1E,0x00,0x0F,0x40,0x80,0x7F,0x00,0x00,/*"ÖÆ",4*/
  38          
  39          0x00,0x02,0x0C,0xC0,0x00,0x40,0x20,0x10,0x0C,0x23,0xCC,0x10,0x20,0x40,0x40,0x00,
  40          0x02,0x02,0x7F,0x00,0x00,0x00,0x01,0x09,0x11,0x21,0xD1,0x0D,0x03,0x00,0x00,0x00,/*"Àä",5*/
  41          
  42          0x08,0x08,0x88,0xFF,0x48,0x48,0x00,0x08,0x48,0xFF,0x08,0x08,0xF8,0x00,0x00,0x00,
  43          0x81,0x65,0x08,0x07,0x20,0xC0,0x08,0x04,0x23,0xC0,0x03,0x00,0x23,0xC4,0x0F,0x00,/*"ÈÈ",7*/
  44          
  45          0x10,0x10,0xD0,0xFF,0x90,0x14,0xE4,0xAF,0xA4,0xA4,0xA4,0xAF,0xE4,0x04,0x00,0x00,
  46          0x04,0x03,0x00,0xFF,0x00,0x89,0x4B,0x2A,0x1A,0x0E,0x1A,0x2A,0x4B,0x88,0x80,0x00,   //Ä£ ¡ú0
  47          0x10,0x10,0x10,0xFF,0x90,0x00,0xF8,0x00,0x02,0x04,0x18,0x00,0xFF,0x00,0x00,0x00,
  48          0x02,0x42,0x81,0x7F,0x00,0x00,0x3F,0x10,0x88,0x40,0x30,0x0C,0x0B,0x30,0xC0,0x00,  //Äâ ¡ú1
  49          /*--  ÎÄ×Ö:  µç  --*/
  50          /*--  ËÎÌå12;  ´Ë×ÖÌåÏÂ¶ÔÓ¦µÄµãÕóÎª£º¿íx¸ß=16x16   --*/
  51          0x00,0x00,0xF8,0x88,0x88,0x88,0x88,0xFF,0x88,0x88,0x88,0x88,0xF8,0x00,0x00,0x00,
  52          0x00,0x00,0x1F,0x08,0x08,0x08,0x08,0x7F,0x88,0x88,0x88,0x88,0x9F,0x80,0xF0,0x00,  //µç  ¡ú0
  53            
C51 COMPILER V9.52.0.0   OLED                                                              08/18/2018 20:16:56 PAGE 2   

  54          /*--  ÎÄ×Ö:  ÊÓ  --*/
  55          /*--  ËÎÌå12;  ´Ë×ÖÌåÏÂ¶ÔÓ¦µÄµãÕóÎª£º¿íx¸ß=16x16   --*/
  56          0x08,0x08,0x89,0xEE,0x98,0x00,0x00,0xFE,0x02,0x02,0xF2,0x02,0x02,0xFE,0x00,0x00,
  57          0x02,0x01,0x00,0xFF,0x00,0x83,0x40,0x23,0x18,0x06,0x01,0x7E,0x80,0x83,0xE0,0x00,  //ÊÓ  ¡ú1
  58          
  59          
  60          
  61          0x00,0x02,0x0C,0xC0,0x00,0x20,0x20,0xE0,0x00,0xFF,0x70,0xA0,0x10,0x08,0x00,0x00,
  62          0x02,0x02,0x7F,0x00,0x10,0x08,0x06,0x41,0x80,0x7F,0x00,0x01,0x06,0x08,0x10,0x00,  //±ù  ¡ú2
  63          
  64          0x20,0x90,0x8C,0x87,0xEC,0x94,0x84,0x14,0xC8,0x47,0x44,0x4C,0x54,0xC4,0x04,0x00,
  65          0x40,0x20,0x18,0x06,0xFF,0x04,0x18,0x00,0xFF,0x92,0x92,0x92,0x92,0xFF,0x00,0x00,  //Ïä  ¡ú3
  66          
  67          
  68          
  69          0x10,0x0C,0x44,0x24,0x14,0x04,0x05,0x06,0x04,0x04,0x14,0x24,0x44,0x14,0x0C,0x00,
  70          0x00,0x40,0x40,0x41,0x41,0x41,0x41,0x7F,0x41,0x41,0x41,0x41,0x40,0x40,0x00,0x00,  //¿Õ  ¡ú0
  71          
  72          0x40,0x42,0xCC,0x00,0x00,0xFE,0x82,0x92,0x92,0xFE,0x92,0x92,0x82,0xFE,0x00,0x00,
  73          0x00,0x00,0x3F,0x10,0x88,0x7F,0x00,0x1E,0x12,0x12,0x12,0x5E,0x80,0x7F,0x00,0x00,  //µ÷  ¡ú1
  74          
  75          
  76          
  77          0x40,0x40,0x42,0xCC,0x00,0x00,0x4A,0x32,0x22,0x2A,0xF1,0x21,0x31,0x2D,0x00,0x00,
  78          0x00,0x80,0x40,0x3F,0x40,0x80,0x81,0xBD,0xA1,0xA1,0xBF,0xA1,0xA1,0xBD,0x81,0x00,  //Ò£  ¡ú0
  79          
  80          0x10,0x10,0x10,0xFF,0x90,0x20,0x98,0x48,0x28,0x09,0x0E,0x28,0x48,0xA8,0x18,0x00,
  81          0x02,0x42,0x81,0x7F,0x00,0x40,0x40,0x42,0x42,0x42,0x7E,0x42,0x42,0x42,0x40,0x00,  //¿Ø  ¡ú1
  82          
  83          
  84          /*--  ÎÄ×Ö:  ¡æ  --*/
  85          /*--  ËÎÌå12;  ´Ë×ÖÌåÏÂ¶ÔÓ¦µÄµãÕóÎª£º¿íx¸ß=16x16   --*/
  86          0x06,0x09,0x09,0xE6,0xF8,0x0C,0x04,0x02,0x02,0x02,0x02,0x02,0x04,0x1E,0x00,0x00,
  87          0x00,0x00,0x00,0x07,0x1F,0x30,0x20,0x40,0x40,0x40,0x40,0x40,0x20,0x10,0x00,0x00,
  88          
  89          };
  90          //======================================================
  91          void Delay_us()
  92          {
  93   1        ;
  94   1      }
  95          
  96          //======================================================
  97          // 128X64OLEDÒº¾§µ×²ãÇý¶¯[6X8]×ÖÌå¿â
  98          // Éè¼ÆÕß: ÐÅÒâ¿Æ¼¼
  99          // Ãè  Êö: [8X16]Î÷ÎÄ×Ö·ûµÄ×ÖÄ£Êý¾Ý (×ÝÏòÈ¡Ä£,×Ö½Úµ¹Ðò)
 100          // !"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\]^_`abcdefghijklmnopqrstuvwxyz{|}~
 101          //±¸×¢£ºÕâÀïÖ±½Ó²ÉÓÃÐÅÒâ¿Æ¼¼Ìá¹©µÄ8*16±àÂë£¬ÓÃ»§Ò²¿É²ÉÓÃ±àÂë¹¤¾ß×ÔÐÐ±àÂë
 102          //======================================================
 103          
 104          const unsigned char code F6x8[][6] ={0};
 105          //{
 106          //    { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },   //sp0
 107          //    { 0x00, 0x00, 0x00, 0x2f, 0x00, 0x00 },   // !1
 108          //    { 0x00, 0x00, 0x07, 0x00, 0x07, 0x00 },   // "2
 109          //    { 0x00, 0x14, 0x7f, 0x14, 0x7f, 0x14 },   // #3
 110          //    { 0x00, 0x24, 0x2a, 0x7f, 0x2a, 0x12 },   // $4
 111          //    { 0x00, 0x62, 0x64, 0x08, 0x13, 0x23 },   // %5
 112          //    { 0x00, 0x36, 0x49, 0x55, 0x22, 0x50 },   // &6
 113          //    { 0x00, 0x00, 0x05, 0x03, 0x00, 0x00 },   // '7
 114          //    { 0x00, 0x00, 0x1c, 0x22, 0x41, 0x00 },   // (8
 115          //    { 0x00, 0x00, 0x41, 0x22, 0x1c, 0x00 },   // )9
C51 COMPILER V9.52.0.0   OLED                                                              08/18/2018 20:16:56 PAGE 3   

 116          //    { 0x00, 0x14, 0x08, 0x3E, 0x08, 0x14 },   // *10
 117          //    { 0x00, 0x08, 0x08, 0x3E, 0x08, 0x08 },   // +11
 118          //    { 0x00, 0x00, 0x00, 0xA0, 0x60, 0x00 },   // ,12
 119          //    { 0x00, 0x08, 0x08, 0x08, 0x08, 0x08 },   // -13
 120          //    { 0x00, 0x00, 0x60, 0x60, 0x00, 0x00 },   // .14
 121          //    { 0x00, 0x20, 0x10, 0x08, 0x04, 0x02 },   // /15
 122          //    { 0x00, 0x3E, 0x51, 0x49, 0x45, 0x3E },   // 016
 123          //    { 0x00, 0x00, 0x42, 0x7F, 0x40, 0x00 },   // 117
 124          //    { 0x00, 0x42, 0x61, 0x51, 0x49, 0x46 },   // 218
 125          //    { 0x00, 0x21, 0x41, 0x45, 0x4B, 0x31 },   // 319
 126          //    { 0x00, 0x18, 0x14, 0x12, 0x7F, 0x10 },   // 420
 127          //    { 0x00, 0x27, 0x45, 0x45, 0x45, 0x39 },   // 521
 128          //    { 0x00, 0x3C, 0x4A, 0x49, 0x49, 0x30 },   // 622
 129          //    { 0x00, 0x01, 0x71, 0x09, 0x05, 0x03 },   // 723
 130          //    { 0x00, 0x36, 0x49, 0x49, 0x49, 0x36 },   // 824
 131          //    { 0x00, 0x06, 0x49, 0x49, 0x29, 0x1E },   // 925
 132          //    { 0x00, 0x00, 0x36, 0x36, 0x00, 0x00 },   // :26
 133          //    { 0x00, 0x00, 0x56, 0x36, 0x00, 0x00 },   // ;27
 134          //    { 0x00, 0x08, 0x14, 0x22, 0x41, 0x00 },   // <28
 135          //    { 0x00, 0x14, 0x14, 0x14, 0x14, 0x14 },   // =29
 136          //    { 0x00, 0x00, 0x41, 0x22, 0x14, 0x08 },   // >30
 137          //    { 0x00, 0x02, 0x01, 0x51, 0x09, 0x06 },   // ?31
 138          //    { 0x00, 0x32, 0x49, 0x59, 0x51, 0x3E },   // @32
 139          //    { 0x00, 0x7C, 0x12, 0x11, 0x12, 0x7C },   // A33
 140          //    { 0x00, 0x7F, 0x49, 0x49, 0x49, 0x36 },   // B34
 141          //    { 0x00, 0x3E, 0x41, 0x41, 0x41, 0x22 },   // C35
 142          //    { 0x00, 0x7F, 0x41, 0x41, 0x22, 0x1C },   // D36
 143          //    { 0x00, 0x7F, 0x49, 0x49, 0x49, 0x41 },   // E37
 144          //    { 0x00, 0x7F, 0x09, 0x09, 0x09, 0x01 },   // F38
 145          //    { 0x00, 0x3E, 0x41, 0x49, 0x49, 0x7A },   // G39
 146          //    { 0x00, 0x7F, 0x08, 0x08, 0x08, 0x7F },   // H40
 147          //    { 0x00, 0x00, 0x41, 0x7F, 0x41, 0x00 },   // I41
 148          //    { 0x00, 0x20, 0x40, 0x41, 0x3F, 0x01 },   // J42
 149          //    { 0x00, 0x7F, 0x08, 0x14, 0x22, 0x41 },   // K43
 150          //    { 0x00, 0x7F, 0x40, 0x40, 0x40, 0x40 },   // L44
 151          //    { 0x00, 0x7F, 0x02, 0x0C, 0x02, 0x7F },   // M45
 152          //    { 0x00, 0x7F, 0x04, 0x08, 0x10, 0x7F },   // N46
 153          //    { 0x00, 0x3E, 0x41, 0x41, 0x41, 0x3E },   // O47
 154          //    { 0x00, 0x7F, 0x09, 0x09, 0x09, 0x06 },   // P48
 155          //    { 0x00, 0x3E, 0x41, 0x51, 0x21, 0x5E },   // Q49
 156          //    { 0x00, 0x7F, 0x09, 0x19, 0x29, 0x46 },   // R50
 157          //    { 0x00, 0x46, 0x49, 0x49, 0x49, 0x31 },   // S51
 158          //    { 0x00, 0x01, 0x01, 0x7F, 0x01, 0x01 },   // T52
 159          //    { 0x00, 0x3F, 0x40, 0x40, 0x40, 0x3F },   // U53
 160          //    { 0x00, 0x1F, 0x20, 0x40, 0x20, 0x1F },   // V54
 161          //    { 0x00, 0x3F, 0x40, 0x38, 0x40, 0x3F },   // W55
 162          //    { 0x00, 0x63, 0x14, 0x08, 0x14, 0x63 },   // X56
 163          //    { 0x00, 0x07, 0x08, 0x70, 0x08, 0x07 },   // Y57
 164          //    { 0x00, 0x61, 0x51, 0x49, 0x45, 0x43 },   // Z58
 165          //    { 0x00, 0x00, 0x7F, 0x41, 0x41, 0x00 },   // [59
 166          //    { 0x00, 0x02, 0x04, 0x08, 0x10, 0x20 },   // \60
 167          //    { 0x00, 0x00, 0x41, 0x41, 0x7F, 0x00 },   // ]61
 168          //    { 0x00, 0x04, 0x02, 0x01, 0x02, 0x04 },   // ^62
 169          //    { 0x00, 0x40, 0x40, 0x40, 0x40, 0x40 },   // _63
 170          //    { 0x00, 0x00, 0x01, 0x02, 0x04, 0x00 },   // '64
 171          //    { 0x00, 0x20, 0x54, 0x54, 0x54, 0x78 },   // a65
 172          //    { 0x00, 0x7F, 0x48, 0x44, 0x44, 0x38 },   // b66
 173          //    { 0x00, 0x38, 0x44, 0x44, 0x44, 0x20 },   // c67
 174          //    { 0x00, 0x38, 0x44, 0x44, 0x48, 0x7F },   // d68
 175          //    { 0x00, 0x38, 0x54, 0x54, 0x54, 0x18 },   // e69
 176          //    { 0x00, 0x08, 0x7E, 0x09, 0x01, 0x02 },   // f70
 177          //    { 0x00, 0x18, 0xA4, 0xA4, 0xA4, 0x7C },   // g71
C51 COMPILER V9.52.0.0   OLED                                                              08/18/2018 20:16:56 PAGE 4   

 178          //    { 0x00, 0x7F, 0x08, 0x04, 0x04, 0x78 },   // h72
 179          //    { 0x00, 0x00, 0x44, 0x7D, 0x40, 0x00 },   // i73
 180          //    { 0x00, 0x40, 0x80, 0x84, 0x7D, 0x00 },   // j74
 181          //    { 0x00, 0x7F, 0x10, 0x28, 0x44, 0x00 },   // k75
 182          //    { 0x00, 0x00, 0x41, 0x7F, 0x40, 0x00 },   // l76
 183          //    { 0x00, 0x7C, 0x04, 0x18, 0x04, 0x78 },   // m77
 184          //    { 0x00, 0x7C, 0x08, 0x04, 0x04, 0x78 },   // n78
 185          //    { 0x00, 0x38, 0x44, 0x44, 0x44, 0x38 },   // o79
 186          //    { 0x00, 0xFC, 0x24, 0x24, 0x24, 0x18 },   // p80
 187          //    { 0x00, 0x18, 0x24, 0x24, 0x18, 0xFC },   // q81
 188          //    { 0x00, 0x7C, 0x08, 0x04, 0x04, 0x08 },   // r82
 189          //    { 0x00, 0x48, 0x54, 0x54, 0x54, 0x20 },   // s83
 190          //    { 0x00, 0x04, 0x3F, 0x44, 0x40, 0x20 },   // t84
 191          //    { 0x00, 0x3C, 0x40, 0x40, 0x20, 0x7C },   // u85
 192          //    { 0x00, 0x1C, 0x20, 0x40, 0x20, 0x1C },   // v86
 193          //    { 0x00, 0x3C, 0x40, 0x30, 0x40, 0x3C },   // w87
 194          //    { 0x00, 0x44, 0x28, 0x10, 0x28, 0x44 },   // x88
 195          //    { 0x00, 0x1C, 0xA0, 0xA0, 0xA0, 0x7C },   // y89
 196          //    { 0x00, 0x44, 0x64, 0x54, 0x4C, 0x44 },   // z90
 197          //    { 0x14, 0x14, 0x14, 0x14, 0x14, 0x14 }    // horiz lines91
 198          //};
 199          
 200          //======================================================
 201          // 128X64OLEDÒº¾§µ×²ãÇý¶¯[8X16]×ÖÌå¿â
 202          // Éè¼ÆÕß: ÐÅÒâ¿Æ¼¼
 203          // Ãè  Êö: [8X16]Î÷ÎÄ×Ö·ûµÄ×ÖÄ£Êý¾Ý (×ÝÏòÈ¡Ä£,×Ö½Úµ¹Ðò)
 204          // !"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\]^_`abcdefghijklmnopqrstuvwxyz{|}~
 205          //±¸×¢£ºÕâÀïÖ±½Ó²ÉÓÃÐÅÒâ¿Æ¼¼Ìá¹©µÄ8*16±àÂë£¬ÓÃ»§Ò²¿É²ÉÓÃ±àÂë¹¤¾ß×ÔÐÐ±àÂë
 206          //======================================================
 207          
 208          const unsigned char code F8X16[][16]=
 209          {
 210              {0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00},// 0
 211              {0x00,0x00,0x00,0xF8,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x33,0x30,0x00,0x00,0x00},//!1
 212              {0x00,0x10,0x0C,0x06,0x10,0x0C,0x06,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00},//"2
 213              {0x40,0xC0,0x78,0x40,0xC0,0x78,0x40,0x00,0x04,0x3F,0x04,0x04,0x3F,0x04,0x04,0x00},//#3
 214              {0x00,0x70,0x88,0xFC,0x08,0x30,0x00,0x00,0x00,0x18,0x20,0xFF,0x21,0x1E,0x00,0x00},//$4
 215              {0xF0,0x08,0xF0,0x00,0xE0,0x18,0x00,0x00,0x00,0x21,0x1C,0x03,0x1E,0x21,0x1E,0x00},//%5
 216              {0x00,0xF0,0x08,0x88,0x70,0x00,0x00,0x00,0x1E,0x21,0x23,0x24,0x19,0x27,0x21,0x10},//&6
 217              {0x10,0x16,0x0E,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00},//'7
 218              {0x00,0x00,0x00,0xE0,0x18,0x04,0x02,0x00,0x00,0x00,0x00,0x07,0x18,0x20,0x40,0x00},//(8
 219              {0x00,0x02,0x04,0x18,0xE0,0x00,0x00,0x00,0x00,0x40,0x20,0x18,0x07,0x00,0x00,0x00},//)9
 220              {0x40,0x40,0x80,0xF0,0x80,0x40,0x40,0x00,0x02,0x02,0x01,0x0F,0x01,0x02,0x02,0x00},//*10
 221              {0x00,0x00,0x00,0xF0,0x00,0x00,0x00,0x00,0x01,0x01,0x01,0x1F,0x01,0x01,0x01,0x00},//+11
 222              {0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x80,0xB0,0x70,0x00,0x00,0x00,0x00,0x00},//,12
 223              {0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x01,0x01,0x01,0x01,0x01,0x01,0x01},//-13
 224              {0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x30,0x30,0x00,0x00,0x00,0x00,0x00},//.14
 225              {0x00,0x00,0x00,0x00,0x80,0x60,0x18,0x04,0x00,0x60,0x18,0x06,0x01,0x00,0x00,0x00},///15
 226              {0x00,0xE0,0x10,0x08,0x08,0x10,0xE0,0x00,0x00,0x0F,0x10,0x20,0x20,0x10,0x0F,0x00},//016
 227              {0x00,0x10,0x10,0xF8,0x00,0x00,0x00,0x00,0x00,0x20,0x20,0x3F,0x20,0x20,0x00,0x00},//117
 228              {0x00,0x70,0x08,0x08,0x08,0x88,0x70,0x00,0x00,0x30,0x28,0x24,0x22,0x21,0x30,0x00},//218
 229              {0x00,0x30,0x08,0x88,0x88,0x48,0x30,0x00,0x00,0x18,0x20,0x20,0x20,0x11,0x0E,0x00},//319
 230              {0x00,0x00,0xC0,0x20,0x10,0xF8,0x00,0x00,0x00,0x07,0x04,0x24,0x24,0x3F,0x24,0x00},//420
 231              {0x00,0xF8,0x08,0x88,0x88,0x08,0x08,0x00,0x00,0x19,0x21,0x20,0x20,0x11,0x0E,0x00},//521
 232              {0x00,0xE0,0x10,0x88,0x88,0x18,0x00,0x00,0x00,0x0F,0x11,0x20,0x20,0x11,0x0E,0x00},//622
 233              {0x00,0x38,0x08,0x08,0xC8,0x38,0x08,0x00,0x00,0x00,0x00,0x3F,0x00,0x00,0x00,0x00},//723
 234              {0x00,0x70,0x88,0x08,0x08,0x88,0x70,0x00,0x00,0x1C,0x22,0x21,0x21,0x22,0x1C,0x00},//824
 235              {0x00,0xE0,0x10,0x08,0x08,0x10,0xE0,0x00,0x00,0x00,0x31,0x22,0x22,0x11,0x0F,0x00},//925
 236              {0x00,0x00,0x00,0xC0,0xC0,0x00,0x00,0x00,0x00,0x00,0x00,0x30,0x30,0x00,0x00,0x00},//:26
 237              {0x00,0x00,0x00,0x80,0x00,0x00,0x00,0x00,0x00,0x00,0x80,0x60,0x00,0x00,0x00,0x00},//;27
 238              {0x00,0x00,0x80,0x40,0x20,0x10,0x08,0x00,0x00,0x01,0x02,0x04,0x08,0x10,0x20,0x00},//<28
 239              {0x40,0x40,0x40,0x40,0x40,0x40,0x40,0x00,0x04,0x04,0x04,0x04,0x04,0x04,0x04,0x00},//=29
C51 COMPILER V9.52.0.0   OLED                                                              08/18/2018 20:16:56 PAGE 5   

 240              {0x00,0x08,0x10,0x20,0x40,0x80,0x00,0x00,0x00,0x20,0x10,0x08,0x04,0x02,0x01,0x00},//>30
 241              {0x00,0x70,0x48,0x08,0x08,0x08,0xF0,0x00,0x00,0x00,0x00,0x30,0x36,0x01,0x00,0x00},//?31
 242              {0xC0,0x30,0xC8,0x28,0xE8,0x10,0xE0,0x00,0x07,0x18,0x27,0x24,0x23,0x14,0x0B,0x00},//@32
 243              {0x00,0x00,0xC0,0x38,0xE0,0x00,0x00,0x00,0x20,0x3C,0x23,0x02,0x02,0x27,0x38,0x20},//A33
 244              {0x08,0xF8,0x88,0x88,0x88,0x70,0x00,0x00,0x20,0x3F,0x20,0x20,0x20,0x11,0x0E,0x00},//B34
 245              {0xC0,0x30,0x08,0x08,0x08,0x08,0x38,0x00,0x07,0x18,0x20,0x20,0x20,0x10,0x08,0x00},//C35
 246              {0x08,0xF8,0x08,0x08,0x08,0x10,0xE0,0x00,0x20,0x3F,0x20,0x20,0x20,0x10,0x0F,0x00},//D36
 247              {0x08,0xF8,0x88,0x88,0xE8,0x08,0x10,0x00,0x20,0x3F,0x20,0x20,0x23,0x20,0x18,0x00},//E37
 248              {0x08,0xF8,0x88,0x88,0xE8,0x08,0x10,0x00,0x20,0x3F,0x20,0x00,0x03,0x00,0x00,0x00},//F38
 249              {0xC0,0x30,0x08,0x08,0x08,0x38,0x00,0x00,0x07,0x18,0x20,0x20,0x22,0x1E,0x02,0x00},//G39
 250              {0x08,0xF8,0x08,0x00,0x00,0x08,0xF8,0x08,0x20,0x3F,0x21,0x01,0x01,0x21,0x3F,0x20},//H40
 251              {0x00,0x08,0x08,0xF8,0x08,0x08,0x00,0x00,0x00,0x20,0x20,0x3F,0x20,0x20,0x00,0x00},//I41
 252              {0x00,0x00,0x08,0x08,0xF8,0x08,0x08,0x00,0xC0,0x80,0x80,0x80,0x7F,0x00,0x00,0x00},//J42
 253              {0x08,0xF8,0x88,0xC0,0x28,0x18,0x08,0x00,0x20,0x3F,0x20,0x01,0x26,0x38,0x20,0x00},//K43
 254              {0x08,0xF8,0x08,0x00,0x00,0x00,0x00,0x00,0x20,0x3F,0x20,0x20,0x20,0x20,0x30,0x00},//L44
 255              {0x08,0xF8,0xF8,0x00,0xF8,0xF8,0x08,0x00,0x20,0x3F,0x00,0x3F,0x00,0x3F,0x20,0x00},//M45
 256              {0x08,0xF8,0x30,0xC0,0x00,0x08,0xF8,0x08,0x20,0x3F,0x20,0x00,0x07,0x18,0x3F,0x00},//N46
 257              {0xE0,0x10,0x08,0x08,0x08,0x10,0xE0,0x00,0x0F,0x10,0x20,0x20,0x20,0x10,0x0F,0x00},//O47
 258              {0x08,0xF8,0x08,0x08,0x08,0x08,0xF0,0x00,0x20,0x3F,0x21,0x01,0x01,0x01,0x00,0x00},//P48
 259              {0xE0,0x10,0x08,0x08,0x08,0x10,0xE0,0x00,0x0F,0x18,0x24,0x24,0x38,0x50,0x4F,0x00},//Q49
 260              {0x08,0xF8,0x88,0x88,0x88,0x88,0x70,0x00,0x20,0x3F,0x20,0x00,0x03,0x0C,0x30,0x20},//R50
 261              {0x00,0x70,0x88,0x08,0x08,0x08,0x38,0x00,0x00,0x38,0x20,0x21,0x21,0x22,0x1C,0x00},//S51
 262              {0x18,0x08,0x08,0xF8,0x08,0x08,0x18,0x00,0x00,0x00,0x20,0x3F,0x20,0x00,0x00,0x00},//T52
 263              {0x08,0xF8,0x08,0x00,0x00,0x08,0xF8,0x08,0x00,0x1F,0x20,0x20,0x20,0x20,0x1F,0x00},//U53
 264              {0x08,0x78,0x88,0x00,0x00,0xC8,0x38,0x08,0x00,0x00,0x07,0x38,0x0E,0x01,0x00,0x00},//V54
 265              {0xF8,0x08,0x00,0xF8,0x00,0x08,0xF8,0x00,0x03,0x3C,0x07,0x00,0x07,0x3C,0x03,0x00},//W55
 266              {0x08,0x18,0x68,0x80,0x80,0x68,0x18,0x08,0x20,0x30,0x2C,0x03,0x03,0x2C,0x30,0x20},//X56
 267              {0x08,0x38,0xC8,0x00,0xC8,0x38,0x08,0x00,0x00,0x00,0x20,0x3F,0x20,0x00,0x00,0x00},//Y57
 268              {0x10,0x08,0x08,0x08,0xC8,0x38,0x08,0x00,0x20,0x38,0x26,0x21,0x20,0x20,0x18,0x00},//Z58
 269              {0x00,0x00,0x00,0xFE,0x02,0x02,0x02,0x00,0x00,0x00,0x00,0x7F,0x40,0x40,0x40,0x00},//[59
 270              {0x00,0x0C,0x30,0xC0,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x01,0x06,0x38,0xC0,0x00},//\60
 271              {0x00,0x02,0x02,0x02,0xFE,0x00,0x00,0x00,0x00,0x40,0x40,0x40,0x7F,0x00,0x00,0x00},//]61
 272              {0x00,0x00,0x04,0x02,0x02,0x02,0x04,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00},//^62
 273              {0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80},//_63
 274              {0x00,0x02,0x02,0x04,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00},//`64
 275              {0x00,0x00,0x80,0x80,0x80,0x80,0x00,0x00,0x00,0x19,0x24,0x22,0x22,0x22,0x3F,0x20},//a65
 276              {0x08,0xF8,0x00,0x80,0x80,0x00,0x00,0x00,0x00,0x3F,0x11,0x20,0x20,0x11,0x0E,0x00},//b66
 277              {0x00,0x00,0x00,0x80,0x80,0x80,0x00,0x00,0x00,0x0E,0x11,0x20,0x20,0x20,0x11,0x00},//c67
 278              {0x00,0x00,0x00,0x80,0x80,0x88,0xF8,0x00,0x00,0x0E,0x11,0x20,0x20,0x10,0x3F,0x20},//d68
 279              {0x00,0x00,0x80,0x80,0x80,0x80,0x00,0x00,0x00,0x1F,0x22,0x22,0x22,0x22,0x13,0x00},//e69
 280              {0x00,0x80,0x80,0xF0,0x88,0x88,0x88,0x18,0x00,0x20,0x20,0x3F,0x20,0x20,0x00,0x00},//f70
 281              {0x00,0x00,0x80,0x80,0x80,0x80,0x80,0x00,0x00,0x6B,0x94,0x94,0x94,0x93,0x60,0x00},//g71
 282              {0x08,0xF8,0x00,0x80,0x80,0x80,0x00,0x00,0x20,0x3F,0x21,0x00,0x00,0x20,0x3F,0x20},//h72
 283              {0x00,0x80,0x98,0x98,0x00,0x00,0x00,0x00,0x00,0x20,0x20,0x3F,0x20,0x20,0x00,0x00},//i73
 284              {0x00,0x00,0x00,0x80,0x98,0x98,0x00,0x00,0x00,0xC0,0x80,0x80,0x80,0x7F,0x00,0x00},//j74
 285              {0x08,0xF8,0x00,0x00,0x80,0x80,0x80,0x00,0x20,0x3F,0x24,0x02,0x2D,0x30,0x20,0x00},//k75
 286              {0x00,0x08,0x08,0xF8,0x00,0x00,0x00,0x00,0x00,0x20,0x20,0x3F,0x20,0x20,0x00,0x00},//l76
 287              {0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x00,0x20,0x3F,0x20,0x00,0x3F,0x20,0x00,0x3F},//m77
 288              {0x80,0x80,0x00,0x80,0x80,0x80,0x00,0x00,0x20,0x3F,0x21,0x00,0x00,0x20,0x3F,0x20},//n78
 289              {0x00,0x00,0x80,0x80,0x80,0x80,0x00,0x00,0x00,0x1F,0x20,0x20,0x20,0x20,0x1F,0x00},//o79
 290              {0x80,0x80,0x00,0x80,0x80,0x00,0x00,0x00,0x80,0xFF,0xA1,0x20,0x20,0x11,0x0E,0x00},//p80
 291              {0x00,0x00,0x00,0x80,0x80,0x80,0x80,0x00,0x00,0x0E,0x11,0x20,0x20,0xA0,0xFF,0x80},//q81
 292              {0x80,0x80,0x80,0x00,0x80,0x80,0x80,0x00,0x20,0x20,0x3F,0x21,0x20,0x00,0x01,0x00},//r82
 293              {0x00,0x00,0x80,0x80,0x80,0x80,0x80,0x00,0x00,0x33,0x24,0x24,0x24,0x24,0x19,0x00},//s83
 294              {0x00,0x80,0x80,0xE0,0x80,0x80,0x00,0x00,0x00,0x00,0x00,0x1F,0x20,0x20,0x00,0x00},//t84
 295              {0x80,0x80,0x00,0x00,0x00,0x80,0x80,0x00,0x00,0x1F,0x20,0x20,0x20,0x10,0x3F,0x20},//u85
 296              {0x80,0x80,0x80,0x00,0x00,0x80,0x80,0x80,0x00,0x01,0x0E,0x30,0x08,0x06,0x01,0x00},//v86
 297              {0x80,0x80,0x00,0x80,0x00,0x80,0x80,0x80,0x0F,0x30,0x0C,0x03,0x0C,0x30,0x0F,0x00},//w87
 298              {0x00,0x80,0x80,0x00,0x80,0x80,0x80,0x00,0x00,0x20,0x31,0x2E,0x0E,0x31,0x20,0x00},//x88
 299              {0x80,0x80,0x80,0x00,0x00,0x80,0x80,0x80,0x80,0x81,0x8E,0x70,0x18,0x06,0x01,0x00},//y89
 300              {0x00,0x80,0x80,0x80,0x80,0x80,0x80,0x00,0x00,0x21,0x30,0x2C,0x22,0x21,0x30,0x00},//z90
 301              {0x00,0x00,0x00,0x00,0x80,0x7C,0x02,0x02,0x00,0x00,0x00,0x00,0x00,0x3F,0x40,0x40},//{91
C51 COMPILER V9.52.0.0   OLED                                                              08/18/2018 20:16:56 PAGE 6   

 302              {0x00,0x00,0x00,0x00,0xFF,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xFF,0x00,0x00,0x00},//|92
 303              {0x00,0x02,0x02,0x7C,0x80,0x00,0x00,0x00,0x00,0x40,0x40,0x3F,0x00,0x00,0x00,0x00},//}93
 304              {0x00,0x06,0x01,0x01,0x02,0x02,0x04,0x04,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00},//~94
 305          };
 306          
 307          /*----------------------------------------------------------------------------*
 308           * ÄÚ²¿º¯ÊýÔ­ÐÍ                                                               *
 309           *----------------------------------------------------------------------------*/
 310          void WriteDat(unsigned char Dat);
 311          void WriteCmd(unsigned char Cmd);
 312          void SetPos(unsigned char Page, unsigned char Column);
 313          void FillScreen(unsigned char Dat);
 314          void SetAddressMode(unsigned char  AddMode);                   //È¡ÖµÎª0~2
 315          void SetStartPage(unsigned char StartPage);                      //ÓÃÓÚÒ³µØÖ·Ä£Ê½
 316          void SetStartColumn(unsigned char StartColumn);                //ÓÃÓÚÒ³µØÖ·Ä£Ê½
 317          void SetPageAddress(unsigned char Start, unsigned char End);   //×¢£º¸Ãº¯Êý½öÓÃÓÚË®Æ½µØÖ·»ò´¹Ö±µØÖ·Ä£Ê½
 318          void SetColumnAddress(unsigned char Start, unsigned char End);   //×¢£º¸Ãº¯Êý½öÓÃÓÚË®Æ½µØÖ·»ò´¹Ö±µØÖ·Ä£Ê½
 319          void SetStartLine(unsigned char StartLine);                      //È¡Öµ£º0~63
 320          void SetContrast(unsigned char ContrastValue);                   //È¡Öµ·¶Î§Îª0~255¹²256¼¶¶Ô±È¶È
 321          void SetChargePump(unsigned char  on);                           //0£º¹Ø±ÕµçºÉ±Ã£»1£º¿ªÆôµçºÉ±Ã
 322          void SetCommonRemap(unsigned char Dat);                          //ÉèÖÃCOMÊä³öµÄÉ¨Ãè·½Ïò
 323          void SetSegmentRemap(unsigned char Dat);                       //ÉèÖÃsegmentµÄÖØÓ³Éä
 324          void SetEntireDisplay(unsigned char OnMode);                   // 0: Õý³£ÏÔÊ¾
 325          void SetInverseDisplay(unsigned char InverseValue);          // ·´°×ÏÔÊ¾¿ª/¹Ø
 326          void SetMultiplexRatio(unsigned char Ratio);                   //È¡Öµ£º0~63
 327          void SetDisplayOnOff(unsigned char on);                          // ÉèÖÃÏÔÊ¾¿ª/¹Ø
 328          void SetDisplayOffset(unsigned char OffsetValue);
 329          void SetDisplayClock(unsigned char Value);
 330          void SetPrechargePeriod(unsigned char Value);                    // ÉèÖÃÔ¤³äµçÖÜÆÚ£¬È±Ê¡Îª0x22
 331          void SetCommonConfig(unsigned char Dat);                       // È±Ê¡ => 0x12 (0x10)
 332          void SetVCOMH(unsigned char Dat);                                //Dat¸ñÊ½£º 0xxx_0000
 333          void SetNop(void);
 334          void OLED_Init(void);
 335          void WriteChar_6x8(unsigned char Page,unsigned char Column, unsigned char Dat);
 336          void WriteStr_8x16(unsigned char Page, unsigned char Column, unsigned char Str[]);
 337          void WriteChinese16x16(unsigned char Page,unsigned char Column,unsigned char Str[]);
 338          void WriteMixStrXx16(unsigned char Page, unsigned char Column, unsigned char Str[]);
 339          void PrintChar(unsigned char Page, unsigned char Column, char Dat);
 340          void PrintShort(unsigned char Page, unsigned char Column, int Dat);
 341          void PrintImage(unsigned char ImageTable[], unsigned char RowNum, unsigned char ColumnNum);
 342          
 343          
 344          /*----------------------------------------------------------------------------*
 345           * Íâ²¿º¯ÊýÔ­ÐÍ                                                               *
 346           *----------------------------------------------------------------------------*/
 347          
 348          /*****************************************************************************
 349           º¯ Êý Ãû  : WriteDat
 350           ¹¦ÄÜÃèÊö  : ÏòOLEDÐ´Êý¾Ý
 351           ÊäÈë²ÎÊý  : unsigned char   Dat
 352           Êä³ö²ÎÊý  : NONE
 353           ·µ »Ø Öµ  : NONE
 354          *****************************************************************************/
 355          void WriteDat(unsigned char Dat)
 356          {
 357   1          unsigned char i;
 358   1      
 359   1          for(i=0;i<8;i++)
 360   1          { 
 361   2          DC   = 1;           //Ð´Êý¾Ý
 362   2            SCL_OLED  = 0;            //SCL_OLEDÀ­µÍ£¬ÎªÊý¾Ý½»»»×ö×¼±¸
 363   2          Delay_us();
C51 COMPILER V9.52.0.0   OLED                                                              08/18/2018 20:16:56 PAGE 7   

 364   2      
 365   2              if (Dat&0x80)           //ÏÈ·¢ËÍ×î¸ßÎ»
 366   2                  SDA_OLED = 1;
 367   2              else
 368   2                  SDA_OLED = 0;
 369   2      
 370   2              SCL_OLED = 1;             //ÉÏÉýÑØËø´æÊý¾Ýµ½OLED
 371   2              Delay_us();   
 372   2              Dat <<= 1;    
 373   2          }
 374   1      }
 375          
 376          /*****************************************************************************
 377           º¯ Êý Ãû  : WriteCmd
 378           ¹¦ÄÜÃèÊö  : ÏòOLEDÐ´ÃüÁî
 379           ÊäÈë²ÎÊý  : unsigned char Cmd  
 380           Êä³ö²ÎÊý  : NONE
 381           ·µ »Ø Öµ  : NONE
 382          *****************************************************************************/
 383          void WriteCmd(unsigned char Cmd)
 384          {
 385   1             unsigned char i;
 386   1      
 387   1          for(i=0;i<8;i++)
 388   1          { 
 389   2          DC   = 0;           //Ð´ÃüÁî
 390   2            SCL_OLED  = 0;            //SCL_OLEDÀ­µÍ£¬ÎªÊý¾Ý½»»»×ö×¼±¸
 391   2          Delay_us();
 392   2      
 393   2              if (Cmd&0x80)           //ÏÈ·¢ËÍ×î¸ßÎ»
 394   2                  SDA_OLED = 1;
 395   2              else
 396   2                  SDA_OLED = 0;
 397   2      
 398   2              SCL_OLED = 1;             //ÉÏÉýÑØËø´æÊý¾Ýµ½OLED
 399   2              Delay_us();   
 400   2              Cmd <<= 1;    
 401   2          }
 402   1      }
 403          
 404          /*****************************************************************************
 405           º¯ Êý Ãû  : SetPos
 406           ¹¦ÄÜÃèÊö  : ÉèÖÃ×ø±ê
 407           ÊäÈë²ÎÊý  : unsigned char Page 
 408                       unsigned char Column  
 409           Êä³ö²ÎÊý  : NONE
 410           ·µ »Ø Öµ  : NONE
 411          *****************************************************************************/
 412          void SetPos(unsigned char Page, unsigned char Column)          //Column(ÁÐ)È¡Öµ0~127£¬Page(Ò³)È¡Öµ0~7
 413          { 
 414   1          WriteCmd(0xb0 + Page);           //Ò³Ä£Ê½ÏÂ£¬ÉèÖÃÒ³Ê×µØÖ·£¬pageµÄÈ¡Öµ£º0~7
 415   1          WriteCmd(((Column & 0xf0) >> 4) | 0x10);   //ÁÐÖµ¶ÔÓ¦µÄ¸ßËÄÎ»ÃüÁî£º 0001_X7X6X5X4
 416   1          WriteCmd(( Column & 0x0f) | 0x00);     //ÁÐÖµ¶ÔÓ¦µÄµÍËÄÎ»ÃüÁî£º 0000_X3X2X1X0
 417   1      } 
 418          
 419          /*****************************************************************************
 420           º¯ Êý Ãû  : FillScreen
 421           ¹¦ÄÜÃèÊö  : ¶ÔÈ«ÆÁÐ´ÈëÍ¬Ò»¸ö×Ö·û 
 422                       Èç LED_Fill(0x01);    ¶ÔÓÚÄ³Ò»Î»0Îª²»ÁÁ 1ÎªÁÁ
 423                      ------------------------------------------------------
 424                                          ¹²128ÁÐ
 425                            1           1                1   LSB
C51 COMPILER V9.52.0.0   OLED                                                              08/18/2018 20:16:56 PAGE 8   

 426                        ¹²  0           0                0  ¡ü
 427                        8   0           0                0  |
 428             ´Ë         ×é  0       ¡­¡­0     ¡­¡­¡­¡­   0        |
 429             Îª         ×Ö  0           0                0  |
 430             Ò»         ·û  0           0                0  |
 431             Ò³         ¼´  0           0                0  |
 432                        8   0           0                0  MSB
 433          ---------------------------------------------¡ª-------------
 434                        Ò³  1           1                1
 435                        64  0           0                0
 436                        ÐÐ  .           .                .
 437                            .           .    ¡­¡­¡­¡­    .
 438                            .           .                . 
 439                            .           .                .
 440                            0           0                0
 441                      ------------------------------------------------------
 442           ÊäÈë²ÎÊý  : unsigned char Dat  
 443           Êä³ö²ÎÊý  : NONE
 444           ·µ »Ø Öµ  : NONE
 445          *****************************************************************************/
 446          void FillScreen(unsigned char Dat)
 447          {
 448   1          unsigned char Page,Column;
 449   1          
 450   1          for(Page = 0; Page < 8; Page++)
 451   1          {
 452   2              WriteCmd(0xb0 + Page);                  //0xb0+0~7±íÊ¾Ò³0~7£¬Ö¸¶¨Ò³µÄ¿ªÊ¼Î»ÖÃ
 453   2              WriteCmd(0x00);                         //0x00+0~16±íÊ¾½«128ÁÐ·Ö³É16×éÆäµØÖ·ÔÚÄ³×éÖÐµÄµÚ¼¸ÁÐ
 454   2              WriteCmd(0x10);                         //0x10+0~16±íÊ¾½«128ÁÐ·Ö³É16×éÆäµØÖ·ËùÔÚµÚ¼¸×é
 455   2              for(Column = 0; Column < 128; Column++)  //Ð´128ÁÐ
 456   2              {
 457   3                  WriteDat(Dat);
 458   3              }
 459   2          }
 460   1      } 
 461          
 462          /*****************************************************************************
 463           º¯ Êý Ãû  : SetAddressMode
 464           ¹¦ÄÜÃèÊö  : ÉèÖÃµØÖ·µÄÄ£Ê½
 465           ÊäÈë²ÎÊý  : unsigned char AddMode  
 466           Êä³ö²ÎÊý  : NONE
 467           ·µ »Ø Öµ  : NONE
 468          *****************************************************************************/
 469          void SetAddressMode(unsigned char  AddMode)   //È¡ÖµÎª0~2
 470          {
 471   1          WriteCmd(0x20);        // ÉèÖÃÄÚ´æµØÖ·Ä£Ê½, È±Ê¡ => 0x02£¬¼´£ºÒ³µØÖ·Ä£Ê½
 472   1          WriteCmd(AddMode);      // 0x00 => Ë®Æ½µØÖ·Ä£Ê½; 0x01 => ´¹Ö±µØÖ·Ä£Ê½; 0x02 => Ò³µØÖ·Ä£Ê½             
             -                                          
 473   1      }
 474          
 475          /*****************************************************************************
 476           º¯ Êý Ãû  : SetStartPage
 477           ¹¦ÄÜÃèÊö  : ÉèÖÃÁÐµÄÆðÊ¼Î»ÖÃ
 478           ÊäÈë²ÎÊý  : unsigned char StartPage  
 479           Êä³ö²ÎÊý  : NONE
 480           ·µ »Ø Öµ  : NONE
 481          *****************************************************************************/
 482          void SetStartPage(unsigned char StartPage)  //ÓÃÓÚÒ³µØÖ·Ä£Ê½   
 483          {
 484   1          WriteCmd(0xb0 | StartPage);         //StartPageÈ¡Öµ£º0~7
 485   1      }
 486          
C51 COMPILER V9.52.0.0   OLED                                                              08/18/2018 20:16:56 PAGE 9   

 487          /*****************************************************************************
 488           º¯ Êý Ãû  : SetStartColumn
 489           ¹¦ÄÜÃèÊö  : ÉèÖÃÁÐµÄÆðÊ¼Î»ÖÃ
 490           ÊäÈë²ÎÊý  : unsigned char StartColumn  
 491           Êä³ö²ÎÊý  : NONE
 492           ·µ »Ø Öµ  : NONE
 493          *****************************************************************************/
 494          void SetStartColumn(unsigned char StartColumn)     //ÓÃÓÚÒ³µØÖ·Ä£Ê½
 495          {                          //StartColumnÈ¡Öµ0~127
 496   1          WriteCmd(((StartColumn & 0xf0) >> 4) | 0x10);  //ÁÐÖµ¶ÔÓ¦µÄ¸ßËÄÎ»ÃüÁî£º 0001_X7X6X5X4
 497   1          WriteCmd(( StartColumn & 0x0f) | 0x00);      //ÁÐÖµ¶ÔÓ¦µÄµÍËÄÎ»ÃüÁî£º 0000_X3X2X1X0
 498   1      }
 499          
 500          /*****************************************************************************
 501           º¯ Êý Ãû  : SetPageAddress
 502           ¹¦ÄÜÃèÊö  : ÉèÖÃÐÐµØÖ·µÄ×÷ÓÃ·¶Î§
 503           ÊäÈë²ÎÊý  : unsigned char StartColumn  
 504           Êä³ö²ÎÊý  : NONE
 505           ·µ »Ø Öµ  : NONE
 506           ±¸    ×¢  : ¸Ãº¯Êý½öÓÃÓÚË®Æ½µØÖ·»ò´¹Ö±µØÖ·Ä£Ê½
 507          *****************************************************************************/
 508          void SetPageAddress(unsigned char Start, unsigned char End)  //×¢£º¸Ãº¯Êý½öÓÃÓÚË®Æ½µØÖ·»ò´¹Ö±µØÖ·Ä£Ê½
 509          {
 510   1          WriteCmd(0x22);        // ÉèÖÃÒ³µØÖ·
 511   1          WriteCmd(Start);           // ÆðÊ¼Ò³µØÖ·È±Ê¡Öµ => 0x00 
 512   1          WriteCmd(End);           // ½áÊøÒ³µØÖ·È±Ê¡Öµ => 0x07 
 513   1      }
 514          
 515          /*****************************************************************************
 516           º¯ Êý Ãû  : SetColumnAddress
 517           ¹¦ÄÜÃèÊö  : ÉèÖÃÁÐµØÖ·µÄ×÷ÓÃ·¶Î§
 518           ÊäÈë²ÎÊý  : unsigned char Start, unsigned char End  
 519           Êä³ö²ÎÊý  : NONE
 520           ·µ »Ø Öµ  : NONE
 521           ±¸    ×¢  : ¸Ãº¯Êý½öÓÃÓÚË®Æ½µØÖ·»ò´¹Ö±µØÖ·Ä£Ê½
 522          *****************************************************************************/
 523          void SetColumnAddress(unsigned char Start, unsigned char End) //×¢£º¸Ãº¯Êý½öÓÃÓÚË®Æ½µØÖ·»ò´¹Ö±µØÖ·Ä£Ê½
 524          {
 525   1          WriteCmd(0x21);        // ÉèÖÃÁÐµØÖ·
 526   1          WriteCmd(Start);       // ÆðÊ¼µØÖ·È±Ê¡Öµ => 0x00 
 527   1          WriteCmd(End);         // ½áÊøµØÖ·È±Ê¡Öµ => 0x7F 
 528   1      }
 529          
 530          /*****************************************************************************
 531           º¯ Êý Ãû  : SetStartLine
 532           ¹¦ÄÜÃèÊö  : ÉèÖÃÆðÊ¼µÄÐÐÖµ
 533           ÊäÈë²ÎÊý  : unsigned char StartLine  
 534           Êä³ö²ÎÊý  : NONE
 535           ·µ »Ø Öµ  : NONE
 536          *****************************************************************************/
 537          void SetStartLine(unsigned char StartLine)    //È¡Öµ£º0~63
 538          {
 539   1          WriteCmd(0x40|StartLine);                 // ÉèÖÃÏÔÊ¾µÄÆðÊ¼ÐÐ, È±Ê¡Öµ => 0x40 (0x00)                  
             -                           
 540   1      }
 541          
 542          /*****************************************************************************
 543           º¯ Êý Ãû  : SetContrast
 544           ¹¦ÄÜÃèÊö  : ÉèÖÃÆðÊ¼µÄÐÐÖµ
 545           ÊäÈë²ÎÊý  : unsigned char ContrastValue  
 546           Êä³ö²ÎÊý  : NONE
 547           ·µ »Ø Öµ  : NONE
C51 COMPILER V9.52.0.0   OLED                                                              08/18/2018 20:16:56 PAGE 10  

 548          *****************************************************************************/
 549          void SetContrast(unsigned char ContrastValue) //È¡Öµ·¶Î§Îª0~255¹²256¼¶¶Ô±È¶È
 550          {
 551   1          WriteCmd(0x81);               // ÉèÖÃOLEDÏÔÊ¾µÄ¶Ô±È¶È
 552   1          WriteCmd(ContrastValue);      // È±Ê¡ => 0x7F
 553   1      }
 554          
 555          /*****************************************************************************
 556           º¯ Êý Ãû  : SetChargePump
 557           ¹¦ÄÜÃèÊö  : ÉèÖÃÆðÊ¼µÄÐÐÖµ
 558           ÊäÈë²ÎÊý  : unsigned char On  
 559           Êä³ö²ÎÊý  : NONE
 560           ·µ »Ø Öµ  : NONE
 561          *****************************************************************************/
 562          void SetChargePump(unsigned char  on)   //0£º¹Ø±ÕµçºÉ±Ã£»1£º¿ªÆôµçºÉ±Ã
 563          {
 564   1          WriteCmd(0x8D);                   // Set Charge Pump
 565   1        if(on)
 566   1            WriteCmd(0x14);               // 0x14,Ê¹ÄÜµçºÉ±Ã
 567   1        else
 568   1          WriteCmd(0x10);               // È±Ê¡ => 0x10£¬¼´¹Ø±ÕµçºÉ±Ã
 569   1      }
 570          
 571          /*****************************************************************************
 572           º¯ Êý Ãû  : SetCommonRemap
 573           ¹¦ÄÜÃèÊö  : ÉèÖÃÐÐµÄÖØÓ³Éä(¿ÉÒÔÍ¨¹ýcomµÄÖØÓ³Éä£¬ÊµÏÖ´¹Ö±·½ÏòµÄ¾µÏñ)
 574           ÊäÈë²ÎÊý  : unsigned char Dat  
 575           Êä³ö²ÎÊý  : NONE
 576           ·µ »Ø Öµ  : NONE
 577          *****************************************************************************/
 578          void SetCommonRemap(unsigned char Dat) //ÉèÖÃCOMÊä³öµÄÉ¨Ãè·½Ïò
 579          {
 580   1        if(Dat)
 581   1            WriteCmd(0xC8);   //0xc8 ´ÓCOM63¡ú0:
 582   1        else
 583   1          WriteCmd(0xC0);   //È±Ê¡=> 0xC0£¬´ÓCOM0¡ú63
 584   1      }
 585          
 586          /*****************************************************************************
 587           º¯ Êý Ãû  : SetSegmentRemap
 588           ¹¦ÄÜÃèÊö  : ÉèÖÃÁÐµÄÖØÓ³Éä(¿ÉÒÔÍ¨¹ýSegmentµÄÖØÓ³Éä£¬ÊµÏÖË®Æ½·½ÏòµÄ¾µÏñ)
 589           ÊäÈë²ÎÊý  : unsigned char On  
 590           Êä³ö²ÎÊý  : NONE
 591           ·µ »Ø Öµ  : NONE
 592          *****************************************************************************/
 593          void SetSegmentRemap(unsigned char Dat)    // ÉèÖÃsegmentµÄÖØÓ³Éä
 594          {                      // È±Ê¡ => 0xA0
 595   1        if(Dat)
 596   1            WriteCmd(0xA1);            // 0xA1 => ÁÐ127Ó³Éäµ½SEG0
 597   1          else                   
 598   1          WriteCmd(0xA0);                    // 0xA0 => ÁÐµØÖ·0Ó³Éäµ½seg127   
 599   1      }
 600          
 601          /*****************************************************************************
 602           º¯ Êý Ãû  : SetEntireDisplay
 603           ¹¦ÄÜÃèÊö  : ÉèÖÃÕûÆÁµÄÏÔÊ¾ÄÚÈÝ 
 604           ÊäÈë²ÎÊý  : unsigned char On  
 605           Êä³ö²ÎÊý  : NONE
 606           ·µ »Ø Öµ  : NONE
 607          *****************************************************************************/
 608          void SetEntireDisplay(unsigned char OnMode)   // 0: Õý³£ÏÔÊ¾
 609          {
C51 COMPILER V9.52.0.0   OLED                                                              08/18/2018 20:16:56 PAGE 11  

 610   1          if(OnMode)        // Set Entire Display On / Off
 611   1          WriteCmd(0xA5);   // 0xA5 (0x01) => ¿ªÏÔÊ¾£¬µ«ºöÂÔRAMÖÐÄÚÈÝ
 612   1        else           
 613   1          WriteCmd(0xA4);   // 0xA4 (È±Ê¡) => Õý³£ÏÔÊ¾£¬ÏÔÊ¾RAMÖÐµÄÄÚÈÝ                           
 614   1      }
 615          
 616          /*****************************************************************************
 617           º¯ Êý Ãû  : SetInverseDisplay
 618           ¹¦ÄÜÃèÊö  : ÉèÖÃ·´°×ÏÔÊ¾Ä£Ê½ 
 619           ÊäÈë²ÎÊý  : unsigned char InverseValue  
 620           Êä³ö²ÎÊý  : NONE
 621           ·µ »Ø Öµ  : NONE
 622          *****************************************************************************/
 623          void  SetInverseDisplay(unsigned char InverseValue)  // ·´°×ÏÔÊ¾¿ª/¹Ø
 624          {
 625   1          WriteCmd(0xA6|InverseValue);  // È±Ê¡(InverseValue = 0) => 0xA6£¬Õý³£ÏÔÊ¾
 626   1                                      // 0xa7(InverseValue = 1) ,·´°×ÏÔÊ¾
 627   1      }
 628          
 629          /*****************************************************************************
 630           º¯ Êý Ãû  : SetMultiplexRatio
 631           ¹¦ÄÜÃèÊö  : ±¶ÆµÂÊÉèÖÃ
 632           ÊäÈë²ÎÊý  : unsigned char Ratio  
 633           Êä³ö²ÎÊý  : NONE
 634           ·µ »Ø Öµ  : NONE
 635          *****************************************************************************/
 636          void SetMultiplexRatio(unsigned char Ratio) //È¡Öµ£º0~63
 637          {
 638   1          WriteCmd(0xA8);        // ÉèÖÃ±¶ÆµÂÊ
 639   1          WriteCmd(Ratio);       // È±Ê¡ => 0x3F (1/64 Duty)
 640   1      }
 641          
 642          /*****************************************************************************
 643           º¯ Êý Ãû  : SetDisplayOnOff
 644           ¹¦ÄÜÃèÊö  : ÏÔÊ¾¿ª/¹ØÉèÖÃ
 645           ÊäÈë²ÎÊý  : unsigned char ON  
 646           Êä³ö²ÎÊý  : NONE
 647           ·µ »Ø Öµ  : NONE
 648          *****************************************************************************/
 649          void SetDisplayOnOff(unsigned char on)    // ÉèÖÃÏÔÊ¾¿ª/¹Ø
 650          {
 651   1          WriteCmd(0xAE|on);  //0: ¹ØÏÔÊ¾£»1£º¿ªÏÔÊ¾ £¬È±Ê¡Îª¹Ø
 652   1      }
 653          
 654          /*****************************************************************************
 655           º¯ Êý Ãû  : SetDisplayOffset
 656           ¹¦ÄÜÃèÊö  : ÏÔÊ¾¿ª/¹ØÉèÖÃ
 657           ÊäÈë²ÎÊý  : unsigned char OffsetValue  
 658           Êä³ö²ÎÊý  : NONE
 659           ·µ »Ø Öµ  : NONE
 660          *****************************************************************************/
 661          void SetDisplayOffset(unsigned char OffsetValue)
 662          {
 663   1          WriteCmd(0xD3);        // ÉèÖÃÏÔÊ¾Æ«ÒÆÁ¿
 664   1          WriteCmd(OffsetValue); // Default => 0x00 £¬OffsetValueµÄÈ¡Öµ0~63£¬¿ÉÊµÏÖ´¹Ö±·½ÏòÉÏµÄÆ«ÒÆ
 665   1      }
 666          
 667          /*****************************************************************************
 668           º¯ Êý Ãû  : SetDisplayClock
 669           ¹¦ÄÜÃèÊö  : ÏÔÊ¾¾§ÌåÆµÂÊ¼°Ê±ÖÓ·ÖÆµÂÊ
 670           ÊäÈë²ÎÊý  : unsigned char Value  
 671           Êä³ö²ÎÊý  : NONE
C51 COMPILER V9.52.0.0   OLED                                                              08/18/2018 20:16:56 PAGE 12  

 672           ·µ »Ø Öµ  : NONE
 673          *****************************************************************************/
 674          void SetDisplayClock(unsigned char Value)
 675          {
 676   1          WriteCmd(0xD5);         // Set Display Clock Divide Ratio / Oscillator Frequency
 677   1          WriteCmd(Value);        // Default => 0x80
 678   1                                  // D[3:0] => Êý¾ÝµÍËÄÎ»Îª·ÖÆµÂÊ
 679   1                                  // D[7:4] => ¸ßËÄÎ»Îª¾§ÌåÆµÂÊ
 680   1      }
 681          
 682          /*****************************************************************************
 683           º¯ Êý Ãû  : SetPrechargePeriod
 684           ¹¦ÄÜÃèÊö  : ÉèÖÃÔ¤³äµçÖÜÆÚ
 685           ÊäÈë²ÎÊý  : unsigned char Value  
 686           Êä³ö²ÎÊý  : NONE
 687           ·µ »Ø Öµ  : NONE
 688          *****************************************************************************/
 689          void SetPrechargePeriod(unsigned char Value) // ÉèÖÃÔ¤³äµçÖÜÆÚ£¬È±Ê¡Îª0x22
 690          {              
 691   1          WriteCmd(0xD9);        
 692   1          WriteCmd(Value);  // D[3:0]: Ô¤³äµçÖÜÆÚ£¬D[7:4]£º·ÅµçÖÜÆÚ 
 693   1      }
 694          
 695          /*****************************************************************************
 696           º¯ Êý Ãû  : SetCommonConfig
 697           ¹¦ÄÜÃèÊö  : ÉèÖÃÔ¤³äµçÖÜÆÚ
 698           ÊäÈë²ÎÊý  : unsigned char Dat  
 699           Êä³ö²ÎÊý  : NONE
 700           ·µ »Ø Öµ  : NONE
 701          *****************************************************************************/
 702          void SetCommonConfig(unsigned char Dat) // È±Ê¡ => 0x12 (0x10)
 703          {
 704   1          WriteCmd(0xDA);        // ÉèÖÃCOM¶ËµÄÓ²¼þÅäÖÃ
 705   1          WriteCmd(0x02|Dat);    // Alternative COM Pin Configuration
 706   1                                 // Disable COM Left/Right Re-Map£¨Dat[5]:0,¹Ø±ÕCOMÖØÓ³Éä£»1£ºÊ¹ÄÜCOMÖØÓ³Éä£©
 707   1      }
 708          
 709          /*****************************************************************************
 710           º¯ Êý Ãû  : SetVCOMH
 711           ¹¦ÄÜÃèÊö  : ÉèÖÃCOM¶ËµÄµçÆ½µÈ¼¶
 712           ÊäÈë²ÎÊý  : unsigned char Dat  
 713           Êä³ö²ÎÊý  : NONE
 714           ·µ »Ø Öµ  : NONE
 715          *****************************************************************************/
 716          void SetVCOMH(unsigned char Dat)   //Dat¸ñÊ½£º 0xxx_0000
 717          {
 718   1          WriteCmd(0xDB);              // Set VCOMH Deselect Level
 719   1          WriteCmd(Dat);                 // È±Ê¡ => 0x20 (0.77*VCC)
 720   1      }
 721          
 722          /*****************************************************************************
 723           º¯ Êý Ãû  : SetNop
 724           ¹¦ÄÜÃèÊö  : ¿Õ²Ù×÷ NOP
 725           ÊäÈë²ÎÊý  : NONE
 726           Êä³ö²ÎÊý  : NONE
 727           ·µ »Ø Öµ  : NONE
 728          *****************************************************************************/
 729          void SetNop(void)
 730          {
 731   1          WriteCmd(0xE3);                // ²»²Ù×÷
 732   1      }
 733          
C51 COMPILER V9.52.0.0   OLED                                                              08/18/2018 20:16:56 PAGE 13  

 734          /*****************************************************************************
 735           º¯ Êý Ãû  : LED_Init
 736           ¹¦ÄÜÃèÊö  : OLED³õÊ¼»¯
 737           ÊäÈë²ÎÊý  : VOID  
 738           Êä³ö²ÎÊý  : NONE
 739           ·µ »Ø Öµ  : NONE
 740           ±¸    ×¢  £ºÏêÏ¸Çë²Î¿¼0.96inch_LDR128064B2B201 9.5 Recommanded Software Initialization
 741          *****************************************************************************/
 742          void OLED_Init(void)        
 743          {
 744   1          unsigned char i;
 745   1      
 746   1          SCL_OLED = 1;      
 747   1          RST = 0;
 748   1          for(i = 0; i < 100; i++)
 749   1        {
 750   2          ;                      //´ÓÉÏµçµ½ÏÂÃæ¿ªÊ¼³õÊ¼»¯ÒªÓÐ×ã¹»µÄÊ±¼ä£¬¼´µÈ´ýRC¸´Î»Íê±Ï    
 751   2          }      
 752   1          RST = 1;
 753   1      
 754   1          SetDisplayOnOff(0);        // ¹ØÏÔÊ¾ (0£º¹ØÏÔÊ¾/1£º¿ªÏÔÊ¾)
 755   1          SetDisplayClock(0x80);     // ÉèÖÃÊ±ÖÓÎª100Frames/Sec £¬0x80ÎªÈ±Ê¡Öµ
 756   1          SetMultiplexRatio(0x3F);   // 1/64 Duty (0x0F~0x3F)
 757   1          SetDisplayOffset(0x00);    // ´¹Ö±ÏÔÊ¾ÎÞÆ«ÒÆ (0x00~0x3F)
 758   1          SetStartLine(0x00);        // ÉèÖÃÓ³ÉäÄÚÈÝÏÔÊ¾µÄÆðÊ¼ÐÐ(0x00~0x3F)
 759   1          SetChargePump(1);          // Ê¹ÄÜÄÚ²¿DC/DC×ª»»(0x00/0x04)
 760   1          SetAddressMode(0x02);      // ÉèÖÃÎªÒ³µØÖ·Ä£Ê½ (0x00/0x01/0x02)
 761   1          SetSegmentRemap(0x01);     // SegmentÖØÓ³Éä£»  0x00×óÓÒ·´ÖÃ 0x01Õý³£
 762   1          SetCommonRemap(0x01);      // ÉèÖÃCOMÉ¨Ãè·½Ïò  0x00ÉÏÏÂ·´ÖÃ 0x08Õý³£
 763   1          SetCommonConfig(0x10);     // ÉèÖÃcomÐòÁÐµÄÅäÖÃ (0x00/0x10)
 764   1          SetContrast(0x7F);         // ÉèÖÃ¶Ô±È¶È
 765   1          SetPrechargePeriod(0xF1);  // ÉèÖÃÔ¤³äµçÖÜÆÚÎª15¸öÊ±ÖÓ£¬·ÅµçÖÜÆÚÎª1¸öÊ±ÖÓÖÜÆÚ
 766   1          SetVCOMH(0x40);            // ÉèÖÃCOM¶ËµçÆ½µÈ¼¶
 767   1          SetEntireDisplay(0);       // Õý³£ÏÔÊ¾(0£ºÕý³£ÏÔÊ¾/1£ººöÂÔÏÔÊ¾)
 768   1          SetInverseDisplay(0);      // ·´°×ÉèÖÃ (0£ºÕý³£ÏÔÊ¾/1£º·´°×ÏÔÊ¾)  
 769   1          SetDisplayOnOff(1);        // ¿ªÏÔÊ¾ (0£º¹ØÏÔÊ¾/1£º¿ªÏÔÊ¾)
 770   1          FillScreen(0x00);            // ³õÊ¼ÇåÆÁ£¬Ìî³ä¿Õ°×
 771   1      ///    SetPos(0,0);      //²¢½«Î»ÖÃÉèÖÃÔÚ0Ò³£¬0ÁÐ
 772   1      
 773   1      } 
 774           
 775          /*****************************************************************************
 776           º¯ Êý Ãû  : WriteChar_16x16
 777           ¹¦ÄÜÃèÊö  : ÏÔÊ¾Ò»¸ö6x8±ê×¼ASCII×Ö·û
 778           ÊäÈë²ÎÊý  : unsigned char Column  ÏÔÊ¾µÄºá×ø±ê0~122,
 779                                             ÒòÎª6*8¸ñÊ½µÄ×Ö·û¿í¶ÈÎª6£¬Òò´Ë×Ö·ûÆðÊ¼ÁÐµØÖ·Ö»ÄÜÎª0~122
 780                       unsigned char Page    Ò³·¶Î§0¡«7
 781                       unsigned char Dat  ÏÔÊ¾µÄ×Ö·û
 782           Êä³ö²ÎÊý  : NONE
 783           ·µ »Ø Öµ  : NONE
 784          *****************************************************************************/
 785          void WriteChar_16x16(unsigned char Page,unsigned char Column, unsigned char Dat)
 786          {
 787   1          unsigned char i, temp;     
 788   1             
 789   1          temp = Dat - 32;   //ASCIIÂë±íµÄ0~31Îª²»¿É¼û×Ö·û£¬F6x8µÄ±àÂëÊ×ÐÐÎªASCiiÂë±íµÄµÚ32ÐÐ£¬¹ÊÐè¼õ32
 790   1          if(Column > 122)
 791   1          {
 792   2              Column = 0;    //ÈôÎÞ·¨Ð´ÏÂÒ»¸ö×Ö·û£¬ÔòÁíÆðÒ»Ò³£¬²¢½«ÁÐµØÖ·¸ÄÖÁÊ×ÁÐ
 793   2              Page++;
 794   2          }
 795   1          SetPos(Page, Column);
C51 COMPILER V9.52.0.0   OLED                                                              08/18/2018 20:16:56 PAGE 14  

 796   1          for(i = 0; i < 16; i++)
 797   1          {     
 798   2              WriteDat(F6x8[temp][i]);  
 799   2          }
 800   1      }
 801          
 802          /*****************************************************************************
 803           º¯ Êý Ãû  : WriteStr_6x8
 804           ¹¦ÄÜÃèÊö  : Ð´ÈëÒ»×é6x8±ê×¼ASCII×Ö·û´®
 805           ÊäÈë²ÎÊý  : unsigned char Page      Ò³·¶Î§0¡«7     
 806                       unsigned char Column    ÏÔÊ¾µÄºá×ø±ê0~122  
 807                       unsigned char Str[]     ÏÔÊ¾µÄ×Ö·û´®
 808           Êä³ö²ÎÊý  : NONE
 809           ·µ »Ø Öµ  : NONE
 810          *****************************************************************************/
 811          //void WriteStr_6x8(unsigned char Page, unsigned char Column, unsigned char Str[])
 812          //{
 813          //    unsigned char j; 
 814          
 815          //    for (j=0; Str[j] != '\0'; j++)    //ÅÐ¶Ï×Ö·û´®ÊÇ·ñ½áÊø£¬Ò²¿ÉÍ¨¹ýÖ¸Õë½øÐÐ²Ù×÷
 816          //    {    
 817          //        WriteChar_6x8(Page,Column,Str[j]);    //ÔÚÖ¸¶¨µÄµØ·½Ð´Ò»¸ö×Ö·û
 818          //        Column += 6;          //Ã¿Ð´Ò»¸ö×Ö·û£¬ÁÐµØÖ·¼Ó6
 819          //    }
 820          //}
 821          
 822          /*****************************************************************************
 823           º¯ Êý Ãû  : WriteStr_8x16
 824           ¹¦ÄÜÃèÊö  : Ð´ÈëÒ»×é8x16±ê×¼ASCII×Ö·û´®
 825           ÊäÈë²ÎÊý  : unsigned char Page     ÎªÒ³·¶Î§0¡«3,ÒòÎª¸Ã¸ñÊ½µÄ×Ö·û¸ß¶ÈÕ¼ÓÃÁ½Ò³
 826                 unsigned char Column   ÎªÏÔÊ¾µÄºá×ø±ê0~120
 827                       unsigned char Str[]    ÒªÏÔÊ¾µÄ×Ö·û´®
 828           Êä³ö²ÎÊý  : NONE
 829           ·µ »Ø Öµ  : NONE
 830          *****************************************************************************/
 831          void WriteStr_8x16(unsigned char Page, unsigned char Column, unsigned char Str[])
 832          {
 833   1          unsigned char i, j, temp;
 834   1      
 835   1          Page <<= 1;             //ÏÔÊ¾¸ß¶ÈÎª16µÄ×Ö·ûÊ±£¬ÆÁÄ»0~7Ò³×ª»¯Îª0~3ÐÐ£¬¼´Á½Ò³ÎªÒ»ÐÐ
 836   1                                            //Ò²¿É²»Òª´ËÐÐ£¬µ«Ðè×¢Òâ¶ÔÓ¦¹ØÏµ
 837   1          for (j=0;Str[j] != '\0'; j++)       //×Ö·û´®Î´½áÊø
 838   1          {    
 839   2              temp = Str[j] - 32;
 840   2              if(Column > 120)
 841   2              {
 842   3                  Column = 0;
 843   3                  Page += 2;          //Èôµ±Ç°ÐÐÐ´²»ÏÂ£¬ÔòÐèÒ»´Î»»Á½Ò³£¬·½¿É¼ÌÐøÐ´
 844   3              }
 845   2      
 846   2              SetPos(Page, Column);   
 847   2              for(i = 0; i < 8; i++) 
 848   2              {
 849   3                  WriteDat(F8X16[temp][i]);   //ÏÈÐ´Ò»¸ö×Ö·ûµÄÉÏ°ë²¿·Ö
 850   3              }
 851   2              
 852   2              SetPos(Page+1, Column);   
 853   2              for(i=8; i<16; i++) 
 854   2              {
 855   3                  WriteDat(F8X16[temp][i]);
 856   3              }
 857   2              Column += 8;  
C51 COMPILER V9.52.0.0   OLED                                                              08/18/2018 20:16:56 PAGE 15  

 858   2          }
 859   1      }
 860          
 861          /*****************************************************************************
 862           º¯ Êý Ãû  : WriteChinese16x16
 863           ¹¦ÄÜÃèÊö  : Ð´ÈëÒ»×é16x16µÄÖÐÎÄ×Ö·û´®¡¾ÐèÍ¨¹ýÈ¡Ä£Èí¼þ¶ÔÐèÒªµÄºº×Ö½øÐÐ±àÂë¡¿
 864           ÊäÈë²ÎÊý  : unsigned char Page       ÎªÒ³·¶Î§0¡«3
 865                       unsigned char Column     ÎªÏÔÊ¾µÄºá×ø±ê0~114,  114 = 128-16(¼´±ØÐë±£Ö¤Ð´ÂúÒ»¸ö×Ö)
 866                       unsigned char Str[]      ÒªÏÔÊ¾µÄÖÐÎÄ×Ö·û´®
 867           Êä³ö²ÎÊý  : NONE
 868           ·µ »Ø Öµ  : NONE
 869           ±¸    ×¢  £ºÇëÓÃ»§×ÐÏ¸Ìå»á¸Ãº¯ÊýµÄÐ´·¨
 870          *****************************************************************************/
 871          void WriteChinese16x16(unsigned char Page,unsigned char Column,unsigned char Str[])
 872          {
 873   1          unsigned char i, j;
 874   1          unsigned int  Address; 
 875   1          
 876   1          Page <<= 1;                    //Á½Ò³ÎªÒ»ÐÐ£¬pageÈ¡ÖµÎª0~3
 877   1          for(j=0;Str[j]!='\0';)
 878   1          {
 879   2              i = 0;
 880   2              Address = 1;
 881   2              while(font16x16[i] > 127)  //ASCIIÂëÎª7Î»¶þ½øÖÆ±íÊ¾µÄ£¬Òò´Ë×î´óÎª127,Èô´óÓÚ127,ÒÑËµÃ÷Æä²»ÊÇASCIIÂë
             -ÁË¡£
 882   2                                     //ºº×Ö±íÊ¾ÐèÁ½¸ö×Ö½Ú£¬Îª¼æÈÝASCIIÂë£¬¼ÆËã»úÖÐÓÃÄÚÂë±íÊ¾£¬Á½¸ö×Ö½Ú×î¸ßÎ»¾ùÎª1£
             -¬¼´´óÓÚ127
 883   2              {
 884   3                  if(font16x16[i] == Str[j])       //Èôºº×ÖÊý×éÖÐµÚi¸öºº×ÖÓëÊµ²ÎµÚj¸ö×ÖµÄµÚÒ»¸ö×Ö½ÚÏàÍ¬
 885   3                  {
 886   4                      if(font16x16[i+1] == Str[j+1]) //ÇÒºº×ÖÊý×éÖÐµÚi¸öºº×ÖÓëÊµ²ÎµÚj¸ö×ÖµÄµÚ¶þ¸ö×Ö½ÚÒ²ÏàÍ¬
 887   4                      {
 888   5                          Address = i*16;        //ÔòÊµ¼ÊµÚj¸öºº×Ö¾Í²ÉÓÃfont16*16µÄµÚi¸öºº×ÖµÄ±àÂë
 889   5                          break;
 890   5                      }
 891   4                  }
 892   3                  i += 2;                      //ºº×ÖË÷ÒýÇ°ÒÆÒ»¸ö,Ö¸Ïòºº×ÖÊý×éÖÐµÄÏÂÒ»¸öºº×Ö
 893   3              }                    //ºº×ÖÒÑ¶¨ÒåÎªcharÐÍ¸ñÊ½£¬¼´Ò»¸öºº×ÖÕ¼Á½¸öcharÐÍµÄ¿í¶È
 894   2              
 895   2              if(Column > 112)
 896   2              {
 897   3                  Column = 0;
 898   3                  Page  += 2;              //Ã¿»»Ò»´ÎÐÐ£¬Ôö¼ÓÁ½Ò³
 899   3              }
 900   2              
 901   2              if(Address != 1)                       // ËùÃ÷ºº×ÖµÄ×Ö·û´®·Ç¿Õ£¬»ò±íÊ¾Êµ²ÎµÄ±àÂë¿ÉÒÔÔÚºº×ÖÊý×é¶ÔÓ¦
             -±àÂëÖÐÕÒµ½                 
 902   2              {
 903   3                  SetPos(Page, Column);        //ÉèÖÃÉÏ°ë²¿·ÖµÄÆðÊ¼Î»ÖÃ
 904   3                  for(i=0;i<16;i++)               
 905   3                  {
 906   4                      WriteDat(font16x16_code[Address]);  //Ð´ºº×ÖÉÏ°ë²¿·Ö  
 907   4                      Address++;
 908   4                  }
 909   3                  SetPos(Page+1,Column);                  //ÉèÖÃÏÂ°ë²¿·ÖµÄÆðÊ¼Î»ÖÃ
 910   3                  for(i=0;i<16;i++)          
 911   3                  {
 912   4                      WriteDat(font16x16_code[Address]);  //Ð´ºº×ÖÏÂ°ë²¿·Ö
 913   4                      Address++;
 914   4                  }
 915   3                  j += 2;                       //Êµ²ÎÖÐµÄºº×ÖºóÒÆÒ»¸ö
 916   3              }
C51 COMPILER V9.52.0.0   OLED                                                              08/18/2018 20:16:56 PAGE 16  

 917   2              else                                        //ÈôÊµ²ÎÊý×éÄÚÈÝÎª¿Õ£¬»òÕßÊµ²ÎÓëÖ¸¶¨µÄºº×ÖÊý×é³£Á¿²»´æ
             -ÔÚÏàÍ¬ºº×Ö            
 918   2              {
 919   3                  SetPos(Page,Column);            //Ôò½«²»´æÔÚ±àÂëµÄºº×ÖÓÃ¿Õ°×Ìî³ä
 920   3                  for(i=0;i<16;i++)
 921   3                  {
 922   4                      WriteDat(0);
 923   4                  }
 924   3                  SetPos(Page+1,Column);
 925   3                  for(i=0;i<16;i++)
 926   3                  {           
 927   4                      WriteDat(0);   
 928   4                  }
 929   3                  j++;                    //¿ÉÄÜºº×ÖÖÐ´æÔÚÒ»¸ö¿Õ°×»òÓ¢ÎÄ×Ö·û£¬Ìø¹ýÒ»¸ö×Ö½ÚÔÙÖØÐÂÆ¥Åä
 930   3              }
 931   2              
 932   2              Column += 16;                               //Ð´ÍêÒ»¸öºº×Ö£¬ÁÐÔö¼Ó16
 933   2          }
 934   1      }
 935          
 936          /*****************************************************************************
 937           º¯ Êý Ãû  : WriteMixStrXx16
 938           ¹¦ÄÜÃèÊö  : Êä³ö16x16ºº×ÖºÍ8x16×Ö·û»ìºÏ×Ö·û´® £¨×Ö·û´®±í¸ñÖÐÐèº¬ÓÐ´Ë×Ö£©
 939           ÊäÈë²ÎÊý  : unsigned char Page       ÎªÒ³·¶Î§0¡«3
 940                 unsigned char Column     ÎªÏÔÊ¾µÄºá×ø±ê0~114
 941                       unsigned char Str[]      ÒªÏÔÊ¾µÄ»ìºÏ×Ö·û´®
 942           Êä³ö²ÎÊý  : NONE
 943           ·µ »Ø Öµ  : NONE
 944          *****************************************************************************/
 945          void WriteMixStrXx16(unsigned char Page, unsigned char Column, unsigned char Str[])
 946          {
 947   1          unsigned char TempStr[3];
 948   1          unsigned char i = 0;    
 949   1      
 950   1          while(Str[i] != '\0')                       //×Ö·û´®Î´½áÊø
 951   1          {
 952   2              if(Str[i] > 127)                        //Èô·ÇASCIIÂë±íÖÐ×Ö·û
 953   2              {
 954   3                  TempStr[0] = Str[i];                  //½«Êµ²ÎµÚÒ»¸ö×Ö½ÚºÍµÚ¶þ¸ö×Ö½Ú·Ö±ðÔÝ´æ£¨¿ÉÄÜ¸ÕºÃÊÇÒ»¸öºº×Ö
             -£©
 955   3                  TempStr[1] = Str[i+1];
 956   3                  TempStr[2] = '\0';                        //ÔÝ´æ×Ö·û´®½áÊø×Ö·û
 957   3                  WriteChinese16x16(Page, Column, TempStr);  //ÏÔÊ¾ºº×Ö
 958   3                  Column += 16;               //ÁÐ¼Ó16
 959   3                  i += 2;                   //×Ö·ûË÷Òý¼Ó2£¬ºº×ÖË÷Òý¼Ó1£¨Ò»¸öºº×ÖÁ½¸ö×Ö½Ú£©
 960   3              }
 961   2              else                      //¼´»ìºÏ×Ö·û´®µ±ÖÐ³öÏÖÓ¢ÎÄ×Ö·û
 962   2              {
 963   3                  TempStr[0] = Str[i];    
 964   3                  TempStr[1] = '\0';                        //½«Ò»¸öÓ¢ÎÄ×Ö·ûµ±×ö×Ö·û´®
 965   3                  WriteStr_8x16(Page, Column, TempStr);     //Ð´TemStr
 966   3                  Column += 8;                //ÁÐÔö¼Ó8ÁÐ
 967   3                  i += 1;                   //×Ö·û´®Ë÷ÒýÔö¼ÓÒ»¸ö×Ö½Ú
 968   3              }
 969   2          }
 970   1      } 
 971          
 972          /*****************************************************************************
 973           º¯ Êý Ãû  : PrintChar
 974           ¹¦ÄÜÃèÊö  : ½«Ò»¸öCharÐÍÊý×ª»»³É3Î»Êý½øÐÐÏÔÊ¾
 975           ÊäÈë²ÎÊý  : unsigned char Page      ·¶Î§Îª0¡«7
 976                 unsigned char Column  ·¶Î§Îª0¡«122
C51 COMPILER V9.52.0.0   OLED                                                              08/18/2018 20:16:56 PAGE 17  

 977                       char          Dat       ÐèÒª×ª»¯ÏÔÊ¾µÄÊýÖµ -128~127
 978           Êä³ö²ÎÊý  : NONE
 979           ·µ »Ø Öµ  : NONE
 980          *****************************************************************************/
 981          void PrintChar(unsigned char Page, unsigned char Column, char Dat)
 982          {
 983   1          unsigned int i, j, k, temp;
 984   1      
 985   1          if(Dat < 0)
 986   1          {
 987   2              WriteChar_6x8(Page, Column, '-');   //ÈôÎª¸ºÊý£¬ÏÈÏÔÊ¾Æä¸ººÅ
 988   2              temp = (unsigned char)(-Dat);       //½«¸ºÊý×ª»»ÎªÕýÊý
 989   2          }
 990   1          else
 991   1          {
 992   2              WriteChar_6x8(Page, Column, '+');
 993   2              temp = (unsigned char)Dat;        //²»ÄÜÖ±½ÓÓÃÓÚÏÔÊ¾£¬ÒòÎªÊýÖµ½«µÈÐ§ÎªACSii£¬ÏÔÊ¾½«±ä³É×Ö·û 
 994   2          }
 995   1          i = temp/100;               //·ÖÀë°ÙÎ»Êý
 996   1          j = temp/10%10;               //·ÖÀëÊ®Î»Êý
 997   1          k = temp%10;                //·ÖÀë¸öÎ»Êý
 998   1          
 999   1          WriteChar_6x8(Page, Column+ 6, i);        //Ð´°ÙÎ»Êý
1000   1          WriteChar_6x8(Page, Column+12, j);        //Ð´Ê®Î»Êý
1001   1          WriteChar_6x8(Page, Column+18, k);        //Ð´¸öÎ»Êý
1002   1      }
1003          
1004          /*****************************************************************************
1005           º¯ Êý Ãû  : PrintShort
1006           ¹¦ÄÜÃèÊö  : ½«Ò»¸öShortÐÍÊý×ª»»³É5Î»Êý½øÐÐÏÔÊ¾
1007           ÊäÈë²ÎÊý  : unsigned char Page    ·¶Î§Îª0¡«7
1008                       unsigned char Column  ·¶Î§Îª0~122
1009                       int           Dat     ÐèÒª×ª»¯ÏÔÊ¾µÄÊýÖµ
1010           Êä³ö²ÎÊý  : NONE
1011           ·µ »Ø Öµ  : NONE
1012          *****************************************************************************/
1013          void PrintShort(unsigned char Page, unsigned char Column, int Dat)
1014          {
1015   1          unsigned int i, j, k, l, m, temp;  
1016   1          if(Dat < 0)
1017   1          {
1018   2              WriteChar_6x8(Page,Column,'-');
1019   2              temp = (unsigned int)(-Dat);  
1020   2          }
1021   1          else
1022   1          {
1023   2              WriteChar_6x8(Page,Column,'+');
1024   2              temp = (unsigned int)Dat;
1025   2          }
1026   1          
1027   1          l = temp/10000;                       //·ÖÀëÍòÎ»
1028   1          m = temp/1000%10;             //·ÖÀëÇ§Î»
1029   1          i = temp/100%10;              //·ÖÀë°ÙÎ»
1030   1          j = temp/10%10;               //·ÖÀëÊ®Î»
1031   1          k = temp%10;                //·ÖÀë¸öÎ»
1032   1          WriteChar_6x8(Page, Column+ 6, l);      //ÏÔÊ¾ÍòÎ»
1033   1          WriteChar_6x8(Page, Column+12, m);      //ÏÔÊ¾Ç§Î»
1034   1          WriteChar_6x8(Page, Column+18, i);      //ÏÔÊ¾°ÙÎ»
1035   1          WriteChar_6x8(Page, Column+24, j);      //ÏÔÊ¾Ê®Î»
1036   1          WriteChar_6x8(Page, Column+30, k);      //ÏÔÊ¾¸öÎ»
1037   1      
1038   1      }
C51 COMPILER V9.52.0.0   OLED                                                              08/18/2018 20:16:56 PAGE 18  

1039          
1040          /*****************************************************************************
1041           º¯ Êý Ãû  : PrintImage
1042           ¹¦ÄÜÃèÊö  : ½«Í¼ÏñÏÔÊ¾³öÀ´
1043           ÊäÈë²ÎÊý  : unsigned char * ImageTable     ¶þÎ¬Í¼ÏñÊý×éµÄµØÖ·
1044                       unsigned char   RowNum         ¶þÎ¬Í¼ÏñµÄÐÐÊý1~64
1045                       unsigned char   ColumnNum      ¶þÎ¬Í¼ÏñµÄÁÐÊý1~128
1046           Êä³ö²ÎÊý  : NONE
1047           ·µ »Ø Öµ  : NONE
1048           ±¸    ×¢  £º¶ÔÓ¦Í¼ÐÎµÄ±àÂëÉú³ÉÇëÊ¹ÓÃÈí¼þImage2Lcd v3.2.
1049                       Êä³öÊý¾ÝÀàÐÍ   £º CÓïÑÔÊý×é£¨*.C£©
1050                 É¨Ãè·½Ê½       £º Êý¾ÝË®Æ½£¬×Ö½Ú´¹Ö±£¨ÕâÑùÈí¼þÊµÏÖ½«ºÜÈÝÒ×ÊµÏÖ£©
1051                 Êä³ö»Ò¶È       £º µ¥É«£¨ÒòÎªËùÑ¡ÓÃµÄOLEDÎªµ¥É«£©
1052                 °üº¬Í·ÏñÍ·Êý¾Ý £º ²»°üº¬£¨°üº¬ÓÃÓÚÉãÏñÍ·ËùÐèµÄÊý×ÖÍ¼ÏñÐÅÏ¢£©
1053                 ×Ö½ÚÄÚÊý¾Ý·´Ðò :  Ñ¡Ôñ·´Ðò£¨¼´»­¡Ì£©
1054                 ×ÔÓÒÖÁ×óÉ¨Ãè   £º ²»Ñ¡Ôñ
1055                 ×Ôµ×ÖÁ¶¥É¨Ãè   £º ²»Ñ¡Ôñ
1056                 ¸ßÎ»ÔÚÇ°       :  ²»Ñ¡Ôñ
1057          *****************************************************************************/
1058          void PrintImage(unsigned char ImageTable[], unsigned char RowNum, unsigned char ColumnNum)
1059          {
1060   1          unsigned char i,j,m,n;
1061   1        unsigned int num = 0;               //±£´æÒ»·ùÍ¼Ïñ°üº¬µÄ×Ö½Ú¸öÊý
1062   1      
1063   1        if(RowNum > 63)        //Ô½½çÅÐ¶Ï
1064   1          RowNum = 63;
1065   1        if(ColumnNum > 127)
1066   1          ColumnNum = 127;
1067   1      
1068   1        m = RowNum/8;     //ÐÐÊý¶Ô8È¡Õû
1069   1        n = RowNum%8;   //ÐÐÊý¶Ô8È¡Óà
1070   1        if(n)       //ÈôÓàÊý²»Îª0£¬¼´½«ÐÐÊý°´8£¨×Ö½Ú£©½øÐÐ·Ö×é£¬ÓÐÓàÊý
1071   1          m = m + 1 ; //Ôò½«²»ÄÜ¹¹³ÉÒ»¸ö×Ö½ÚµÄÐÐÊý²¹ÆëÎªÒ»¸ö×Ö½Ú
1072   1      
1073   1        for(i=0;i<m;i++)
1074   1        { 
1075   2          SetPos(i,0);
1076   2          for(j=0;j<ColumnNum;j++)
1077   2          { 
1078   3            WriteDat(ImageTable[num]);
1079   3            num++;
1080   3          }
1081   2        }
1082   1      }
1083          
1084          //========== ÏÔÊ¾Ð§¹û´¦ÀíÏà¹Øº¯Êý  ===============
1085          /*****************************************************************************
1086           º¯ Êý Ãû  : ConHorScroll
1087           ¹¦ÄÜÃèÊö  : Á¬ÐøË®Æ½¹öÆÁ
1088           ÊäÈë²ÎÊý  : unsigned char StartPage       ¹öÆÁÆðÊ¼µØÖ·
1089                       unsigned char EndPage         ¹öÆÁÖÕÖ¹µØÖ·
1090                       bit Direction                 ¹öÆÁ·½Ïò£¨0£ºÓÒ£»1£º×ó£©
1091                 unsigned char speed       ¹öÆÁËÙ¶È£¨È¡Öµ0~7£©
1092           Êä³ö²ÎÊý  : NONE
1093           ·µ »Ø Öµ  : NONE
1094          *****************************************************************************/
1095          void ConHorScroll(unsigned char StartPage,unsigned char EndPage,bit Direction,unsigned char speed)
1096          {
1097   1        WriteCmd(0x2e);          //ÈôÓÐÒÆÆÁ²Ù×÷£¬ÏÈÍ£Ö¹£¬ÒÔ±ÜÃâÆÆ»µRAMÄÚÈÝ
1098   1        
1099   1        if(Direction)  
1100   1          WriteCmd(0x27);    //×óÒÆ£¨Êµ¼ÊÎªÏÈÍ£Ö¹×óÒÆ£©
C51 COMPILER V9.52.0.0   OLED                                                              08/18/2018 20:16:56 PAGE 19  

1101   1        else
1102   1          WriteCmd(0x26);    //ÓÒÒÆ£¨Êµ¼ÊÎªÏÈÍ£Ö¹ÓÒÒÆ£©
1103   1      
1104   1        WriteCmd(0x00);
1105   1        WriteCmd(StartPage);     //»î¶¯ÇøÓòÆðÊ¼Ò³
1106   1        WriteCmd(speed);         //ÉèÖÃ¹öÆÁËÙ¶È  0£º5Ö¡£»1£º64Ö¡£»2£º128Ö¡£»3£º256Ö¡£»4£º3Ö¡£»5£º4Ö¡£»6£º25Ö¡£»7£
             -º2Ö¡
1107   1        WriteCmd(EndPage);       //»î¶¯ÇøÓòÖÕÖ¹Ò³
1108   1        WriteCmd(0x00);
1109   1        WriteCmd(0xff);
1110   1        WriteCmd(0x2f);      //¼¤»îÒÆÆÁ
1111   1      
1112   1          
1113   1      }
1114          
1115          /*****************************************************************************
1116           º¯ Êý Ãû  : ConVerHorScroll
1117           ¹¦ÄÜÃèÊö  : Á¬Ðø´¹Ö±Ë®Æ½¹öÆÁ£¨¼´Ð±½Ç¹öÆÁ£©
1118           ÊäÈë²ÎÊý  : unsigned char StartPage       ¹öÆÁÆðÊ¼µØÖ·
1119                       unsigned char EndPage         ¹öÆÁÖÕÖ¹µØÖ·
1120                       bit Direction                 ¹öÆÁ·½Ïò£¨0£ºÓÒÉÏ½Ç£»1£º×óÉÏ½Ç£©
1121                 unsigned char speed       ¹öÆÁËÙ¶È  £¨È¡Öµ0~7£©
1122                 unsigned char VerOffset       ´¹Ö±Æ«ÒÆÁ¿£¨È¡Öµ0~63£©,Îª0Ê±½«Ã»ÓÐ´¹Ö±·½ÏòÉÏÒÆ¶¯£¬Ð§¹û½«µÈÍ¬ÓÚË®Æ½ÒÆ¶¯
1123           Êä³ö²ÎÊý  : NONE
1124           ·µ »Ø Öµ  : NONE
1125          *****************************************************************************/
1126          void ConVerHorScroll(unsigned char StartPage,unsigned char EndPage,bit Direction,unsigned char speed,unsig
             -ned char VerOffset)
1127          {
1128   1      
1129   1        WriteCmd(0x2e);          //ÈôÓÐÒÆÆÁ²Ù×÷£¬ÏÈÍ£Ö¹£¬ÒÔ±ÜÃâÆÆ»µRAMÄÚÈÝ
1130   1        if(Direction)  
1131   1          WriteCmd(0x2a);    //Ïò×óÉÏ½ÇÒÆÆÁ 
1132   1        else
1133   1          WriteCmd(0x29);    //ÏòÓÒÉÏ½ÇÒÆÆÁ
1134   1      
1135   1        WriteCmd(0x00);
1136   1        WriteCmd(StartPage);     //»î¶¯ÇøÓòÆðÊ¼Ò³
1137   1        WriteCmd(speed);         //ÉèÖÃ¹öÆÁËÙ¶È  0£º5Ö¡£»1£º64Ö¡£»2£º128Ö¡£»3£º256Ö¡£»4£º3Ö¡£»5£º4Ö¡£»6£º25Ö¡£»7£
             -º2Ö¡
1138   1        WriteCmd(EndPage);       //»î¶¯ÇøÓòÖÕÖ¹Ò³
1139   1        WriteCmd(0x00);
1140   1        WriteCmd(VerOffset);   //´¹Ö±·½ÏòÆ«ÒÆÁ¿£¬¼´Öµ0~63
1141   1        WriteCmd(0x2f);      //¼¤»îÒÆÆÁ
1142   1          
1143   1      }
1144          
1145          /*****************************************************************************
1146           º¯ Êý Ãû  : ConVerHorScroll
1147           ¹¦ÄÜÃèÊö  : ÉèÖÃ´¹Ö±¹öÆÁµÄÇøÓò
1148           ÊäÈë²ÎÊý  : unsigned char FixRowNoe       ¹Ì¶¨ÇøÓòÊ×ÐÐ
1149                       unsigned char ScrollRowNo     ¹Ì¶¨ÇøÓòÎ²ÐÐ£¬¹öÆÁÐÐ´Ó¹Ì¶¨ÇøÓòÎ²ÐÐÏÂÒ»ÐÐ¿ªÊ¼
1150           Êä³ö²ÎÊý  : NONE
1151           ·µ »Ø Öµ  : NONE
1152          *****************************************************************************/
1153          void SetVerScrollArea(unsigned char FixRowNo,unsigned char ScrollRowNo)
1154          {                 //ÅäÖÃËµÃ÷£º
1155   1                        //         1. FixRowNo = 0, ScrollRowNo = 64 £ºÕûÆÁ¹ö¶¯
1156   1        WriteCmd(0xa3);               //         2. FixRowNo = 0, ScrollRowNo < 64 £º¶¥²¿ÇøÓò¹ö¶¯
1157   1        WriteCmd(FixRowNo);       //         3. FixRowNo + ScrollRowNo < 64    £ºÖÐ¼äÆÁ¹ö¶¯
1158   1        WriteCmd(ScrollRowNo);      //         4. FixRowNo + ScrollRowNo = 64    £ºµ×²¿ÇøÓò¹ö¶¯
1159   1      }
C51 COMPILER V9.52.0.0   OLED                                                              08/18/2018 20:16:56 PAGE 20  

1160          
1161          //----------  ÏÔÊ¾Êý×Ö0~9 6x8¸ñÊ½--------------------------------------
1162          void PrintNum_6x8(unsigned char Page,unsigned char Column,unsigned char num)    //numÈ¡ÖµÎª0~9
1163          {
1164   1        unsigned char i;
1165   1      
1166   1        if(Column > 122)
1167   1        {
1168   2          Page = Page + 1;
1169   2          Column = 0;
1170   2        }
1171   1        if(num<10)
1172   1        {
1173   2          SetPos(Page,Column);
1174   2          for(i=0;i<6;i++)
1175   2          {
1176   3            WriteDat(F6x8[num+16][i]);      //Êý×ÖÔÚasciiÂë±íÖÐ´Ó48¿ªÊ¼,F6*8µÄµÚ16ÐÐ¿ªÊ¼
1177   3          }
1178   2        }
1179   1        if((num>9)&&(num<16))
1180   1        {
1181   2          SetPos(Page,Column);
1182   2          for(i=0;i<6;i++)
1183   2          {
1184   3            WriteDat(F6x8[num+23][i]);      //Êý×ÖÔÚasciiÂë±íÖÐ´Ó48¿ªÊ¼£¬F6*8µÄµÚ33ÐÐ¿ªÊ¼£¬µ«10¶ÔÓ¦A£¬ÔÙ¼õµô10Îª23
1185   3          } 
1186   2        }
1187   1      
1188   1      }
1189          
1190          //----------  ÏÔÊ¾Êý×Ö0~9 8x16¸ñÊ½--------------------------------------
1191          void PrintNum_8x16(unsigned char Page,unsigned char Column,unsigned char num)   //numÈ¡ÖµÎª0~15
1192          {
1193   1        unsigned char i;
1194   1         Page <<= 1;  
1195   1        if(Column > 120)
1196   1        {
1197   2          Page = Page + 2;
1198   2          Column = 0;
1199   2        }
1200   1        if(num<10)
1201   1        {
1202   2          SetPos(Page,Column);           //ÉèÖÃÉÏ°ëÒ³ÏÔÊ¾ÏÔÊ¾µÄÎ»ÖÃ
1203   2          for(i=0;i<8;i++)             //ÏÔÊ¾ÉÏ°ëÒ³ÄÚÈÝ
1204   2          {
1205   3            WriteDat(F8X16[num+16][i]);
1206   3          }
1207   2        
1208   2          SetPos(Page+1,Column);           //ÉèÖÃÏÂ°ëÒ³ÏÔÊ¾ÏÔÊ¾µÄÎ»ÖÃ
1209   2          for(i=8;i<16;i++)            //ÏÔÊ¾ÏÂ°ëÒ³ÄÚÈÝ
1210   2          {
1211   3            WriteDat(F8X16[num+16][i]);
1212   3          }
1213   2        }
1214   1        if((num>9)&&(num<16))
1215   1        {
1216   2              SetPos(Page,Column);      //ÉèÖÃÉÏ°ëÒ³ÏÔÊ¾ÏÔÊ¾µÄÎ»ÖÃ
1217   2          for(i=0;i<8;i++)             //ÏÔÊ¾ÉÏ°ëÒ³ÄÚÈÝ
1218   2          {
1219   3            WriteDat(F8X16[num+23][i]);
1220   3          }
1221   2        
C51 COMPILER V9.52.0.0   OLED                                                              08/18/2018 20:16:56 PAGE 21  

1222   2          SetPos(Page+1,Column);           //ÉèÖÃÏÂ°ëÒ³ÏÔÊ¾ÏÔÊ¾µÄÎ»ÖÃ
1223   2          for(i=8;i<16;i++)            //ÏÔÊ¾ÏÂ°ëÒ³ÄÚÈÝ
1224   2          {
1225   3            WriteDat(F8X16[num+23][i]);
1226   3          }
1227   2        }
1228   1      
1229   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   1822    ----
   CONSTANT SIZE    =   2173    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----      61
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----       2
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
