C51 COMPILER V9.52.0.0   OLED                                                              08/05/2018 19:15:01 PAGE 1   


C51 COMPILER V9.52.0.0, COMPILATION OF MODULE OLED
OBJECT MODULE PLACED IN .\Objects\OLED.obj
COMPILER INVOKED BY: D:\KEIL C51\C51\BIN\C51.EXE OLED.C BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings\OLED.lst) TABS(2) OBJ
                    -ECT(.\Objects\OLED.obj)

line level    source

   1          /***********************************
   2            ÎÄ¼þÃû£º OLED.C
   3            °æ±¾ºÅ£º V1.0
   4            ×÷  Õß£º FG
   5            Ê±  ¼ä£º 2015-2-7 16:00:59
   6            ±¸  ×¢£º ²Î¿¼ÐÅÒâµç×Ó¿Æ¼¼oled.cÄÚÈÝ
   7          *************************************/
   8          
   9          #include "OLED.H"
  10          #include "stc15.h"
  11          
  12          sbit SCL_OLED       = P1^3;
  13          sbit SDA_OLED       = P1^2;
  14          sbit RST      = P1^1;
  15          sbit DC         = P1^0;
  16          
  17          //²Ù×÷ºº×ÖÊ±£¬ÓÃ»§×ÔÐÐÌæ»»ÏÂÃæºº×Ö¼°±àÂë
  18          const unsigned char code font16x16[] = {"µÆÄ£Äâ¿ØÖÆµçÊÓ¿Õµ÷Ò£¿Ø¡æ"}; //ÕâÀïÖ»¶Ôºº×Ö½øÐÐ±àÂë£¬Çë²»Òª°üº¬×Ö·
             -ûµÄ±àÂë
  19          const unsigned char code font16x16_code[]={
  20          
  21          0x80,0x70,0x00,0xFF,0x20,0x10,0x04,0x04,0x04,0x04,0xFC,0x04,0x04,0x04,0x04,0x00,
  22          0x80,0x60,0x18,0x07,0x08,0x30,0x00,0x00,0x40,0x80,0x7F,0x00,0x00,0x00,0x00,0x00,/*"µÆ",0*/
  23          
  24          0x10,0x10,0xD0,0xFF,0x90,0x14,0xE4,0xAF,0xA4,0xA4,0xA4,0xAF,0xE4,0x04,0x00,0x00,
  25          0x04,0x03,0x00,0xFF,0x00,0x89,0x4B,0x2A,0x1A,0x0E,0x1A,0x2A,0x4B,0x88,0x80,0x00,   //Ä£ ¡ú0
  26          0x10,0x10,0x10,0xFF,0x90,0x00,0xF8,0x00,0x02,0x04,0x18,0x00,0xFF,0x00,0x00,0x00,
  27          0x02,0x42,0x81,0x7F,0x00,0x00,0x3F,0x10,0x88,0x40,0x30,0x0C,0x0B,0x30,0xC0,0x00,  //Äâ ¡ú1
  28            
  29          0x10,0x10,0x10,0xFF,0x90,0x20,0x98,0x48,0x28,0x09,0x0E,0x28,0x48,0xA8,0x18,0x00,
  30          0x02,0x42,0x81,0x7F,0x00,0x40,0x40,0x42,0x42,0x42,0x7E,0x42,0x42,0x42,0x40,0x00,/*"¿Ø",0*/
  31          
  32          0x40,0x50,0x4E,0x48,0x48,0xFF,0x48,0x48,0x48,0x40,0xF8,0x00,0x00,0xFF,0x00,0x00,
  33          0x00,0x00,0x3E,0x02,0x02,0xFF,0x12,0x22,0x1E,0x00,0x0F,0x40,0x80,0x7F,0x00,0x00,/*"ÖÆ",1*/  
  34          /*--  ÎÄ×Ö:  µç  --*/
  35          /*--  ËÎÌå12;  ´Ë×ÖÌåÏÂ¶ÔÓ¦µÄµãÕóÎª£º¿íx¸ß=16x16   --*/
  36          0x00,0x00,0xF8,0x88,0x88,0x88,0x88,0xFF,0x88,0x88,0x88,0x88,0xF8,0x00,0x00,0x00,
  37          0x00,0x00,0x1F,0x08,0x08,0x08,0x08,0x7F,0x88,0x88,0x88,0x88,0x9F,0x80,0xF0,0x00,  //µç  ¡ú0
  38            
  39          /*--  ÎÄ×Ö:  ÊÓ  --*/
  40          /*--  ËÎÌå12;  ´Ë×ÖÌåÏÂ¶ÔÓ¦µÄµãÕóÎª£º¿íx¸ß=16x16   --*/
  41          0x08,0x08,0x89,0xEE,0x98,0x00,0x00,0xFE,0x02,0x02,0xF2,0x02,0x02,0xFE,0x00,0x00,
  42          0x02,0x01,0x00,0xFF,0x00,0x83,0x40,0x23,0x18,0x06,0x01,0x7E,0x80,0x83,0xE0,0x00,  //ÊÓ  ¡ú1
  43          
  44          
  45          0x10,0x0C,0x44,0x24,0x14,0x04,0x05,0x06,0x04,0x04,0x14,0x24,0x44,0x14,0x0C,0x00,
  46          0x00,0x40,0x40,0x41,0x41,0x41,0x41,0x7F,0x41,0x41,0x41,0x41,0x40,0x40,0x00,0x00,  //¿Õ  ¡ú0
  47          
  48          0x40,0x42,0xCC,0x00,0x00,0xFE,0x82,0x92,0x92,0xFE,0x92,0x92,0x82,0xFE,0x00,0x00,
  49          0x00,0x00,0x3F,0x10,0x88,0x7F,0x00,0x1E,0x12,0x12,0x12,0x5E,0x80,0x7F,0x00,0x00,  //µ÷  ¡ú1
  50          
  51          
  52          
  53          0x40,0x40,0x42,0xCC,0x00,0x00,0x4A,0x32,0x22,0x2A,0xF1,0x21,0x31,0x2D,0x00,0x00,
C51 COMPILER V9.52.0.0   OLED                                                              08/05/2018 19:15:01 PAGE 2   

  54          0x00,0x80,0x40,0x3F,0x40,0x80,0x81,0xBD,0xA1,0xA1,0xBF,0xA1,0xA1,0xBD,0x81,0x00,  //Ò£  ¡ú0
  55          
  56          0x10,0x10,0x10,0xFF,0x90,0x20,0x98,0x48,0x28,0x09,0x0E,0x28,0x48,0xA8,0x18,0x00,
  57          0x02,0x42,0x81,0x7F,0x00,0x40,0x40,0x42,0x42,0x42,0x7E,0x42,0x42,0x42,0x40,0x00,  //¿Ø  ¡ú1
  58          
  59          
  60          /*--  ÎÄ×Ö:  ¡æ  --*/
  61          /*--  ËÎÌå12;  ´Ë×ÖÌåÏÂ¶ÔÓ¦µÄµãÕóÎª£º¿íx¸ß=16x16   --*/
  62          0x06,0x09,0x09,0xE6,0xF8,0x0C,0x04,0x02,0x02,0x02,0x02,0x02,0x04,0x1E,0x00,0x00,
  63          0x00,0x00,0x00,0x07,0x1F,0x30,0x20,0x40,0x40,0x40,0x40,0x40,0x20,0x10,0x00,0x00,
  64          
  65          };
  66          //======================================================
  67          void Delay_us()
  68          {
  69   1        ;
  70   1      }
  71          
  72          //======================================================
  73          // 128X64OLEDÒº¾§µ×²ãÇý¶¯[6X8]×ÖÌå¿â
  74          // Éè¼ÆÕß: ÐÅÒâ¿Æ¼¼
  75          // Ãè  Êö: [8X16]Î÷ÎÄ×Ö·ûµÄ×ÖÄ£Êý¾Ý (×ÝÏòÈ¡Ä£,×Ö½Úµ¹Ðò)
  76          // !"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\]^_`abcdefghijklmnopqrstuvwxyz{|}~
  77          //±¸×¢£ºÕâÀïÖ±½Ó²ÉÓÃÐÅÒâ¿Æ¼¼Ìá¹©µÄ8*16±àÂë£¬ÓÃ»§Ò²¿É²ÉÓÃ±àÂë¹¤¾ß×ÔÐÐ±àÂë
  78          //======================================================
  79          //
  80          const unsigned char code F6x8[][6] ={0};
  81          //{
  82          //    { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },   //sp0
  83          //    { 0x00, 0x00, 0x00, 0x2f, 0x00, 0x00 },   // !1
  84          //    { 0x00, 0x00, 0x07, 0x00, 0x07, 0x00 },   // "2
  85          //    { 0x00, 0x14, 0x7f, 0x14, 0x7f, 0x14 },   // #3
  86          //    { 0x00, 0x24, 0x2a, 0x7f, 0x2a, 0x12 },   // $4
  87          //    { 0x00, 0x62, 0x64, 0x08, 0x13, 0x23 },   // %5
  88          //    { 0x00, 0x36, 0x49, 0x55, 0x22, 0x50 },   // &6
  89          //    { 0x00, 0x00, 0x05, 0x03, 0x00, 0x00 },   // '7
  90          //    { 0x00, 0x00, 0x1c, 0x22, 0x41, 0x00 },   // (8
  91          //    { 0x00, 0x00, 0x41, 0x22, 0x1c, 0x00 },   // )9
  92          //    { 0x00, 0x14, 0x08, 0x3E, 0x08, 0x14 },   // *10
  93          //    { 0x00, 0x08, 0x08, 0x3E, 0x08, 0x08 },   // +11
  94          //    { 0x00, 0x00, 0x00, 0xA0, 0x60, 0x00 },   // ,12
  95          //    { 0x00, 0x08, 0x08, 0x08, 0x08, 0x08 },   // -13
  96          //    { 0x00, 0x00, 0x60, 0x60, 0x00, 0x00 },   // .14
  97          //    { 0x00, 0x20, 0x10, 0x08, 0x04, 0x02 },   // /15
  98          //    { 0x00, 0x3E, 0x51, 0x49, 0x45, 0x3E },   // 016
  99          //    { 0x00, 0x00, 0x42, 0x7F, 0x40, 0x00 },   // 117
 100          //    { 0x00, 0x42, 0x61, 0x51, 0x49, 0x46 },   // 218
 101          //    { 0x00, 0x21, 0x41, 0x45, 0x4B, 0x31 },   // 319
 102          //    { 0x00, 0x18, 0x14, 0x12, 0x7F, 0x10 },   // 420
 103          //    { 0x00, 0x27, 0x45, 0x45, 0x45, 0x39 },   // 521
 104          //    { 0x00, 0x3C, 0x4A, 0x49, 0x49, 0x30 },   // 622
 105          //    { 0x00, 0x01, 0x71, 0x09, 0x05, 0x03 },   // 723
 106          //    { 0x00, 0x36, 0x49, 0x49, 0x49, 0x36 },   // 824
 107          //    { 0x00, 0x06, 0x49, 0x49, 0x29, 0x1E },   // 925
 108          //    { 0x00, 0x00, 0x36, 0x36, 0x00, 0x00 },   // :26
 109          //    { 0x00, 0x00, 0x56, 0x36, 0x00, 0x00 },   // ;27
 110          //    { 0x00, 0x08, 0x14, 0x22, 0x41, 0x00 },   // <28
 111          //    { 0x00, 0x14, 0x14, 0x14, 0x14, 0x14 },   // =29
 112          //    { 0x00, 0x00, 0x41, 0x22, 0x14, 0x08 },   // >30
 113          //    { 0x00, 0x02, 0x01, 0x51, 0x09, 0x06 },   // ?31
 114          //    { 0x00, 0x32, 0x49, 0x59, 0x51, 0x3E },   // @32
 115          //    { 0x00, 0x7C, 0x12, 0x11, 0x12, 0x7C },   // A33
C51 COMPILER V9.52.0.0   OLED                                                              08/05/2018 19:15:01 PAGE 3   

 116          //    { 0x00, 0x7F, 0x49, 0x49, 0x49, 0x36 },   // B34
 117          //    { 0x00, 0x3E, 0x41, 0x41, 0x41, 0x22 },   // C35
 118          //    { 0x00, 0x7F, 0x41, 0x41, 0x22, 0x1C },   // D36
 119          //    { 0x00, 0x7F, 0x49, 0x49, 0x49, 0x41 },   // E37
 120          //    { 0x00, 0x7F, 0x09, 0x09, 0x09, 0x01 },   // F38
 121          //    { 0x00, 0x3E, 0x41, 0x49, 0x49, 0x7A },   // G39
 122          //    { 0x00, 0x7F, 0x08, 0x08, 0x08, 0x7F },   // H40
 123          //    { 0x00, 0x00, 0x41, 0x7F, 0x41, 0x00 },   // I41
 124          //    { 0x00, 0x20, 0x40, 0x41, 0x3F, 0x01 },   // J42
 125          //    { 0x00, 0x7F, 0x08, 0x14, 0x22, 0x41 },   // K43
 126          //    { 0x00, 0x7F, 0x40, 0x40, 0x40, 0x40 },   // L44
 127          //    { 0x00, 0x7F, 0x02, 0x0C, 0x02, 0x7F },   // M45
 128          //    { 0x00, 0x7F, 0x04, 0x08, 0x10, 0x7F },   // N46
 129          //    { 0x00, 0x3E, 0x41, 0x41, 0x41, 0x3E },   // O47
 130          //    { 0x00, 0x7F, 0x09, 0x09, 0x09, 0x06 },   // P48
 131          //    { 0x00, 0x3E, 0x41, 0x51, 0x21, 0x5E },   // Q49
 132          //    { 0x00, 0x7F, 0x09, 0x19, 0x29, 0x46 },   // R50
 133          //    { 0x00, 0x46, 0x49, 0x49, 0x49, 0x31 },   // S51
 134          //    { 0x00, 0x01, 0x01, 0x7F, 0x01, 0x01 },   // T52
 135          //    { 0x00, 0x3F, 0x40, 0x40, 0x40, 0x3F },   // U53
 136          //    { 0x00, 0x1F, 0x20, 0x40, 0x20, 0x1F },   // V54
 137          //    { 0x00, 0x3F, 0x40, 0x38, 0x40, 0x3F },   // W55
 138          //    { 0x00, 0x63, 0x14, 0x08, 0x14, 0x63 },   // X56
 139          //    { 0x00, 0x07, 0x08, 0x70, 0x08, 0x07 },   // Y57
 140          //    { 0x00, 0x61, 0x51, 0x49, 0x45, 0x43 },   // Z58
 141          //    { 0x00, 0x00, 0x7F, 0x41, 0x41, 0x00 },   // [59
 142          //    { 0x00, 0x02, 0x04, 0x08, 0x10, 0x20 },   // \60
 143          //    { 0x00, 0x00, 0x41, 0x41, 0x7F, 0x00 },   // ]61
 144          //    { 0x00, 0x04, 0x02, 0x01, 0x02, 0x04 },   // ^62
 145          //    { 0x00, 0x40, 0x40, 0x40, 0x40, 0x40 },   // _63
 146          //    { 0x00, 0x00, 0x01, 0x02, 0x04, 0x00 },   // '64
 147          //    { 0x00, 0x20, 0x54, 0x54, 0x54, 0x78 },   // a65
 148          //    { 0x00, 0x7F, 0x48, 0x44, 0x44, 0x38 },   // b66
 149          //    { 0x00, 0x38, 0x44, 0x44, 0x44, 0x20 },   // c67
 150          //    { 0x00, 0x38, 0x44, 0x44, 0x48, 0x7F },   // d68
 151          //    { 0x00, 0x38, 0x54, 0x54, 0x54, 0x18 },   // e69
 152          //    { 0x00, 0x08, 0x7E, 0x09, 0x01, 0x02 },   // f70
 153          //    { 0x00, 0x18, 0xA4, 0xA4, 0xA4, 0x7C },   // g71
 154          //    { 0x00, 0x7F, 0x08, 0x04, 0x04, 0x78 },   // h72
 155          //    { 0x00, 0x00, 0x44, 0x7D, 0x40, 0x00 },   // i73
 156          //    { 0x00, 0x40, 0x80, 0x84, 0x7D, 0x00 },   // j74
 157          //    { 0x00, 0x7F, 0x10, 0x28, 0x44, 0x00 },   // k75
 158          //    { 0x00, 0x00, 0x41, 0x7F, 0x40, 0x00 },   // l76
 159          //    { 0x00, 0x7C, 0x04, 0x18, 0x04, 0x78 },   // m77
 160          //    { 0x00, 0x7C, 0x08, 0x04, 0x04, 0x78 },   // n78
 161          //    { 0x00, 0x38, 0x44, 0x44, 0x44, 0x38 },   // o79
 162          //    { 0x00, 0xFC, 0x24, 0x24, 0x24, 0x18 },   // p80
 163          //    { 0x00, 0x18, 0x24, 0x24, 0x18, 0xFC },   // q81
 164          //    { 0x00, 0x7C, 0x08, 0x04, 0x04, 0x08 },   // r82
 165          //    { 0x00, 0x48, 0x54, 0x54, 0x54, 0x20 },   // s83
 166          //    { 0x00, 0x04, 0x3F, 0x44, 0x40, 0x20 },   // t84
 167          //    { 0x00, 0x3C, 0x40, 0x40, 0x20, 0x7C },   // u85
 168          //    { 0x00, 0x1C, 0x20, 0x40, 0x20, 0x1C },   // v86
 169          //    { 0x00, 0x3C, 0x40, 0x30, 0x40, 0x3C },   // w87
 170          //    { 0x00, 0x44, 0x28, 0x10, 0x28, 0x44 },   // x88
 171          //    { 0x00, 0x1C, 0xA0, 0xA0, 0xA0, 0x7C },   // y89
 172          //    { 0x00, 0x44, 0x64, 0x54, 0x4C, 0x44 },   // z90
 173          //    { 0x14, 0x14, 0x14, 0x14, 0x14, 0x14 }    // horiz lines91
 174          //};
 175          
 176          //======================================================
 177          // 128X64OLEDÒº¾§µ×²ãÇý¶¯[8X16]×ÖÌå¿â
C51 COMPILER V9.52.0.0   OLED                                                              08/05/2018 19:15:01 PAGE 4   

 178          // Éè¼ÆÕß: ÐÅÒâ¿Æ¼¼
 179          // Ãè  Êö: [8X16]Î÷ÎÄ×Ö·ûµÄ×ÖÄ£Êý¾Ý (×ÝÏòÈ¡Ä£,×Ö½Úµ¹Ðò)
 180          // !"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\]^_`abcdefghijklmnopqrstuvwxyz{|}~
 181          //±¸×¢£ºÕâÀïÖ±½Ó²ÉÓÃÐÅÒâ¿Æ¼¼Ìá¹©µÄ8*16±àÂë£¬ÓÃ»§Ò²¿É²ÉÓÃ±àÂë¹¤¾ß×ÔÐÐ±àÂë
 182          //======================================================
 183          
 184          const unsigned char code F8X16[][16]=
 185          {
 186              {0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00},// 0
 187              {0x00,0x00,0x00,0xF8,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x33,0x30,0x00,0x00,0x00},//!1
 188              {0x00,0x10,0x0C,0x06,0x10,0x0C,0x06,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00},//"2
 189              {0x40,0xC0,0x78,0x40,0xC0,0x78,0x40,0x00,0x04,0x3F,0x04,0x04,0x3F,0x04,0x04,0x00},//#3
 190              {0x00,0x70,0x88,0xFC,0x08,0x30,0x00,0x00,0x00,0x18,0x20,0xFF,0x21,0x1E,0x00,0x00},//$4
 191              {0xF0,0x08,0xF0,0x00,0xE0,0x18,0x00,0x00,0x00,0x21,0x1C,0x03,0x1E,0x21,0x1E,0x00},//%5
 192              {0x00,0xF0,0x08,0x88,0x70,0x00,0x00,0x00,0x1E,0x21,0x23,0x24,0x19,0x27,0x21,0x10},//&6
 193              {0x10,0x16,0x0E,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00},//'7
 194              {0x00,0x00,0x00,0xE0,0x18,0x04,0x02,0x00,0x00,0x00,0x00,0x07,0x18,0x20,0x40,0x00},//(8
 195              {0x00,0x02,0x04,0x18,0xE0,0x00,0x00,0x00,0x00,0x40,0x20,0x18,0x07,0x00,0x00,0x00},//)9
 196              {0x40,0x40,0x80,0xF0,0x80,0x40,0x40,0x00,0x02,0x02,0x01,0x0F,0x01,0x02,0x02,0x00},//*10
 197              {0x00,0x00,0x00,0xF0,0x00,0x00,0x00,0x00,0x01,0x01,0x01,0x1F,0x01,0x01,0x01,0x00},//+11
 198              {0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x80,0xB0,0x70,0x00,0x00,0x00,0x00,0x00},//,12
 199              {0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x01,0x01,0x01,0x01,0x01,0x01,0x01},//-13
 200              {0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x30,0x30,0x00,0x00,0x00,0x00,0x00},//.14
 201              {0x00,0x00,0x00,0x00,0x80,0x60,0x18,0x04,0x00,0x60,0x18,0x06,0x01,0x00,0x00,0x00},///15
 202              {0x00,0xE0,0x10,0x08,0x08,0x10,0xE0,0x00,0x00,0x0F,0x10,0x20,0x20,0x10,0x0F,0x00},//016
 203              {0x00,0x10,0x10,0xF8,0x00,0x00,0x00,0x00,0x00,0x20,0x20,0x3F,0x20,0x20,0x00,0x00},//117
 204              {0x00,0x70,0x08,0x08,0x08,0x88,0x70,0x00,0x00,0x30,0x28,0x24,0x22,0x21,0x30,0x00},//218
 205              {0x00,0x30,0x08,0x88,0x88,0x48,0x30,0x00,0x00,0x18,0x20,0x20,0x20,0x11,0x0E,0x00},//319
 206              {0x00,0x00,0xC0,0x20,0x10,0xF8,0x00,0x00,0x00,0x07,0x04,0x24,0x24,0x3F,0x24,0x00},//420
 207              {0x00,0xF8,0x08,0x88,0x88,0x08,0x08,0x00,0x00,0x19,0x21,0x20,0x20,0x11,0x0E,0x00},//521
 208              {0x00,0xE0,0x10,0x88,0x88,0x18,0x00,0x00,0x00,0x0F,0x11,0x20,0x20,0x11,0x0E,0x00},//622
 209              {0x00,0x38,0x08,0x08,0xC8,0x38,0x08,0x00,0x00,0x00,0x00,0x3F,0x00,0x00,0x00,0x00},//723
 210              {0x00,0x70,0x88,0x08,0x08,0x88,0x70,0x00,0x00,0x1C,0x22,0x21,0x21,0x22,0x1C,0x00},//824
 211              {0x00,0xE0,0x10,0x08,0x08,0x10,0xE0,0x00,0x00,0x00,0x31,0x22,0x22,0x11,0x0F,0x00},//925
 212              {0x00,0x00,0x00,0xC0,0xC0,0x00,0x00,0x00,0x00,0x00,0x00,0x30,0x30,0x00,0x00,0x00},//:26
 213              {0x00,0x00,0x00,0x80,0x00,0x00,0x00,0x00,0x00,0x00,0x80,0x60,0x00,0x00,0x00,0x00},//;27
 214              {0x00,0x00,0x80,0x40,0x20,0x10,0x08,0x00,0x00,0x01,0x02,0x04,0x08,0x10,0x20,0x00},//<28
 215              {0x40,0x40,0x40,0x40,0x40,0x40,0x40,0x00,0x04,0x04,0x04,0x04,0x04,0x04,0x04,0x00},//=29
 216              {0x00,0x08,0x10,0x20,0x40,0x80,0x00,0x00,0x00,0x20,0x10,0x08,0x04,0x02,0x01,0x00},//>30
 217              {0x00,0x70,0x48,0x08,0x08,0x08,0xF0,0x00,0x00,0x00,0x00,0x30,0x36,0x01,0x00,0x00},//?31
 218              {0xC0,0x30,0xC8,0x28,0xE8,0x10,0xE0,0x00,0x07,0x18,0x27,0x24,0x23,0x14,0x0B,0x00},//@32
 219              {0x00,0x00,0xC0,0x38,0xE0,0x00,0x00,0x00,0x20,0x3C,0x23,0x02,0x02,0x27,0x38,0x20},//A33
 220              {0x08,0xF8,0x88,0x88,0x88,0x70,0x00,0x00,0x20,0x3F,0x20,0x20,0x20,0x11,0x0E,0x00},//B34
 221              {0xC0,0x30,0x08,0x08,0x08,0x08,0x38,0x00,0x07,0x18,0x20,0x20,0x20,0x10,0x08,0x00},//C35
 222              {0x08,0xF8,0x08,0x08,0x08,0x10,0xE0,0x00,0x20,0x3F,0x20,0x20,0x20,0x10,0x0F,0x00},//D36
 223              {0x08,0xF8,0x88,0x88,0xE8,0x08,0x10,0x00,0x20,0x3F,0x20,0x20,0x23,0x20,0x18,0x00},//E37
 224              {0x08,0xF8,0x88,0x88,0xE8,0x08,0x10,0x00,0x20,0x3F,0x20,0x00,0x03,0x00,0x00,0x00},//F38
 225              {0xC0,0x30,0x08,0x08,0x08,0x38,0x00,0x00,0x07,0x18,0x20,0x20,0x22,0x1E,0x02,0x00},//G39
 226              {0x08,0xF8,0x08,0x00,0x00,0x08,0xF8,0x08,0x20,0x3F,0x21,0x01,0x01,0x21,0x3F,0x20},//H40
 227              {0x00,0x08,0x08,0xF8,0x08,0x08,0x00,0x00,0x00,0x20,0x20,0x3F,0x20,0x20,0x00,0x00},//I41
 228              {0x00,0x00,0x08,0x08,0xF8,0x08,0x08,0x00,0xC0,0x80,0x80,0x80,0x7F,0x00,0x00,0x00},//J42
 229              {0x08,0xF8,0x88,0xC0,0x28,0x18,0x08,0x00,0x20,0x3F,0x20,0x01,0x26,0x38,0x20,0x00},//K43
 230              {0x08,0xF8,0x08,0x00,0x00,0x00,0x00,0x00,0x20,0x3F,0x20,0x20,0x20,0x20,0x30,0x00},//L44
 231              {0x08,0xF8,0xF8,0x00,0xF8,0xF8,0x08,0x00,0x20,0x3F,0x00,0x3F,0x00,0x3F,0x20,0x00},//M45
 232              {0x08,0xF8,0x30,0xC0,0x00,0x08,0xF8,0x08,0x20,0x3F,0x20,0x00,0x07,0x18,0x3F,0x00},//N46
 233              {0xE0,0x10,0x08,0x08,0x08,0x10,0xE0,0x00,0x0F,0x10,0x20,0x20,0x20,0x10,0x0F,0x00},//O47
 234              {0x08,0xF8,0x08,0x08,0x08,0x08,0xF0,0x00,0x20,0x3F,0x21,0x01,0x01,0x01,0x00,0x00},//P48
 235              {0xE0,0x10,0x08,0x08,0x08,0x10,0xE0,0x00,0x0F,0x18,0x24,0x24,0x38,0x50,0x4F,0x00},//Q49
 236              {0x08,0xF8,0x88,0x88,0x88,0x88,0x70,0x00,0x20,0x3F,0x20,0x00,0x03,0x0C,0x30,0x20},//R50
 237              {0x00,0x70,0x88,0x08,0x08,0x08,0x38,0x00,0x00,0x38,0x20,0x21,0x21,0x22,0x1C,0x00},//S51
 238              {0x18,0x08,0x08,0xF8,0x08,0x08,0x18,0x00,0x00,0x00,0x20,0x3F,0x20,0x00,0x00,0x00},//T52
 239              {0x08,0xF8,0x08,0x00,0x00,0x08,0xF8,0x08,0x00,0x1F,0x20,0x20,0x20,0x20,0x1F,0x00},//U53
C51 COMPILER V9.52.0.0   OLED                                                              08/05/2018 19:15:01 PAGE 5   

 240              {0x08,0x78,0x88,0x00,0x00,0xC8,0x38,0x08,0x00,0x00,0x07,0x38,0x0E,0x01,0x00,0x00},//V54
 241              {0xF8,0x08,0x00,0xF8,0x00,0x08,0xF8,0x00,0x03,0x3C,0x07,0x00,0x07,0x3C,0x03,0x00},//W55
 242              {0x08,0x18,0x68,0x80,0x80,0x68,0x18,0x08,0x20,0x30,0x2C,0x03,0x03,0x2C,0x30,0x20},//X56
 243              {0x08,0x38,0xC8,0x00,0xC8,0x38,0x08,0x00,0x00,0x00,0x20,0x3F,0x20,0x00,0x00,0x00},//Y57
 244              {0x10,0x08,0x08,0x08,0xC8,0x38,0x08,0x00,0x20,0x38,0x26,0x21,0x20,0x20,0x18,0x00},//Z58
 245              {0x00,0x00,0x00,0xFE,0x02,0x02,0x02,0x00,0x00,0x00,0x00,0x7F,0x40,0x40,0x40,0x00},//[59
 246              {0x00,0x0C,0x30,0xC0,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x01,0x06,0x38,0xC0,0x00},//\60
 247              {0x00,0x02,0x02,0x02,0xFE,0x00,0x00,0x00,0x00,0x40,0x40,0x40,0x7F,0x00,0x00,0x00},//]61
 248              {0x00,0x00,0x04,0x02,0x02,0x02,0x04,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00},//^62
 249              {0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80},//_63
 250              {0x00,0x02,0x02,0x04,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00},//`64
 251              {0x00,0x00,0x80,0x80,0x80,0x80,0x00,0x00,0x00,0x19,0x24,0x22,0x22,0x22,0x3F,0x20},//a65
 252              {0x08,0xF8,0x00,0x80,0x80,0x00,0x00,0x00,0x00,0x3F,0x11,0x20,0x20,0x11,0x0E,0x00},//b66
 253              {0x00,0x00,0x00,0x80,0x80,0x80,0x00,0x00,0x00,0x0E,0x11,0x20,0x20,0x20,0x11,0x00},//c67
 254              {0x00,0x00,0x00,0x80,0x80,0x88,0xF8,0x00,0x00,0x0E,0x11,0x20,0x20,0x10,0x3F,0x20},//d68
 255              {0x00,0x00,0x80,0x80,0x80,0x80,0x00,0x00,0x00,0x1F,0x22,0x22,0x22,0x22,0x13,0x00},//e69
 256              {0x00,0x80,0x80,0xF0,0x88,0x88,0x88,0x18,0x00,0x20,0x20,0x3F,0x20,0x20,0x00,0x00},//f70
 257              {0x00,0x00,0x80,0x80,0x80,0x80,0x80,0x00,0x00,0x6B,0x94,0x94,0x94,0x93,0x60,0x00},//g71
 258              {0x08,0xF8,0x00,0x80,0x80,0x80,0x00,0x00,0x20,0x3F,0x21,0x00,0x00,0x20,0x3F,0x20},//h72
 259              {0x00,0x80,0x98,0x98,0x00,0x00,0x00,0x00,0x00,0x20,0x20,0x3F,0x20,0x20,0x00,0x00},//i73
 260              {0x00,0x00,0x00,0x80,0x98,0x98,0x00,0x00,0x00,0xC0,0x80,0x80,0x80,0x7F,0x00,0x00},//j74
 261              {0x08,0xF8,0x00,0x00,0x80,0x80,0x80,0x00,0x20,0x3F,0x24,0x02,0x2D,0x30,0x20,0x00},//k75
 262              {0x00,0x08,0x08,0xF8,0x00,0x00,0x00,0x00,0x00,0x20,0x20,0x3F,0x20,0x20,0x00,0x00},//l76
 263              {0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x00,0x20,0x3F,0x20,0x00,0x3F,0x20,0x00,0x3F},//m77
 264              {0x80,0x80,0x00,0x80,0x80,0x80,0x00,0x00,0x20,0x3F,0x21,0x00,0x00,0x20,0x3F,0x20},//n78
 265              {0x00,0x00,0x80,0x80,0x80,0x80,0x00,0x00,0x00,0x1F,0x20,0x20,0x20,0x20,0x1F,0x00},//o79
 266              {0x80,0x80,0x00,0x80,0x80,0x00,0x00,0x00,0x80,0xFF,0xA1,0x20,0x20,0x11,0x0E,0x00},//p80
 267              {0x00,0x00,0x00,0x80,0x80,0x80,0x80,0x00,0x00,0x0E,0x11,0x20,0x20,0xA0,0xFF,0x80},//q81
 268              {0x80,0x80,0x80,0x00,0x80,0x80,0x80,0x00,0x20,0x20,0x3F,0x21,0x20,0x00,0x01,0x00},//r82
 269              {0x00,0x00,0x80,0x80,0x80,0x80,0x80,0x00,0x00,0x33,0x24,0x24,0x24,0x24,0x19,0x00},//s83
 270              {0x00,0x80,0x80,0xE0,0x80,0x80,0x00,0x00,0x00,0x00,0x00,0x1F,0x20,0x20,0x00,0x00},//t84
 271              {0x80,0x80,0x00,0x00,0x00,0x80,0x80,0x00,0x00,0x1F,0x20,0x20,0x20,0x10,0x3F,0x20},//u85
 272              {0x80,0x80,0x80,0x00,0x00,0x80,0x80,0x80,0x00,0x01,0x0E,0x30,0x08,0x06,0x01,0x00},//v86
 273              {0x80,0x80,0x00,0x80,0x00,0x80,0x80,0x80,0x0F,0x30,0x0C,0x03,0x0C,0x30,0x0F,0x00},//w87
 274              {0x00,0x80,0x80,0x00,0x80,0x80,0x80,0x00,0x00,0x20,0x31,0x2E,0x0E,0x31,0x20,0x00},//x88
 275              {0x80,0x80,0x80,0x00,0x00,0x80,0x80,0x80,0x80,0x81,0x8E,0x70,0x18,0x06,0x01,0x00},//y89
 276              {0x00,0x80,0x80,0x80,0x80,0x80,0x80,0x00,0x00,0x21,0x30,0x2C,0x22,0x21,0x30,0x00},//z90
 277              {0x00,0x00,0x00,0x00,0x80,0x7C,0x02,0x02,0x00,0x00,0x00,0x00,0x00,0x3F,0x40,0x40},//{91
 278              {0x00,0x00,0x00,0x00,0xFF,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xFF,0x00,0x00,0x00},//|92
 279              {0x00,0x02,0x02,0x7C,0x80,0x00,0x00,0x00,0x00,0x40,0x40,0x3F,0x00,0x00,0x00,0x00},//}93
 280              {0x00,0x06,0x01,0x01,0x02,0x02,0x04,0x04,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00},//~94
 281          };
 282          
 283          /*----------------------------------------------------------------------------*
 284           * ÄÚ²¿º¯ÊýÔ­ÐÍ                                                               *
 285           *----------------------------------------------------------------------------*/
 286          void WriteDat(unsigned char Dat);
 287          void WriteCmd(unsigned char Cmd);
 288          void SetPos(unsigned char Page, unsigned char Column);
 289          void FillScreen(unsigned char Dat);
 290          void SetAddressMode(unsigned char  AddMode);                   //È¡ÖµÎª0~2
 291          void SetStartPage(unsigned char StartPage);                      //ÓÃÓÚÒ³µØÖ·Ä£Ê½
 292          void SetStartColumn(unsigned char StartColumn);                //ÓÃÓÚÒ³µØÖ·Ä£Ê½
 293          void SetPageAddress(unsigned char Start, unsigned char End);   //×¢£º¸Ãº¯Êý½öÓÃÓÚË®Æ½µØÖ·»ò´¹Ö±µØÖ·Ä£Ê½
 294          void SetColumnAddress(unsigned char Start, unsigned char End);   //×¢£º¸Ãº¯Êý½öÓÃÓÚË®Æ½µØÖ·»ò´¹Ö±µØÖ·Ä£Ê½
 295          void SetStartLine(unsigned char StartLine);                      //È¡Öµ£º0~63
 296          void SetContrast(unsigned char ContrastValue);                   //È¡Öµ·¶Î§Îª0~255¹²256¼¶¶Ô±È¶È
 297          void SetChargePump(unsigned char  on);                           //0£º¹Ø±ÕµçºÉ±Ã£»1£º¿ªÆôµçºÉ±Ã
 298          void SetCommonRemap(unsigned char Dat);                          //ÉèÖÃCOMÊä³öµÄÉ¨Ãè·½Ïò
 299          void SetSegmentRemap(unsigned char Dat);                       //ÉèÖÃsegmentµÄÖØÓ³Éä
 300          void SetEntireDisplay(unsigned char OnMode);                   // 0: Õý³£ÏÔÊ¾
 301          void SetInverseDisplay(unsigned char InverseValue);          // ·´°×ÏÔÊ¾¿ª/¹Ø
C51 COMPILER V9.52.0.0   OLED                                                              08/05/2018 19:15:01 PAGE 6   

 302          void SetMultiplexRatio(unsigned char Ratio);                   //È¡Öµ£º0~63
 303          void SetDisplayOnOff(unsigned char on);                          // ÉèÖÃÏÔÊ¾¿ª/¹Ø
 304          void SetDisplayOffset(unsigned char OffsetValue);
 305          void SetDisplayClock(unsigned char Value);
 306          void SetPrechargePeriod(unsigned char Value);                    // ÉèÖÃÔ¤³äµçÖÜÆÚ£¬È±Ê¡Îª0x22
 307          void SetCommonConfig(unsigned char Dat);                       // È±Ê¡ => 0x12 (0x10)
 308          void SetVCOMH(unsigned char Dat);                                //Dat¸ñÊ½£º 0xxx_0000
 309          void SetNop(void);
 310          void OLED_Init(void);
 311          void WriteChar_6x8(unsigned char Page,unsigned char Column, unsigned char Dat);
 312          void WriteStr_8x16(unsigned char Page, unsigned char Column, unsigned char Str[]);
 313          void WriteChinese16x16(unsigned char Page,unsigned char Column,unsigned char Str[]);
 314          void WriteMixStrXx16(unsigned char Page, unsigned char Column, unsigned char Str[]);
 315          void PrintChar(unsigned char Page, unsigned char Column, char Dat);
 316          void PrintShort(unsigned char Page, unsigned char Column, int Dat);
 317          void PrintImage(unsigned char ImageTable[], unsigned char RowNum, unsigned char ColumnNum);
 318          
 319          
 320          /*----------------------------------------------------------------------------*
 321           * Íâ²¿º¯ÊýÔ­ÐÍ                                                               *
 322           *----------------------------------------------------------------------------*/
 323          
 324          /*****************************************************************************
 325           º¯ Êý Ãû  : WriteDat
 326           ¹¦ÄÜÃèÊö  : ÏòOLEDÐ´Êý¾Ý
 327           ÊäÈë²ÎÊý  : unsigned char   Dat
 328           Êä³ö²ÎÊý  : NONE
 329           ·µ »Ø Öµ  : NONE
 330          *****************************************************************************/
 331          void WriteDat(unsigned char Dat)
 332          {
 333   1          unsigned char i;
 334   1      
 335   1          for(i=0;i<8;i++)
 336   1          { 
 337   2          DC   = 1;           //Ð´Êý¾Ý
 338   2            SCL_OLED  = 0;            //SCL_OLEDÀ­µÍ£¬ÎªÊý¾Ý½»»»×ö×¼±¸
 339   2          Delay_us();
 340   2      
 341   2              if (Dat&0x80)           //ÏÈ·¢ËÍ×î¸ßÎ»
 342   2                  SDA_OLED = 1;
 343   2              else
 344   2                  SDA_OLED = 0;
 345   2      
 346   2              SCL_OLED = 1;             //ÉÏÉýÑØËø´æÊý¾Ýµ½OLED
 347   2              Delay_us();   
 348   2              Dat <<= 1;    
 349   2          }
 350   1      }
 351          
 352          /*****************************************************************************
 353           º¯ Êý Ãû  : WriteCmd
 354           ¹¦ÄÜÃèÊö  : ÏòOLEDÐ´ÃüÁî
 355           ÊäÈë²ÎÊý  : unsigned char Cmd  
 356           Êä³ö²ÎÊý  : NONE
 357           ·µ »Ø Öµ  : NONE
 358          *****************************************************************************/
 359          void WriteCmd(unsigned char Cmd)
 360          {
 361   1             unsigned char i;
 362   1      
 363   1          for(i=0;i<8;i++)
C51 COMPILER V9.52.0.0   OLED                                                              08/05/2018 19:15:01 PAGE 7   

 364   1          { 
 365   2          DC   = 0;           //Ð´ÃüÁî
 366   2            SCL_OLED  = 0;            //SCL_OLEDÀ­µÍ£¬ÎªÊý¾Ý½»»»×ö×¼±¸
 367   2          Delay_us();
 368   2      
 369   2              if (Cmd&0x80)           //ÏÈ·¢ËÍ×î¸ßÎ»
 370   2                  SDA_OLED = 1;
 371   2              else
 372   2                  SDA_OLED = 0;
 373   2      
 374   2              SCL_OLED = 1;             //ÉÏÉýÑØËø´æÊý¾Ýµ½OLED
 375   2              Delay_us();   
 376   2              Cmd <<= 1;    
 377   2          }
 378   1      }
 379          
 380          /*****************************************************************************
 381           º¯ Êý Ãû  : SetPos
 382           ¹¦ÄÜÃèÊö  : ÉèÖÃ×ø±ê
 383           ÊäÈë²ÎÊý  : unsigned char Page 
 384                       unsigned char Column  
 385           Êä³ö²ÎÊý  : NONE
 386           ·µ »Ø Öµ  : NONE
 387          *****************************************************************************/
 388          void SetPos(unsigned char Page, unsigned char Column)          //Column(ÁÐ)È¡Öµ0~127£¬Page(Ò³)È¡Öµ0~7
 389          { 
 390   1          WriteCmd(0xb0 + Page);           //Ò³Ä£Ê½ÏÂ£¬ÉèÖÃÒ³Ê×µØÖ·£¬pageµÄÈ¡Öµ£º0~7
 391   1          WriteCmd(((Column & 0xf0) >> 4) | 0x10);   //ÁÐÖµ¶ÔÓ¦µÄ¸ßËÄÎ»ÃüÁî£º 0001_X7X6X5X4
 392   1          WriteCmd(( Column & 0x0f) | 0x00);     //ÁÐÖµ¶ÔÓ¦µÄµÍËÄÎ»ÃüÁî£º 0000_X3X2X1X0
 393   1      } 
 394          
 395          /*****************************************************************************
 396           º¯ Êý Ãû  : FillScreen
 397           ¹¦ÄÜÃèÊö  : ¶ÔÈ«ÆÁÐ´ÈëÍ¬Ò»¸ö×Ö·û 
 398                       Èç LED_Fill(0x01);    ¶ÔÓÚÄ³Ò»Î»0Îª²»ÁÁ 1ÎªÁÁ
 399                      ------------------------------------------------------
 400                                          ¹²128ÁÐ
 401                            1           1                1   LSB
 402                        ¹²  0           0                0  ¡ü
 403                        8   0           0                0  |
 404             ´Ë         ×é  0       ¡­¡­0     ¡­¡­¡­¡­   0        |
 405             Îª         ×Ö  0           0                0  |
 406             Ò»         ·û  0           0                0  |
 407             Ò³         ¼´  0           0                0  |
 408                        8   0           0                0  MSB
 409          ---------------------------------------------¡ª-------------
 410                        Ò³  1           1                1
 411                        64  0           0                0
 412                        ÐÐ  .           .                .
 413                            .           .    ¡­¡­¡­¡­    .
 414                            .           .                . 
 415                            .           .                .
 416                            0           0                0
 417                      ------------------------------------------------------
 418           ÊäÈë²ÎÊý  : unsigned char Dat  
 419           Êä³ö²ÎÊý  : NONE
 420           ·µ »Ø Öµ  : NONE
 421          *****************************************************************************/
 422          void FillScreen(unsigned char Dat)
 423          {
 424   1          unsigned char Page,Column;
 425   1          
C51 COMPILER V9.52.0.0   OLED                                                              08/05/2018 19:15:01 PAGE 8   

 426   1          for(Page = 0; Page < 8; Page++)
 427   1          {
 428   2              WriteCmd(0xb0 + Page);                  //0xb0+0~7±íÊ¾Ò³0~7£¬Ö¸¶¨Ò³µÄ¿ªÊ¼Î»ÖÃ
 429   2              WriteCmd(0x00);                         //0x00+0~16±íÊ¾½«128ÁÐ·Ö³É16×éÆäµØÖ·ÔÚÄ³×éÖÐµÄµÚ¼¸ÁÐ
 430   2              WriteCmd(0x10);                         //0x10+0~16±íÊ¾½«128ÁÐ·Ö³É16×éÆäµØÖ·ËùÔÚµÚ¼¸×é
 431   2              for(Column = 0; Column < 128; Column++)  //Ð´128ÁÐ
 432   2              {
 433   3                  WriteDat(Dat);
 434   3              }
 435   2          }
 436   1      } 
 437          
 438          /*****************************************************************************
 439           º¯ Êý Ãû  : SetAddressMode
 440           ¹¦ÄÜÃèÊö  : ÉèÖÃµØÖ·µÄÄ£Ê½
 441           ÊäÈë²ÎÊý  : unsigned char AddMode  
 442           Êä³ö²ÎÊý  : NONE
 443           ·µ »Ø Öµ  : NONE
 444          *****************************************************************************/
 445          void SetAddressMode(unsigned char  AddMode)   //È¡ÖµÎª0~2
 446          {
 447   1          WriteCmd(0x20);        // ÉèÖÃÄÚ´æµØÖ·Ä£Ê½, È±Ê¡ => 0x02£¬¼´£ºÒ³µØÖ·Ä£Ê½
 448   1          WriteCmd(AddMode);      // 0x00 => Ë®Æ½µØÖ·Ä£Ê½; 0x01 => ´¹Ö±µØÖ·Ä£Ê½; 0x02 => Ò³µØÖ·Ä£Ê½             
             -                                          
 449   1      }
 450          
 451          /*****************************************************************************
 452           º¯ Êý Ãû  : SetStartPage
 453           ¹¦ÄÜÃèÊö  : ÉèÖÃÁÐµÄÆðÊ¼Î»ÖÃ
 454           ÊäÈë²ÎÊý  : unsigned char StartPage  
 455           Êä³ö²ÎÊý  : NONE
 456           ·µ »Ø Öµ  : NONE
 457          *****************************************************************************/
 458          void SetStartPage(unsigned char StartPage)  //ÓÃÓÚÒ³µØÖ·Ä£Ê½   
 459          {
 460   1          WriteCmd(0xb0 | StartPage);         //StartPageÈ¡Öµ£º0~7
 461   1      }
 462          
 463          /*****************************************************************************
 464           º¯ Êý Ãû  : SetStartColumn
 465           ¹¦ÄÜÃèÊö  : ÉèÖÃÁÐµÄÆðÊ¼Î»ÖÃ
 466           ÊäÈë²ÎÊý  : unsigned char StartColumn  
 467           Êä³ö²ÎÊý  : NONE
 468           ·µ »Ø Öµ  : NONE
 469          *****************************************************************************/
 470          void SetStartColumn(unsigned char StartColumn)     //ÓÃÓÚÒ³µØÖ·Ä£Ê½
 471          {                          //StartColumnÈ¡Öµ0~127
 472   1          WriteCmd(((StartColumn & 0xf0) >> 4) | 0x10);  //ÁÐÖµ¶ÔÓ¦µÄ¸ßËÄÎ»ÃüÁî£º 0001_X7X6X5X4
 473   1          WriteCmd(( StartColumn & 0x0f) | 0x00);      //ÁÐÖµ¶ÔÓ¦µÄµÍËÄÎ»ÃüÁî£º 0000_X3X2X1X0
 474   1      }
 475          
 476          /*****************************************************************************
 477           º¯ Êý Ãû  : SetPageAddress
 478           ¹¦ÄÜÃèÊö  : ÉèÖÃÐÐµØÖ·µÄ×÷ÓÃ·¶Î§
 479           ÊäÈë²ÎÊý  : unsigned char StartColumn  
 480           Êä³ö²ÎÊý  : NONE
 481           ·µ »Ø Öµ  : NONE
 482           ±¸    ×¢  : ¸Ãº¯Êý½öÓÃÓÚË®Æ½µØÖ·»ò´¹Ö±µØÖ·Ä£Ê½
 483          *****************************************************************************/
 484          void SetPageAddress(unsigned char Start, unsigned char End)  //×¢£º¸Ãº¯Êý½öÓÃÓÚË®Æ½µØÖ·»ò´¹Ö±µØÖ·Ä£Ê½
 485          {
 486   1          WriteCmd(0x22);        // ÉèÖÃÒ³µØÖ·
C51 COMPILER V9.52.0.0   OLED                                                              08/05/2018 19:15:01 PAGE 9   

 487   1          WriteCmd(Start);           // ÆðÊ¼Ò³µØÖ·È±Ê¡Öµ => 0x00 
 488   1          WriteCmd(End);           // ½áÊøÒ³µØÖ·È±Ê¡Öµ => 0x07 
 489   1      }
 490          
 491          /*****************************************************************************
 492           º¯ Êý Ãû  : SetColumnAddress
 493           ¹¦ÄÜÃèÊö  : ÉèÖÃÁÐµØÖ·µÄ×÷ÓÃ·¶Î§
 494           ÊäÈë²ÎÊý  : unsigned char Start, unsigned char End  
 495           Êä³ö²ÎÊý  : NONE
 496           ·µ »Ø Öµ  : NONE
 497           ±¸    ×¢  : ¸Ãº¯Êý½öÓÃÓÚË®Æ½µØÖ·»ò´¹Ö±µØÖ·Ä£Ê½
 498          *****************************************************************************/
 499          void SetColumnAddress(unsigned char Start, unsigned char End) //×¢£º¸Ãº¯Êý½öÓÃÓÚË®Æ½µØÖ·»ò´¹Ö±µØÖ·Ä£Ê½
 500          {
 501   1          WriteCmd(0x21);        // ÉèÖÃÁÐµØÖ·
 502   1          WriteCmd(Start);       // ÆðÊ¼µØÖ·È±Ê¡Öµ => 0x00 
 503   1          WriteCmd(End);         // ½áÊøµØÖ·È±Ê¡Öµ => 0x7F 
 504   1      }
 505          
 506          /*****************************************************************************
 507           º¯ Êý Ãû  : SetStartLine
 508           ¹¦ÄÜÃèÊö  : ÉèÖÃÆðÊ¼µÄÐÐÖµ
 509           ÊäÈë²ÎÊý  : unsigned char StartLine  
 510           Êä³ö²ÎÊý  : NONE
 511           ·µ »Ø Öµ  : NONE
 512          *****************************************************************************/
 513          void SetStartLine(unsigned char StartLine)    //È¡Öµ£º0~63
 514          {
 515   1          WriteCmd(0x40|StartLine);                 // ÉèÖÃÏÔÊ¾µÄÆðÊ¼ÐÐ, È±Ê¡Öµ => 0x40 (0x00)                  
             -                           
 516   1      }
 517          
 518          /*****************************************************************************
 519           º¯ Êý Ãû  : SetContrast
 520           ¹¦ÄÜÃèÊö  : ÉèÖÃÆðÊ¼µÄÐÐÖµ
 521           ÊäÈë²ÎÊý  : unsigned char ContrastValue  
 522           Êä³ö²ÎÊý  : NONE
 523           ·µ »Ø Öµ  : NONE
 524          *****************************************************************************/
 525          void SetContrast(unsigned char ContrastValue) //È¡Öµ·¶Î§Îª0~255¹²256¼¶¶Ô±È¶È
 526          {
 527   1          WriteCmd(0x81);               // ÉèÖÃOLEDÏÔÊ¾µÄ¶Ô±È¶È
 528   1          WriteCmd(ContrastValue);      // È±Ê¡ => 0x7F
 529   1      }
 530          
 531          /*****************************************************************************
 532           º¯ Êý Ãû  : SetChargePump
 533           ¹¦ÄÜÃèÊö  : ÉèÖÃÆðÊ¼µÄÐÐÖµ
 534           ÊäÈë²ÎÊý  : unsigned char On  
 535           Êä³ö²ÎÊý  : NONE
 536           ·µ »Ø Öµ  : NONE
 537          *****************************************************************************/
 538          void SetChargePump(unsigned char  on)   //0£º¹Ø±ÕµçºÉ±Ã£»1£º¿ªÆôµçºÉ±Ã
 539          {
 540   1          WriteCmd(0x8D);                   // Set Charge Pump
 541   1        if(on)
 542   1            WriteCmd(0x14);               // 0x14,Ê¹ÄÜµçºÉ±Ã
 543   1        else
 544   1          WriteCmd(0x10);               // È±Ê¡ => 0x10£¬¼´¹Ø±ÕµçºÉ±Ã
 545   1      }
 546          
 547          /*****************************************************************************
C51 COMPILER V9.52.0.0   OLED                                                              08/05/2018 19:15:01 PAGE 10  

 548           º¯ Êý Ãû  : SetCommonRemap
 549           ¹¦ÄÜÃèÊö  : ÉèÖÃÐÐµÄÖØÓ³Éä(¿ÉÒÔÍ¨¹ýcomµÄÖØÓ³Éä£¬ÊµÏÖ´¹Ö±·½ÏòµÄ¾µÏñ)
 550           ÊäÈë²ÎÊý  : unsigned char Dat  
 551           Êä³ö²ÎÊý  : NONE
 552           ·µ »Ø Öµ  : NONE
 553          *****************************************************************************/
 554          void SetCommonRemap(unsigned char Dat) //ÉèÖÃCOMÊä³öµÄÉ¨Ãè·½Ïò
 555          {
 556   1        if(Dat)
 557   1            WriteCmd(0xC8);   //0xc8 ´ÓCOM63¡ú0:
 558   1        else
 559   1          WriteCmd(0xC0);   //È±Ê¡=> 0xC0£¬´ÓCOM0¡ú63
 560   1      }
 561          
 562          /*****************************************************************************
 563           º¯ Êý Ãû  : SetSegmentRemap
 564           ¹¦ÄÜÃèÊö  : ÉèÖÃÁÐµÄÖØÓ³Éä(¿ÉÒÔÍ¨¹ýSegmentµÄÖØÓ³Éä£¬ÊµÏÖË®Æ½·½ÏòµÄ¾µÏñ)
 565           ÊäÈë²ÎÊý  : unsigned char On  
 566           Êä³ö²ÎÊý  : NONE
 567           ·µ »Ø Öµ  : NONE
 568          *****************************************************************************/
 569          void SetSegmentRemap(unsigned char Dat)    // ÉèÖÃsegmentµÄÖØÓ³Éä
 570          {                      // È±Ê¡ => 0xA0
 571   1        if(Dat)
 572   1            WriteCmd(0xA1);            // 0xA1 => ÁÐ127Ó³Éäµ½SEG0
 573   1          else                   
 574   1          WriteCmd(0xA0);                    // 0xA0 => ÁÐµØÖ·0Ó³Éäµ½seg127   
 575   1      }
 576          
 577          /*****************************************************************************
 578           º¯ Êý Ãû  : SetEntireDisplay
 579           ¹¦ÄÜÃèÊö  : ÉèÖÃÕûÆÁµÄÏÔÊ¾ÄÚÈÝ 
 580           ÊäÈë²ÎÊý  : unsigned char On  
 581           Êä³ö²ÎÊý  : NONE
 582           ·µ »Ø Öµ  : NONE
 583          *****************************************************************************/
 584          void SetEntireDisplay(unsigned char OnMode)   // 0: Õý³£ÏÔÊ¾
 585          {
 586   1          if(OnMode)        // Set Entire Display On / Off
 587   1          WriteCmd(0xA5);   // 0xA5 (0x01) => ¿ªÏÔÊ¾£¬µ«ºöÂÔRAMÖÐÄÚÈÝ
 588   1        else           
 589   1          WriteCmd(0xA4);   // 0xA4 (È±Ê¡) => Õý³£ÏÔÊ¾£¬ÏÔÊ¾RAMÖÐµÄÄÚÈÝ                           
 590   1      }
 591          
 592          /*****************************************************************************
 593           º¯ Êý Ãû  : SetInverseDisplay
 594           ¹¦ÄÜÃèÊö  : ÉèÖÃ·´°×ÏÔÊ¾Ä£Ê½ 
 595           ÊäÈë²ÎÊý  : unsigned char InverseValue  
 596           Êä³ö²ÎÊý  : NONE
 597           ·µ »Ø Öµ  : NONE
 598          *****************************************************************************/
 599          void  SetInverseDisplay(unsigned char InverseValue)  // ·´°×ÏÔÊ¾¿ª/¹Ø
 600          {
 601   1          WriteCmd(0xA6|InverseValue);  // È±Ê¡(InverseValue = 0) => 0xA6£¬Õý³£ÏÔÊ¾
 602   1                                      // 0xa7(InverseValue = 1) ,·´°×ÏÔÊ¾
 603   1      }
 604          
 605          /*****************************************************************************
 606           º¯ Êý Ãû  : SetMultiplexRatio
 607           ¹¦ÄÜÃèÊö  : ±¶ÆµÂÊÉèÖÃ
 608           ÊäÈë²ÎÊý  : unsigned char Ratio  
 609           Êä³ö²ÎÊý  : NONE
C51 COMPILER V9.52.0.0   OLED                                                              08/05/2018 19:15:01 PAGE 11  

 610           ·µ »Ø Öµ  : NONE
 611          *****************************************************************************/
 612          void SetMultiplexRatio(unsigned char Ratio) //È¡Öµ£º0~63
 613          {
 614   1          WriteCmd(0xA8);        // ÉèÖÃ±¶ÆµÂÊ
 615   1          WriteCmd(Ratio);       // È±Ê¡ => 0x3F (1/64 Duty)
 616   1      }
 617          
 618          /*****************************************************************************
 619           º¯ Êý Ãû  : SetDisplayOnOff
 620           ¹¦ÄÜÃèÊö  : ÏÔÊ¾¿ª/¹ØÉèÖÃ
 621           ÊäÈë²ÎÊý  : unsigned char ON  
 622           Êä³ö²ÎÊý  : NONE
 623           ·µ »Ø Öµ  : NONE
 624          *****************************************************************************/
 625          void SetDisplayOnOff(unsigned char on)    // ÉèÖÃÏÔÊ¾¿ª/¹Ø
 626          {
 627   1          WriteCmd(0xAE|on);  //0: ¹ØÏÔÊ¾£»1£º¿ªÏÔÊ¾ £¬È±Ê¡Îª¹Ø
 628   1      }
 629          
 630          /*****************************************************************************
 631           º¯ Êý Ãû  : SetDisplayOffset
 632           ¹¦ÄÜÃèÊö  : ÏÔÊ¾¿ª/¹ØÉèÖÃ
 633           ÊäÈë²ÎÊý  : unsigned char OffsetValue  
 634           Êä³ö²ÎÊý  : NONE
 635           ·µ »Ø Öµ  : NONE
 636          *****************************************************************************/
 637          void SetDisplayOffset(unsigned char OffsetValue)
 638          {
 639   1          WriteCmd(0xD3);        // ÉèÖÃÏÔÊ¾Æ«ÒÆÁ¿
 640   1          WriteCmd(OffsetValue); // Default => 0x00 £¬OffsetValueµÄÈ¡Öµ0~63£¬¿ÉÊµÏÖ´¹Ö±·½ÏòÉÏµÄÆ«ÒÆ
 641   1      }
 642          
 643          /*****************************************************************************
 644           º¯ Êý Ãû  : SetDisplayClock
 645           ¹¦ÄÜÃèÊö  : ÏÔÊ¾¾§ÌåÆµÂÊ¼°Ê±ÖÓ·ÖÆµÂÊ
 646           ÊäÈë²ÎÊý  : unsigned char Value  
 647           Êä³ö²ÎÊý  : NONE
 648           ·µ »Ø Öµ  : NONE
 649          *****************************************************************************/
 650          void SetDisplayClock(unsigned char Value)
 651          {
 652   1          WriteCmd(0xD5);         // Set Display Clock Divide Ratio / Oscillator Frequency
 653   1          WriteCmd(Value);        // Default => 0x80
 654   1                                  // D[3:0] => Êý¾ÝµÍËÄÎ»Îª·ÖÆµÂÊ
 655   1                                  // D[7:4] => ¸ßËÄÎ»Îª¾§ÌåÆµÂÊ
 656   1      }
 657          
 658          /*****************************************************************************
 659           º¯ Êý Ãû  : SetPrechargePeriod
 660           ¹¦ÄÜÃèÊö  : ÉèÖÃÔ¤³äµçÖÜÆÚ
 661           ÊäÈë²ÎÊý  : unsigned char Value  
 662           Êä³ö²ÎÊý  : NONE
 663           ·µ »Ø Öµ  : NONE
 664          *****************************************************************************/
 665          void SetPrechargePeriod(unsigned char Value) // ÉèÖÃÔ¤³äµçÖÜÆÚ£¬È±Ê¡Îª0x22
 666          {              
 667   1          WriteCmd(0xD9);        
 668   1          WriteCmd(Value);  // D[3:0]: Ô¤³äµçÖÜÆÚ£¬D[7:4]£º·ÅµçÖÜÆÚ 
 669   1      }
 670          
 671          /*****************************************************************************
C51 COMPILER V9.52.0.0   OLED                                                              08/05/2018 19:15:01 PAGE 12  

 672           º¯ Êý Ãû  : SetCommonConfig
 673           ¹¦ÄÜÃèÊö  : ÉèÖÃÔ¤³äµçÖÜÆÚ
 674           ÊäÈë²ÎÊý  : unsigned char Dat  
 675           Êä³ö²ÎÊý  : NONE
 676           ·µ »Ø Öµ  : NONE
 677          *****************************************************************************/
 678          void SetCommonConfig(unsigned char Dat) // È±Ê¡ => 0x12 (0x10)
 679          {
 680   1          WriteCmd(0xDA);        // ÉèÖÃCOM¶ËµÄÓ²¼þÅäÖÃ
 681   1          WriteCmd(0x02|Dat);    // Alternative COM Pin Configuration
 682   1                                 // Disable COM Left/Right Re-Map£¨Dat[5]:0,¹Ø±ÕCOMÖØÓ³Éä£»1£ºÊ¹ÄÜCOMÖØÓ³Éä£©
 683   1      }
 684          
 685          /*****************************************************************************
 686           º¯ Êý Ãû  : SetVCOMH
 687           ¹¦ÄÜÃèÊö  : ÉèÖÃCOM¶ËµÄµçÆ½µÈ¼¶
 688           ÊäÈë²ÎÊý  : unsigned char Dat  
 689           Êä³ö²ÎÊý  : NONE
 690           ·µ »Ø Öµ  : NONE
 691          *****************************************************************************/
 692          void SetVCOMH(unsigned char Dat)   //Dat¸ñÊ½£º 0xxx_0000
 693          {
 694   1          WriteCmd(0xDB);              // Set VCOMH Deselect Level
 695   1          WriteCmd(Dat);                 // È±Ê¡ => 0x20 (0.77*VCC)
 696   1      }
 697          
 698          /*****************************************************************************
 699           º¯ Êý Ãû  : SetNop
 700           ¹¦ÄÜÃèÊö  : ¿Õ²Ù×÷ NOP
 701           ÊäÈë²ÎÊý  : NONE
 702           Êä³ö²ÎÊý  : NONE
 703           ·µ »Ø Öµ  : NONE
 704          *****************************************************************************/
 705          void SetNop(void)
 706          {
 707   1          WriteCmd(0xE3);                // ²»²Ù×÷
 708   1      }
 709          
 710          /*****************************************************************************
 711           º¯ Êý Ãû  : LED_Init
 712           ¹¦ÄÜÃèÊö  : OLED³õÊ¼»¯
 713           ÊäÈë²ÎÊý  : VOID  
 714           Êä³ö²ÎÊý  : NONE
 715           ·µ »Ø Öµ  : NONE
 716           ±¸    ×¢  £ºÏêÏ¸Çë²Î¿¼0.96inch_LDR128064B2B201 9.5 Recommanded Software Initialization
 717          *****************************************************************************/
 718          void OLED_Init(void)        
 719          {
 720   1          unsigned char i;
 721   1      
 722   1          SCL_OLED = 1;      
 723   1          RST = 0;
 724   1          for(i = 0; i < 100; i++)
 725   1        {
 726   2          ;                      //´ÓÉÏµçµ½ÏÂÃæ¿ªÊ¼³õÊ¼»¯ÒªÓÐ×ã¹»µÄÊ±¼ä£¬¼´µÈ´ýRC¸´Î»Íê±Ï    
 727   2          }      
 728   1          RST = 1;
 729   1      
 730   1          SetDisplayOnOff(0);        // ¹ØÏÔÊ¾ (0£º¹ØÏÔÊ¾/1£º¿ªÏÔÊ¾)
 731   1          SetDisplayClock(0x80);     // ÉèÖÃÊ±ÖÓÎª100Frames/Sec £¬0x80ÎªÈ±Ê¡Öµ
 732   1          SetMultiplexRatio(0x3F);   // 1/64 Duty (0x0F~0x3F)
 733   1          SetDisplayOffset(0x00);    // ´¹Ö±ÏÔÊ¾ÎÞÆ«ÒÆ (0x00~0x3F)
C51 COMPILER V9.52.0.0   OLED                                                              08/05/2018 19:15:01 PAGE 13  

 734   1          SetStartLine(0x00);        // ÉèÖÃÓ³ÉäÄÚÈÝÏÔÊ¾µÄÆðÊ¼ÐÐ(0x00~0x3F)
 735   1          SetChargePump(1);          // Ê¹ÄÜÄÚ²¿DC/DC×ª»»(0x00/0x04)
 736   1          SetAddressMode(0x02);      // ÉèÖÃÎªÒ³µØÖ·Ä£Ê½ (0x00/0x01/0x02)
 737   1          SetSegmentRemap(0x01);     // SegmentÖØÓ³Éä£»  0x00×óÓÒ·´ÖÃ 0x01Õý³£
 738   1          SetCommonRemap(0x01);      // ÉèÖÃCOMÉ¨Ãè·½Ïò  0x00ÉÏÏÂ·´ÖÃ 0x08Õý³£
 739   1          SetCommonConfig(0x10);     // ÉèÖÃcomÐòÁÐµÄÅäÖÃ (0x00/0x10)
 740   1          SetContrast(0x7F);         // ÉèÖÃ¶Ô±È¶È
 741   1          SetPrechargePeriod(0xF1);  // ÉèÖÃÔ¤³äµçÖÜÆÚÎª15¸öÊ±ÖÓ£¬·ÅµçÖÜÆÚÎª1¸öÊ±ÖÓÖÜÆÚ
 742   1          SetVCOMH(0x40);            // ÉèÖÃCOM¶ËµçÆ½µÈ¼¶
 743   1          SetEntireDisplay(0);       // Õý³£ÏÔÊ¾(0£ºÕý³£ÏÔÊ¾/1£ººöÂÔÏÔÊ¾)
 744   1          SetInverseDisplay(0);      // ·´°×ÉèÖÃ (0£ºÕý³£ÏÔÊ¾/1£º·´°×ÏÔÊ¾)  
 745   1          SetDisplayOnOff(1);        // ¿ªÏÔÊ¾ (0£º¹ØÏÔÊ¾/1£º¿ªÏÔÊ¾)
 746   1          FillScreen(0x00);            // ³õÊ¼ÇåÆÁ£¬Ìî³ä¿Õ°×
 747   1      ///    SetPos(0,0);      //²¢½«Î»ÖÃÉèÖÃÔÚ0Ò³£¬0ÁÐ
 748   1      
 749   1      } 
 750           
 751          /*****************************************************************************
 752           º¯ Êý Ãû  : WriteChar_6x8
 753           ¹¦ÄÜÃèÊö  : ÏÔÊ¾Ò»¸ö6x8±ê×¼ASCII×Ö·û
 754           ÊäÈë²ÎÊý  : unsigned char Column  ÏÔÊ¾µÄºá×ø±ê0~122,
 755                                             ÒòÎª6*8¸ñÊ½µÄ×Ö·û¿í¶ÈÎª6£¬Òò´Ë×Ö·ûÆðÊ¼ÁÐµØÖ·Ö»ÄÜÎª0~122
 756                       unsigned char Page    Ò³·¶Î§0¡«7
 757                       unsigned char Dat  ÏÔÊ¾µÄ×Ö·û
 758           Êä³ö²ÎÊý  : NONE
 759           ·µ »Ø Öµ  : NONE
 760          *****************************************************************************/
 761          void WriteChar_6x8(unsigned char Page,unsigned char Column, unsigned char Dat)
 762          {
 763   1          unsigned char i, temp;     
 764   1             
 765   1          temp = Dat - 32;   //ASCIIÂë±íµÄ0~31Îª²»¿É¼û×Ö·û£¬F6x8µÄ±àÂëÊ×ÐÐÎªASCiiÂë±íµÄµÚ32ÐÐ£¬¹ÊÐè¼õ32
 766   1          if(Column > 122)
 767   1          {
 768   2              Column = 0;    //ÈôÎÞ·¨Ð´ÏÂÒ»¸ö×Ö·û£¬ÔòÁíÆðÒ»Ò³£¬²¢½«ÁÐµØÖ·¸ÄÖÁÊ×ÁÐ
 769   2              Page++;
 770   2          }
 771   1          SetPos(Page, Column);
 772   1          for(i = 0; i < 6; i++)
 773   1          {     
 774   2              WriteDat(F6x8[temp][i]);  
 775   2          }
 776   1      }
 777          
 778          /*****************************************************************************
 779           º¯ Êý Ãû  : WriteStr_6x8
 780           ¹¦ÄÜÃèÊö  : Ð´ÈëÒ»×é6x8±ê×¼ASCII×Ö·û´®
 781           ÊäÈë²ÎÊý  : unsigned char Page      Ò³·¶Î§0¡«7     
 782                       unsigned char Column    ÏÔÊ¾µÄºá×ø±ê0~122  
 783                       unsigned char Str[]     ÏÔÊ¾µÄ×Ö·û´®
 784           Êä³ö²ÎÊý  : NONE
 785           ·µ »Ø Öµ  : NONE
 786          *****************************************************************************/
 787          void WriteStr_6x8(unsigned char Page, unsigned char Column, unsigned char Str[])
 788          {
 789   1          unsigned char j; 
 790   1      
 791   1          for (j=0; Str[j] != '\0'; j++)    //ÅÐ¶Ï×Ö·û´®ÊÇ·ñ½áÊø£¬Ò²¿ÉÍ¨¹ýÖ¸Õë½øÐÐ²Ù×÷
 792   1          {    
 793   2              WriteChar_6x8(Page,Column,Str[j]);    //ÔÚÖ¸¶¨µÄµØ·½Ð´Ò»¸ö×Ö·û
 794   2              Column += 6;          //Ã¿Ð´Ò»¸ö×Ö·û£¬ÁÐµØÖ·¼Ó6
 795   2          }
C51 COMPILER V9.52.0.0   OLED                                                              08/05/2018 19:15:01 PAGE 14  

 796   1      }
 797          
 798          /*****************************************************************************
 799           º¯ Êý Ãû  : WriteStr_8x16
 800           ¹¦ÄÜÃèÊö  : Ð´ÈëÒ»×é8x16±ê×¼ASCII×Ö·û´®
 801           ÊäÈë²ÎÊý  : unsigned char Page     ÎªÒ³·¶Î§0¡«3,ÒòÎª¸Ã¸ñÊ½µÄ×Ö·û¸ß¶ÈÕ¼ÓÃÁ½Ò³
 802                 unsigned char Column   ÎªÏÔÊ¾µÄºá×ø±ê0~120
 803                       unsigned char Str[]    ÒªÏÔÊ¾µÄ×Ö·û´®
 804           Êä³ö²ÎÊý  : NONE
 805           ·µ »Ø Öµ  : NONE
 806          *****************************************************************************/
 807          void WriteStr_8x16(unsigned char Page, unsigned char Column, unsigned char Str[])
 808          {
 809   1          unsigned char i, j, temp;
 810   1      
 811   1          Page <<= 1;             //ÏÔÊ¾¸ß¶ÈÎª16µÄ×Ö·ûÊ±£¬ÆÁÄ»0~7Ò³×ª»¯Îª0~3ÐÐ£¬¼´Á½Ò³ÎªÒ»ÐÐ
 812   1                                            //Ò²¿É²»Òª´ËÐÐ£¬µ«Ðè×¢Òâ¶ÔÓ¦¹ØÏµ
 813   1          for (j=0;Str[j] != '\0'; j++)       //×Ö·û´®Î´½áÊø
 814   1          {    
 815   2              temp = Str[j] - 32;
 816   2              if(Column > 120)
 817   2              {
 818   3                  Column = 0;
 819   3                  Page += 2;          //Èôµ±Ç°ÐÐÐ´²»ÏÂ£¬ÔòÐèÒ»´Î»»Á½Ò³£¬·½¿É¼ÌÐøÐ´
 820   3              }
 821   2      
 822   2              SetPos(Page, Column);   
 823   2              for(i = 0; i < 8; i++) 
 824   2              {
 825   3                  WriteDat(F8X16[temp][i]);   //ÏÈÐ´Ò»¸ö×Ö·ûµÄÉÏ°ë²¿·Ö
 826   3              }
 827   2              
 828   2              SetPos(Page+1, Column);   
 829   2              for(i=8; i<16; i++) 
 830   2              {
 831   3                  WriteDat(F8X16[temp][i]);
 832   3              }
 833   2              Column += 8;  
 834   2          }
 835   1      }
 836          
 837          /*****************************************************************************
 838           º¯ Êý Ãû  : WriteChinese16x16
 839           ¹¦ÄÜÃèÊö  : Ð´ÈëÒ»×é16x16µÄÖÐÎÄ×Ö·û´®¡¾ÐèÍ¨¹ýÈ¡Ä£Èí¼þ¶ÔÐèÒªµÄºº×Ö½øÐÐ±àÂë¡¿
 840           ÊäÈë²ÎÊý  : unsigned char Page       ÎªÒ³·¶Î§0¡«3
 841                       unsigned char Column     ÎªÏÔÊ¾µÄºá×ø±ê0~114,  114 = 128-16(¼´±ØÐë±£Ö¤Ð´ÂúÒ»¸ö×Ö)
 842                       unsigned char Str[]      ÒªÏÔÊ¾µÄÖÐÎÄ×Ö·û´®
 843           Êä³ö²ÎÊý  : NONE
 844           ·µ »Ø Öµ  : NONE
 845           ±¸    ×¢  £ºÇëÓÃ»§×ÐÏ¸Ìå»á¸Ãº¯ÊýµÄÐ´·¨
 846          *****************************************************************************/
 847          void WriteChinese16x16(unsigned char Page,unsigned char Column,unsigned char Str[])
 848          {
 849   1          unsigned char i, j;
 850   1          unsigned int  Address; 
 851   1          
 852   1          Page <<= 1;                    //Á½Ò³ÎªÒ»ÐÐ£¬pageÈ¡ÖµÎª0~3
 853   1          for(j=0;Str[j]!='\0';)
 854   1          {
 855   2              i = 0;
 856   2              Address = 1;
 857   2              while(font16x16[i] > 127)  //ASCIIÂëÎª7Î»¶þ½øÖÆ±íÊ¾µÄ£¬Òò´Ë×î´óÎª127,Èô´óÓÚ127,ÒÑËµÃ÷Æä²»ÊÇASCIIÂë
C51 COMPILER V9.52.0.0   OLED                                                              08/05/2018 19:15:01 PAGE 15  

             -ÁË¡£
 858   2                                     //ºº×Ö±íÊ¾ÐèÁ½¸ö×Ö½Ú£¬Îª¼æÈÝASCIIÂë£¬¼ÆËã»úÖÐÓÃÄÚÂë±íÊ¾£¬Á½¸ö×Ö½Ú×î¸ßÎ»¾ùÎª1£
             -¬¼´´óÓÚ127
 859   2              {
 860   3                  if(font16x16[i] == Str[j])       //Èôºº×ÖÊý×éÖÐµÚi¸öºº×ÖÓëÊµ²ÎµÚj¸ö×ÖµÄµÚÒ»¸ö×Ö½ÚÏàÍ¬
 861   3                  {
 862   4                      if(font16x16[i+1] == Str[j+1]) //ÇÒºº×ÖÊý×éÖÐµÚi¸öºº×ÖÓëÊµ²ÎµÚj¸ö×ÖµÄµÚ¶þ¸ö×Ö½ÚÒ²ÏàÍ¬
 863   4                      {
 864   5                          Address = i*16;        //ÔòÊµ¼ÊµÚj¸öºº×Ö¾Í²ÉÓÃfont16*16µÄµÚi¸öºº×ÖµÄ±àÂë
 865   5                          break;
 866   5                      }
 867   4                  }
 868   3                  i += 2;                      //ºº×ÖË÷ÒýÇ°ÒÆÒ»¸ö,Ö¸Ïòºº×ÖÊý×éÖÐµÄÏÂÒ»¸öºº×Ö
 869   3              }                    //ºº×ÖÒÑ¶¨ÒåÎªcharÐÍ¸ñÊ½£¬¼´Ò»¸öºº×ÖÕ¼Á½¸öcharÐÍµÄ¿í¶È
 870   2              
 871   2              if(Column > 112)
 872   2              {
 873   3                  Column = 0;
 874   3                  Page  += 2;              //Ã¿»»Ò»´ÎÐÐ£¬Ôö¼ÓÁ½Ò³
 875   3              }
 876   2              
 877   2              if(Address != 1)                       // ËùÃ÷ºº×ÖµÄ×Ö·û´®·Ç¿Õ£¬»ò±íÊ¾Êµ²ÎµÄ±àÂë¿ÉÒÔÔÚºº×ÖÊý×é¶ÔÓ¦
             -±àÂëÖÐÕÒµ½                 
 878   2              {
 879   3                  SetPos(Page, Column);        //ÉèÖÃÉÏ°ë²¿·ÖµÄÆðÊ¼Î»ÖÃ
 880   3                  for(i=0;i<16;i++)               
 881   3                  {
 882   4                      WriteDat(font16x16_code[Address]);  //Ð´ºº×ÖÉÏ°ë²¿·Ö  
 883   4                      Address++;
 884   4                  }
 885   3                  SetPos(Page+1,Column);                  //ÉèÖÃÏÂ°ë²¿·ÖµÄÆðÊ¼Î»ÖÃ
 886   3                  for(i=0;i<16;i++)          
 887   3                  {
 888   4                      WriteDat(font16x16_code[Address]);  //Ð´ºº×ÖÏÂ°ë²¿·Ö
 889   4                      Address++;
 890   4                  }
 891   3                  j += 2;                       //Êµ²ÎÖÐµÄºº×ÖºóÒÆÒ»¸ö
 892   3              }
 893   2              else                                        //ÈôÊµ²ÎÊý×éÄÚÈÝÎª¿Õ£¬»òÕßÊµ²ÎÓëÖ¸¶¨µÄºº×ÖÊý×é³£Á¿²»´æ
             -ÔÚÏàÍ¬ºº×Ö            
 894   2              {
 895   3                  SetPos(Page,Column);            //Ôò½«²»´æÔÚ±àÂëµÄºº×ÖÓÃ¿Õ°×Ìî³ä
 896   3                  for(i=0;i<16;i++)
 897   3                  {
 898   4                      WriteDat(0);
 899   4                  }
 900   3                  SetPos(Page+1,Column);
 901   3                  for(i=0;i<16;i++)
 902   3                  {           
 903   4                      WriteDat(0);   
 904   4                  }
 905   3                  j++;                    //¿ÉÄÜºº×ÖÖÐ´æÔÚÒ»¸ö¿Õ°×»òÓ¢ÎÄ×Ö·û£¬Ìø¹ýÒ»¸ö×Ö½ÚÔÙÖØÐÂÆ¥Åä
 906   3              }
 907   2              
 908   2              Column += 16;                               //Ð´ÍêÒ»¸öºº×Ö£¬ÁÐÔö¼Ó16
 909   2          }
 910   1      }
 911          
 912          /*****************************************************************************
 913           º¯ Êý Ãû  : WriteMixStrXx16
 914           ¹¦ÄÜÃèÊö  : Êä³ö16x16ºº×ÖºÍ8x16×Ö·û»ìºÏ×Ö·û´® £¨×Ö·û´®±í¸ñÖÐÐèº¬ÓÐ´Ë×Ö£©
 915           ÊäÈë²ÎÊý  : unsigned char Page       ÎªÒ³·¶Î§0¡«3
C51 COMPILER V9.52.0.0   OLED                                                              08/05/2018 19:15:01 PAGE 16  

 916                 unsigned char Column     ÎªÏÔÊ¾µÄºá×ø±ê0~114
 917                       unsigned char Str[]      ÒªÏÔÊ¾µÄ»ìºÏ×Ö·û´®
 918           Êä³ö²ÎÊý  : NONE
 919           ·µ »Ø Öµ  : NONE
 920          *****************************************************************************/
 921          void WriteMixStrXx16(unsigned char Page, unsigned char Column, unsigned char Str[])
 922          {
 923   1          unsigned char TempStr[3];
 924   1          unsigned char i = 0;    
 925   1      
 926   1          while(Str[i] != '\0')                       //×Ö·û´®Î´½áÊø
 927   1          {
 928   2              if(Str[i] > 127)                        //Èô·ÇASCIIÂë±íÖÐ×Ö·û
 929   2              {
 930   3                  TempStr[0] = Str[i];                  //½«Êµ²ÎµÚÒ»¸ö×Ö½ÚºÍµÚ¶þ¸ö×Ö½Ú·Ö±ðÔÝ´æ£¨¿ÉÄÜ¸ÕºÃÊÇÒ»¸öºº×Ö
             -£©
 931   3                  TempStr[1] = Str[i+1];
 932   3                  TempStr[2] = '\0';                        //ÔÝ´æ×Ö·û´®½áÊø×Ö·û
 933   3                  WriteChinese16x16(Page, Column, TempStr);  //ÏÔÊ¾ºº×Ö
 934   3                  Column += 16;               //ÁÐ¼Ó16
 935   3                  i += 2;                   //×Ö·ûË÷Òý¼Ó2£¬ºº×ÖË÷Òý¼Ó1£¨Ò»¸öºº×ÖÁ½¸ö×Ö½Ú£©
 936   3              }
 937   2              else                      //¼´»ìºÏ×Ö·û´®µ±ÖÐ³öÏÖÓ¢ÎÄ×Ö·û
 938   2              {
 939   3                  TempStr[0] = Str[i];    
 940   3                  TempStr[1] = '\0';                        //½«Ò»¸öÓ¢ÎÄ×Ö·ûµ±×ö×Ö·û´®
 941   3                  WriteStr_8x16(Page, Column, TempStr);     //Ð´TemStr
 942   3                  Column += 8;                //ÁÐÔö¼Ó8ÁÐ
 943   3                  i += 1;                   //×Ö·û´®Ë÷ÒýÔö¼ÓÒ»¸ö×Ö½Ú
 944   3              }
 945   2          }
 946   1      } 
 947          
 948          /*****************************************************************************
 949           º¯ Êý Ãû  : PrintChar
 950           ¹¦ÄÜÃèÊö  : ½«Ò»¸öCharÐÍÊý×ª»»³É3Î»Êý½øÐÐÏÔÊ¾
 951           ÊäÈë²ÎÊý  : unsigned char Page      ·¶Î§Îª0¡«7
 952                 unsigned char Column  ·¶Î§Îª0¡«122
 953                       char          Dat       ÐèÒª×ª»¯ÏÔÊ¾µÄÊýÖµ -128~127
 954           Êä³ö²ÎÊý  : NONE
 955           ·µ »Ø Öµ  : NONE
 956          *****************************************************************************/
 957          void PrintChar(unsigned char Page, unsigned char Column, char Dat)
 958          {
 959   1          unsigned int i, j, k, temp;
 960   1      
 961   1          if(Dat < 0)
 962   1          {
 963   2              WriteChar_6x8(Page, Column, '-');   //ÈôÎª¸ºÊý£¬ÏÈÏÔÊ¾Æä¸ººÅ
 964   2              temp = (unsigned char)(-Dat);       //½«¸ºÊý×ª»»ÎªÕýÊý
 965   2          }
 966   1          else
 967   1          {
 968   2              WriteChar_6x8(Page, Column, '+');
 969   2              temp = (unsigned char)Dat;        //²»ÄÜÖ±½ÓÓÃÓÚÏÔÊ¾£¬ÒòÎªÊýÖµ½«µÈÐ§ÎªACSii£¬ÏÔÊ¾½«±ä³É×Ö·û 
 970   2          }
 971   1          i = temp/100;               //·ÖÀë°ÙÎ»Êý
 972   1          j = temp/10%10;               //·ÖÀëÊ®Î»Êý
 973   1          k = temp%10;                //·ÖÀë¸öÎ»Êý
 974   1          
 975   1          WriteChar_6x8(Page, Column+ 6, i);        //Ð´°ÙÎ»Êý
 976   1          WriteChar_6x8(Page, Column+12, j);        //Ð´Ê®Î»Êý
C51 COMPILER V9.52.0.0   OLED                                                              08/05/2018 19:15:01 PAGE 17  

 977   1          WriteChar_6x8(Page, Column+18, k);        //Ð´¸öÎ»Êý
 978   1      }
 979          
 980          /*****************************************************************************
 981           º¯ Êý Ãû  : PrintShort
 982           ¹¦ÄÜÃèÊö  : ½«Ò»¸öShortÐÍÊý×ª»»³É5Î»Êý½øÐÐÏÔÊ¾
 983           ÊäÈë²ÎÊý  : unsigned char Page    ·¶Î§Îª0¡«7
 984                       unsigned char Column  ·¶Î§Îª0~122
 985                       int           Dat     ÐèÒª×ª»¯ÏÔÊ¾µÄÊýÖµ
 986           Êä³ö²ÎÊý  : NONE
 987           ·µ »Ø Öµ  : NONE
 988          *****************************************************************************/
 989          void PrintShort(unsigned char Page, unsigned char Column, int Dat)
 990          {
 991   1          unsigned int i, j, k, l, m, temp;  
 992   1          if(Dat < 0)
 993   1          {
 994   2              WriteChar_6x8(Page,Column,'-');
 995   2              temp = (unsigned int)(-Dat);  
 996   2          }
 997   1          else
 998   1          {
 999   2              WriteChar_6x8(Page,Column,'+');
1000   2              temp = (unsigned int)Dat;
1001   2          }
1002   1          
1003   1          l = temp/10000;                       //·ÖÀëÍòÎ»
1004   1          m = temp/1000%10;             //·ÖÀëÇ§Î»
1005   1          i = temp/100%10;              //·ÖÀë°ÙÎ»
1006   1          j = temp/10%10;               //·ÖÀëÊ®Î»
1007   1          k = temp%10;                //·ÖÀë¸öÎ»
1008   1          WriteChar_6x8(Page, Column+ 6, l);      //ÏÔÊ¾ÍòÎ»
1009   1          WriteChar_6x8(Page, Column+12, m);      //ÏÔÊ¾Ç§Î»
1010   1          WriteChar_6x8(Page, Column+18, i);      //ÏÔÊ¾°ÙÎ»
1011   1          WriteChar_6x8(Page, Column+24, j);      //ÏÔÊ¾Ê®Î»
1012   1          WriteChar_6x8(Page, Column+30, k);      //ÏÔÊ¾¸öÎ»
1013   1      
1014   1      }
1015          
1016          /*****************************************************************************
1017           º¯ Êý Ãû  : PrintImage
1018           ¹¦ÄÜÃèÊö  : ½«Í¼ÏñÏÔÊ¾³öÀ´
1019           ÊäÈë²ÎÊý  : unsigned char * ImageTable     ¶þÎ¬Í¼ÏñÊý×éµÄµØÖ·
1020                       unsigned char   RowNum         ¶þÎ¬Í¼ÏñµÄÐÐÊý1~64
1021                       unsigned char   ColumnNum      ¶þÎ¬Í¼ÏñµÄÁÐÊý1~128
1022           Êä³ö²ÎÊý  : NONE
1023           ·µ »Ø Öµ  : NONE
1024           ±¸    ×¢  £º¶ÔÓ¦Í¼ÐÎµÄ±àÂëÉú³ÉÇëÊ¹ÓÃÈí¼þImage2Lcd v3.2.
1025                       Êä³öÊý¾ÝÀàÐÍ   £º CÓïÑÔÊý×é£¨*.C£©
1026                 É¨Ãè·½Ê½       £º Êý¾ÝË®Æ½£¬×Ö½Ú´¹Ö±£¨ÕâÑùÈí¼þÊµÏÖ½«ºÜÈÝÒ×ÊµÏÖ£©
1027                 Êä³ö»Ò¶È       £º µ¥É«£¨ÒòÎªËùÑ¡ÓÃµÄOLEDÎªµ¥É«£©
1028                 °üº¬Í·ÏñÍ·Êý¾Ý £º ²»°üº¬£¨°üº¬ÓÃÓÚÉãÏñÍ·ËùÐèµÄÊý×ÖÍ¼ÏñÐÅÏ¢£©
1029                 ×Ö½ÚÄÚÊý¾Ý·´Ðò :  Ñ¡Ôñ·´Ðò£¨¼´»­¡Ì£©
1030                 ×ÔÓÒÖÁ×óÉ¨Ãè   £º ²»Ñ¡Ôñ
1031                 ×Ôµ×ÖÁ¶¥É¨Ãè   £º ²»Ñ¡Ôñ
1032                 ¸ßÎ»ÔÚÇ°       :  ²»Ñ¡Ôñ
1033          *****************************************************************************/
1034          void PrintImage(unsigned char ImageTable[], unsigned char RowNum, unsigned char ColumnNum)
1035          {
1036   1          unsigned char i,j,m,n;
1037   1        unsigned int num = 0;               //±£´æÒ»·ùÍ¼Ïñ°üº¬µÄ×Ö½Ú¸öÊý
1038   1      
C51 COMPILER V9.52.0.0   OLED                                                              08/05/2018 19:15:01 PAGE 18  

1039   1        if(RowNum > 63)        //Ô½½çÅÐ¶Ï
1040   1          RowNum = 63;
1041   1        if(ColumnNum > 127)
1042   1          ColumnNum = 127;
1043   1      
1044   1        m = RowNum/8;     //ÐÐÊý¶Ô8È¡Õû
1045   1        n = RowNum%8;   //ÐÐÊý¶Ô8È¡Óà
1046   1        if(n)       //ÈôÓàÊý²»Îª0£¬¼´½«ÐÐÊý°´8£¨×Ö½Ú£©½øÐÐ·Ö×é£¬ÓÐÓàÊý
1047   1          m = m + 1 ; //Ôò½«²»ÄÜ¹¹³ÉÒ»¸ö×Ö½ÚµÄÐÐÊý²¹ÆëÎªÒ»¸ö×Ö½Ú
1048   1      
1049   1        for(i=0;i<m;i++)
1050   1        { 
1051   2          SetPos(i,0);
1052   2          for(j=0;j<ColumnNum;j++)
1053   2          { 
1054   3            WriteDat(ImageTable[num]);
1055   3            num++;
1056   3          }
1057   2        }
1058   1      }
1059          
1060          //========== ÏÔÊ¾Ð§¹û´¦ÀíÏà¹Øº¯Êý  ===============
1061          /*****************************************************************************
1062           º¯ Êý Ãû  : ConHorScroll
1063           ¹¦ÄÜÃèÊö  : Á¬ÐøË®Æ½¹öÆÁ
1064           ÊäÈë²ÎÊý  : unsigned char StartPage       ¹öÆÁÆðÊ¼µØÖ·
1065                       unsigned char EndPage         ¹öÆÁÖÕÖ¹µØÖ·
1066                       bit Direction                 ¹öÆÁ·½Ïò£¨0£ºÓÒ£»1£º×ó£©
1067                 unsigned char speed       ¹öÆÁËÙ¶È£¨È¡Öµ0~7£©
1068           Êä³ö²ÎÊý  : NONE
1069           ·µ »Ø Öµ  : NONE
1070          *****************************************************************************/
1071          void ConHorScroll(unsigned char StartPage,unsigned char EndPage,bit Direction,unsigned char speed)
1072          {
1073   1        WriteCmd(0x2e);          //ÈôÓÐÒÆÆÁ²Ù×÷£¬ÏÈÍ£Ö¹£¬ÒÔ±ÜÃâÆÆ»µRAMÄÚÈÝ
1074   1        
1075   1        if(Direction)  
1076   1          WriteCmd(0x27);    //×óÒÆ£¨Êµ¼ÊÎªÏÈÍ£Ö¹×óÒÆ£©
1077   1        else
1078   1          WriteCmd(0x26);    //ÓÒÒÆ£¨Êµ¼ÊÎªÏÈÍ£Ö¹ÓÒÒÆ£©
1079   1      
1080   1        WriteCmd(0x00);
1081   1        WriteCmd(StartPage);     //»î¶¯ÇøÓòÆðÊ¼Ò³
1082   1        WriteCmd(speed);         //ÉèÖÃ¹öÆÁËÙ¶È  0£º5Ö¡£»1£º64Ö¡£»2£º128Ö¡£»3£º256Ö¡£»4£º3Ö¡£»5£º4Ö¡£»6£º25Ö¡£»7£
             -º2Ö¡
1083   1        WriteCmd(EndPage);       //»î¶¯ÇøÓòÖÕÖ¹Ò³
1084   1        WriteCmd(0x00);
1085   1        WriteCmd(0xff);
1086   1        WriteCmd(0x2f);      //¼¤»îÒÆÆÁ
1087   1      
1088   1          
1089   1      }
1090          
1091          /*****************************************************************************
1092           º¯ Êý Ãû  : ConVerHorScroll
1093           ¹¦ÄÜÃèÊö  : Á¬Ðø´¹Ö±Ë®Æ½¹öÆÁ£¨¼´Ð±½Ç¹öÆÁ£©
1094           ÊäÈë²ÎÊý  : unsigned char StartPage       ¹öÆÁÆðÊ¼µØÖ·
1095                       unsigned char EndPage         ¹öÆÁÖÕÖ¹µØÖ·
1096                       bit Direction                 ¹öÆÁ·½Ïò£¨0£ºÓÒÉÏ½Ç£»1£º×óÉÏ½Ç£©
1097                 unsigned char speed       ¹öÆÁËÙ¶È  £¨È¡Öµ0~7£©
1098                 unsigned char VerOffset       ´¹Ö±Æ«ÒÆÁ¿£¨È¡Öµ0~63£©,Îª0Ê±½«Ã»ÓÐ´¹Ö±·½ÏòÉÏÒÆ¶¯£¬Ð§¹û½«µÈÍ¬ÓÚË®Æ½ÒÆ¶¯
1099           Êä³ö²ÎÊý  : NONE
C51 COMPILER V9.52.0.0   OLED                                                              08/05/2018 19:15:01 PAGE 19  

1100           ·µ »Ø Öµ  : NONE
1101          *****************************************************************************/
1102          void ConVerHorScroll(unsigned char StartPage,unsigned char EndPage,bit Direction,unsigned char speed,unsig
             -ned char VerOffset)
1103          {
1104   1      
1105   1        WriteCmd(0x2e);          //ÈôÓÐÒÆÆÁ²Ù×÷£¬ÏÈÍ£Ö¹£¬ÒÔ±ÜÃâÆÆ»µRAMÄÚÈÝ
1106   1        if(Direction)  
1107   1          WriteCmd(0x2a);    //Ïò×óÉÏ½ÇÒÆÆÁ 
1108   1        else
1109   1          WriteCmd(0x29);    //ÏòÓÒÉÏ½ÇÒÆÆÁ
1110   1      
1111   1        WriteCmd(0x00);
1112   1        WriteCmd(StartPage);     //»î¶¯ÇøÓòÆðÊ¼Ò³
1113   1        WriteCmd(speed);         //ÉèÖÃ¹öÆÁËÙ¶È  0£º5Ö¡£»1£º64Ö¡£»2£º128Ö¡£»3£º256Ö¡£»4£º3Ö¡£»5£º4Ö¡£»6£º25Ö¡£»7£
             -º2Ö¡
1114   1        WriteCmd(EndPage);       //»î¶¯ÇøÓòÖÕÖ¹Ò³
1115   1        WriteCmd(0x00);
1116   1        WriteCmd(VerOffset);   //´¹Ö±·½ÏòÆ«ÒÆÁ¿£¬¼´Öµ0~63
1117   1        WriteCmd(0x2f);      //¼¤»îÒÆÆÁ
1118   1          
1119   1      }
1120          
1121          /*****************************************************************************
1122           º¯ Êý Ãû  : ConVerHorScroll
1123           ¹¦ÄÜÃèÊö  : ÉèÖÃ´¹Ö±¹öÆÁµÄÇøÓò
1124           ÊäÈë²ÎÊý  : unsigned char FixRowNoe       ¹Ì¶¨ÇøÓòÊ×ÐÐ
1125                       unsigned char ScrollRowNo     ¹Ì¶¨ÇøÓòÎ²ÐÐ£¬¹öÆÁÐÐ´Ó¹Ì¶¨ÇøÓòÎ²ÐÐÏÂÒ»ÐÐ¿ªÊ¼
1126           Êä³ö²ÎÊý  : NONE
1127           ·µ »Ø Öµ  : NONE
1128          *****************************************************************************/
1129          void SetVerScrollArea(unsigned char FixRowNo,unsigned char ScrollRowNo)
1130          {                 //ÅäÖÃËµÃ÷£º
1131   1                        //         1. FixRowNo = 0, ScrollRowNo = 64 £ºÕûÆÁ¹ö¶¯
1132   1        WriteCmd(0xa3);               //         2. FixRowNo = 0, ScrollRowNo < 64 £º¶¥²¿ÇøÓò¹ö¶¯
1133   1        WriteCmd(FixRowNo);       //         3. FixRowNo + ScrollRowNo < 64    £ºÖÐ¼äÆÁ¹ö¶¯
1134   1        WriteCmd(ScrollRowNo);      //         4. FixRowNo + ScrollRowNo = 64    £ºµ×²¿ÇøÓò¹ö¶¯
1135   1      }
1136          
1137          //----------  ÏÔÊ¾Êý×Ö0~9 6x8¸ñÊ½--------------------------------------
1138          void PrintNum_6x8(unsigned char Page,unsigned char Column,unsigned char num)    //numÈ¡ÖµÎª0~9
1139          {
1140   1        unsigned char i;
1141   1      
1142   1        if(Column > 122)
1143   1        {
1144   2          Page = Page + 1;
1145   2          Column = 0;
1146   2        }
1147   1        if(num<10)
1148   1        {
1149   2          SetPos(Page,Column);
1150   2          for(i=0;i<6;i++)
1151   2          {
1152   3            WriteDat(F6x8[num+16][i]);      //Êý×ÖÔÚasciiÂë±íÖÐ´Ó48¿ªÊ¼,F6*8µÄµÚ16ÐÐ¿ªÊ¼
1153   3          }
1154   2        }
1155   1        if((num>9)&&(num<16))
1156   1        {
1157   2          SetPos(Page,Column);
1158   2          for(i=0;i<6;i++)
1159   2          {
C51 COMPILER V9.52.0.0   OLED                                                              08/05/2018 19:15:01 PAGE 20  

1160   3            WriteDat(F6x8[num+23][i]);      //Êý×ÖÔÚasciiÂë±íÖÐ´Ó48¿ªÊ¼£¬F6*8µÄµÚ33ÐÐ¿ªÊ¼£¬µ«10¶ÔÓ¦A£¬ÔÙ¼õµô10Îª23
1161   3          } 
1162   2        }
1163   1      
1164   1      }
1165          
1166          //----------  ÏÔÊ¾Êý×Ö0~9 8x16¸ñÊ½--------------------------------------
1167          void PrintNum_8x16(unsigned char Page,unsigned char Column,unsigned char num)   //numÈ¡ÖµÎª0~15
1168          {
1169   1        unsigned char i;
1170   1         Page <<= 1;  
1171   1        if(Column > 120)
1172   1        {
1173   2          Page = Page + 2;
1174   2          Column = 0;
1175   2        }
1176   1        if(num<10)
1177   1        {
1178   2          SetPos(Page,Column);           //ÉèÖÃÉÏ°ëÒ³ÏÔÊ¾ÏÔÊ¾µÄÎ»ÖÃ
1179   2          for(i=0;i<8;i++)             //ÏÔÊ¾ÉÏ°ëÒ³ÄÚÈÝ
1180   2          {
1181   3            WriteDat(F8X16[num+16][i]);
1182   3          }
1183   2        
1184   2          SetPos(Page+1,Column);           //ÉèÖÃÏÂ°ëÒ³ÏÔÊ¾ÏÔÊ¾µÄÎ»ÖÃ
1185   2          for(i=8;i<16;i++)            //ÏÔÊ¾ÏÂ°ëÒ³ÄÚÈÝ
1186   2          {
1187   3            WriteDat(F8X16[num+16][i]);
1188   3          }
1189   2        }
1190   1        if((num>9)&&(num<16))
1191   1        {
1192   2              SetPos(Page,Column);      //ÉèÖÃÉÏ°ëÒ³ÏÔÊ¾ÏÔÊ¾µÄÎ»ÖÃ
1193   2          for(i=0;i<8;i++)             //ÏÔÊ¾ÉÏ°ëÒ³ÄÚÈÝ
1194   2          {
1195   3            WriteDat(F8X16[num+23][i]);
1196   3          }
1197   2        
1198   2          SetPos(Page+1,Column);           //ÉèÖÃÏÂ°ëÒ³ÏÔÊ¾ÏÔÊ¾µÄÎ»ÖÃ
1199   2          for(i=8;i<16;i++)            //ÏÔÊ¾ÏÂ°ëÒ³ÄÚÈÝ
1200   2          {
1201   3            WriteDat(F8X16[num+23][i]);
1202   3          }
1203   2        }
1204   1      
1205   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   1866    ----
   CONSTANT SIZE    =   1935    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----      65
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----       2
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
