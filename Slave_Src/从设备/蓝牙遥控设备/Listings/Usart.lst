C51 COMPILER V9.52.0.0   USART                                                             08/05/2018 19:11:32 PAGE 1   


C51 COMPILER V9.52.0.0, COMPILATION OF MODULE USART
OBJECT MODULE PLACED IN .\Objects\Usart.obj
COMPILER INVOKED BY: D:\KEIL C51\C51\BIN\C51.EXE Usart.c BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings\Usart.lst) TABS(2) O
                    -BJECT(.\Objects\Usart.obj)

line level    source

   1          /*---------------------------------------------------------------------*/
   2          /* --- STC MCU Limited ------------------------------------------------*/
   3          /* --- STC15F4K60S4 系列 定时器2用作串口1的波特率发生器举例------------*/
   4          /* --- Mobile: (86)13922805190 ----------------------------------------*/
   5          /* --- Fax: 86-0513-55012956,55012947,55012969 ------------------------*/
   6          /* --- Tel: 86-0513-55012928,55012929,55012966-------------------------*/
   7          /* --- Web: www.STCMCU.com --------------------------------------------*/
   8          /* --- Web: www.GXWMCU.com --------------------------------------------*/
   9          /* 如果要在程序中使用此代码,请在程序中注明使用了STC的资料及程序        */
  10          /* 如果要在文章中应用此代码,请在文章中注明使用了STC的资料及程序        */
  11          /*---------------------------------------------------------------------*/
  12          
  13          //本示例在Keil开发环境下请选择Intel的8058芯片型号进行编译
  14          //若无特别说明,工作频率一般为11.0592MHz
  15          
  16          
  17          #include "usart.h"
  18          
  19          volatile bit dat;
  20          #define FOSC 12000000L          //系统频率
  21          #define BAUD 115200             //串口波特率
  22          
  23          #define NONE_PARITY     0       //无校验
  24          #define ODD_PARITY      1       //奇校验
  25          #define EVEN_PARITY     2       //偶校验
  26          #define MARK_PARITY     3       //标记校验
  27          #define SPACE_PARITY    4       //空白校验
  28          
  29          #define PARITYBIT NONE_PARITY   //定义校验位
  30          
  31          
  32          
  33          #define S1_S0 0x40              //P_SW1.6
  34          #define S1_S1 0x80              //P_SW1.7
  35          
  36          
  37          bit busy;
  38          
  39          void SendData(BYTE dat);
  40          
  41          void Usart_init()
  42          {
  43   1      
  44   1      
  45   1          ACC = P_SW1;
  46   1          ACC &= ~(S1_S0 | S1_S1);    //S1_S0=0 S1_S1=0
  47   1          P_SW1 = ACC;                //(P3.0/RxD, P3.1/TxD)
  48   1          
  49   1      //  ACC = P_SW1;
  50   1      //  ACC &= ~(S1_S0 | S1_S1);    //S1_S0=1 S1_S1=0
  51   1      //  ACC |= S1_S0;               //(P3.6/RxD_2, P3.7/TxD_2)
  52   1      //  P_SW1 = ACC;  
  53   1      //  
  54   1      //  ACC = P_SW1;
C51 COMPILER V9.52.0.0   USART                                                             08/05/2018 19:11:32 PAGE 2   

  55   1      //  ACC &= ~(S1_S0 | S1_S1);    //S1_S0=0 S1_S1=1
  56   1      //  ACC |= S1_S1;               //(P1.6/RxD_3, P1.7/TxD_3)
  57   1      //  P_SW1 = ACC;  
  58   1      
  59   1      #if (PARITYBIT == NONE_PARITY)
  60   1          SCON = 0x50;                //8位可变波特率
  61   1      #elif (PARITYBIT == ODD_PARITY) || (PARITYBIT == EVEN_PARITY) || (PARITYBIT == MARK_PARITY)
                  SCON = 0xda;                //9位可变波特率,校验位初始为1
              #elif (PARITYBIT == SPACE_PARITY)
                  SCON = 0xd2;                //9位可变波特率,校验位初始为0
              #endif
  66   1      
  67   1          T2L = (65536 - (FOSC/4/BAUD));   //设置波特率重装值
  68   1          T2H = (65536 - (FOSC/4/BAUD))>>8;
  69   1          AUXR = 0x14;                //T2为1T模式, 并启动定时器2
  70   1          AUXR |= 0x01;               //选择定时器2为串口1的波特率发生器
  71   1          ES = 1;                     //使能串口1中断
  72   1          EA = 1;
  73   1      
  74   1         // SendString("STC15F2K60S2\r\nUart Test !\r\n");
  75   1      //  while(1);
  76   1      }
  77          
  78          /*----------------------------
  79          UART 中断服务程序
  80          -----------------------------*/
  81          void Uart() interrupt 4 using 1
  82          {
  83   1        BYTE buff;
  84   1          if (RI)
  85   1          {
  86   2              RI = 0; 
  87   2            buff=SBUF;
  88   2            if(buff==Slave_adrr)
  89   2            BLEReceive[dat]=SBUF;
  90   2            dat=!dat;
  91   2            //清除RI位
  92   2            //  P0 = SBUF;              //P0显示串口数据
  93   2            //  P22 = RB8;              //P2.2显示校验位
  94   2          }
  95   1          if (TI)
  96   1          {
  97   2              TI = 0;                 //清除TI位
  98   2              busy = 0;               //清忙标志
  99   2          }
 100   1      }
 101          
 102          /*----------------------------
 103          发送串口数据
 104          ----------------------------*/
 105          void SendData(BYTE dat)
 106          {
 107   1          while (busy);               //等待前面的数据发送完成
 108   1          ACC = dat;                  //获取校验位P (PSW.0)
 109   1          if (P)                      //根据P来设置校验位
 110   1          {
 111   2      #if (PARITYBIT == ODD_PARITY)
                      TB8 = 0;                //设置校验位为0
              #elif (PARITYBIT == EVEN_PARITY)
                      TB8 = 1;                //设置校验位为1
              #endif
 116   2          }
C51 COMPILER V9.52.0.0   USART                                                             08/05/2018 19:11:32 PAGE 3   

 117   1          else
 118   1          {
 119   2      #if (PARITYBIT == ODD_PARITY)
                      TB8 = 1;                //设置校验位为1
              #elif (PARITYBIT == EVEN_PARITY)
                      TB8 = 0;                //设置校验位为0
              #endif
 124   2          }
 125   1          busy = 1;
 126   1          SBUF = ACC;                 //写数据到UART数据寄存器
 127   1      }
 128          
 129          /*----------------------------
 130          发送字符串
 131          ----------------------------*/
 132          //void SendString(char *s)
 133          //{
 134          //    while (*s)                  //检测字符串结束标志
 135          //    {
 136          //        SendData(*s++);         //发送当前字符
 137          //    }
 138          //}
 139          
 140          
 141          void SendString(char *s,unsigned char Size)
 142          {
 143   1        unsigned char i=0;
 144   1        for(i=0;i<Size;i++)
 145   1          SendData(*s++);         //发送当前字符
 146   1      
 147   1      }
 148          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    113    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----       3
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      2    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
